!function(t){var e={};function i(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,i),o.l=!0,o.exports}i.m=t,i.c=e,i.d=function(t,e,r){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)i.d(r,o,function(e){return t[e]}.bind(null,o));return r},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=378)}({0:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=i(4);e.Vector4f=r.Vector4f;var o=i(1);e.Vector3f=o.Vector3f;var n=i(27);e.Matrix3f=n.Matrix3f;var s=i(17);e.Matrix4f=s.Matrix4f;var x=i(24);e.Vector2f=x.Vector2f},1:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});class r{constructor(t=0,e=0,i=0){this.x=t,this.y=e,this.z=i}mult(t){return new r(this.x*t,this.y*t,this.z*t)}sub(t){return new r(this.x-t.x,this.y-t.y,this.z-t.z)}sub2(t,e){this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z}mul(t){return new r(this.x*t,this.y*t,this.z*t)}add(t){return new r(this.x+t.x,this.y+t.y,this.z+t.z)}add2(t,e){this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z}cross(t){return new r(this.y*t.z-this.z*t.y,this.z*t.x-this.x*t.z,this.x*t.y-this.y*t.x)}cross2(t,e){this.x=t.y*e.z-t.z*e.y,this.y=t.z*e.x-t.x*e.z,this.z=t.x*e.y-t.y*e.x}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}normalize(){const t=1/this.length();return this.mul(t)}normalize2(){const t=1/this.length();this.x*=t,this.y*=t,this.z*=t}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}}e.Vector3f=r},10:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.AbstractTriangleRasterizer=class{}},11:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=i(1);e.TexturedTriangleRasterizer=class{constructor(t){this.framebuffer=t,this.temp=null}drawTriangleDDA(t,e,i){if(t.position.y>i.position.y&&(this.temp=t,t=i,i=this.temp),t.position.y>e.position.y&&(this.temp=t,t=e,e=this.temp),e.position.y>i.position.y&&(this.temp=e,e=i,i=this.temp),t.position.y!==i.position.y)if((i.position.x-t.position.x)*(e.position.y-t.position.y)/(i.position.y-t.position.y)+t.position.x>e.position.x)this.fillLongRightTriangle2(t,e,i);else{let o=t.textureCoordinate,n=e.textureCoordinate,s=i.textureCoordinate;this.fillLongLeftTriangle2(t.position,e.position,i.position,new r.Vector3f(o.u,o.v,0),new r.Vector3f(n.u,n.v,0),new r.Vector3f(s.u,s.v,0))}}fillLongRightTriangle2(t,e,i){let r=e.position.y-t.position.y,o=i.position.y-t.position.y,n=(e.position.x-t.position.x)/r,s=(i.position.x-t.position.x)/o,x=(e.textureCoordinate.u/e.position.z-t.textureCoordinate.u/t.position.z)/r,y=(i.textureCoordinate.u/i.position.z-t.textureCoordinate.u/t.position.z)/o,a=(e.textureCoordinate.v/e.position.z-t.textureCoordinate.v/t.position.z)/r,h=(i.textureCoordinate.v/i.position.z-t.textureCoordinate.v/t.position.z)/o,z=(1/e.position.z-1/t.position.z)/r,m=(1/i.position.z-1/t.position.z)/o,f=1/t.position.z,l=1/t.position.z,u=t.textureCoordinate.u/t.position.z,c=t.textureCoordinate.v/t.position.z,p=t.textureCoordinate.u/t.position.z,d=t.textureCoordinate.v/t.position.z,w=t.position.x,M=t.position.x,b=t.position.y;for(let t=0;t<r;t++){let t=Math.round(M)-Math.round(w),e=320*Math.round(b)+Math.round(w),i=(l-f)/t,r=(p-u)/t,o=(d-c)/t,g=f,j=u,C=c;for(let n=0;n<t;n++){if(g<this.framebuffer.wBuffer[e]){this.framebuffer.wBuffer[e]=g;let t=1/g,i=0|Math.max(Math.min(j*t*this.framebuffer.bob.width,this.framebuffer.bob.width-1),0),r=0|Math.max(Math.min(C*t*this.framebuffer.bob.height,this.framebuffer.bob.height-1),0),o=this.framebuffer.bob.texture[i+r*this.framebuffer.bob.width];this.framebuffer.framebuffer[e]=o}e++,g+=i,j+=r,C+=o}w+=n,M+=s,b++,f+=z,l+=m,u+=x,p+=y,c+=a,d+=h}if(0!=(r=i.position.y-e.position.y)){n=(i.position.x-e.position.x)/r,z=(1/i.position.z-1/e.position.z)/r,x=(i.textureCoordinate.u/i.position.z-e.textureCoordinate.u/e.position.z)/r,a=(i.textureCoordinate.v/i.position.z-e.textureCoordinate.v/e.position.z)/r,f=1/e.position.z,u=e.textureCoordinate.u/e.position.z,c=e.textureCoordinate.v/e.position.z,w=e.position.x,b=e.position.y;for(let t=0;t<r;t++){let t=Math.round(M)-Math.round(w),e=320*Math.round(b)+Math.round(w),i=(l-f)/t,r=(p-u)/t,o=(d-c)/t,g=f,j=u,C=c;for(let n=0;n<t;n++){if(g<this.framebuffer.wBuffer[e]){this.framebuffer.wBuffer[e]=g;let t=1/g,i=0|Math.max(Math.min(j*t*this.framebuffer.bob.width,this.framebuffer.bob.width-1),0),r=0|Math.max(Math.min(C*t*this.framebuffer.bob.height,this.framebuffer.bob.height-1),0),o=this.framebuffer.bob.texture[i+r*this.framebuffer.bob.width];this.framebuffer.framebuffer[e]=o}e++,g+=i,j+=r,C+=o}w+=n,M+=s,b++,f+=z,l+=m,u+=x,p+=y,c+=a,d+=h}}}fillLongLeftTriangle2(t,e,i,r,o,n){let s=e.y-t.y,x=i.y-t.y,y=(e.x-t.x)/s,a=(i.x-t.x)/x,h=(n.x/i.z-r.x/t.z)/x,z=(o.x/e.z-r.x/t.z)/s,m=(n.y/i.z-r.y/t.z)/x,f=(o.y/e.z-r.y/t.z)/s,l=(1/e.z-1/t.z)/s,u=(1/i.z-1/t.z)/x,c=t.x,p=t.x,d=1/t.z,w=1/t.z,M=r.x/t.z,b=r.y/t.z,g=r.x/t.z,j=r.y/t.z,C=t.x,v=t.x,P=t.y;for(let t=0;t<s;t++){let t=Math.round(v)-Math.round(C),e=320*Math.round(P)+Math.round(C),i=(w-d)/t,r=(g-M)/t,o=(j-b)/t,n=d,s=M,x=b;for(let y=0;y<t;y++){if(n<this.framebuffer.wBuffer[e]){this.framebuffer.wBuffer[e]=n;let t=1/n,i=0|Math.max(Math.min(s*t*this.framebuffer.bob.width,this.framebuffer.bob.width-1),0),r=0|Math.max(Math.min(x*t*this.framebuffer.bob.height,this.framebuffer.bob.height-1),0),o=this.framebuffer.bob.texture[i+r*this.framebuffer.bob.width];this.framebuffer.framebuffer[e]=o}e++,n+=i,s+=r,x+=o}C+=a,v+=y,P++,c+=a,p+=y,d+=u,w+=l,M+=h,g+=z,b+=m,j+=f}s=i.y-e.y,y=(i.x-e.x)/s,l=(1/i.z-1/e.z)/s,z=(n.x/i.z-o.x/e.z)/s,f=(n.y/i.z-o.y/e.z)/s,p=e.x,w=1/e.z,g=o.x/e.z,j=o.y/e.z,v=e.x,P=e.y;for(let t=0;t<s;t++){let t=Math.round(v)-Math.round(C),e=320*Math.round(P)+Math.round(C),i=(w-d)/t,r=(g-M)/t,o=(j-b)/t,n=d,s=M,x=b;for(let y=0;y<t;y++){if(n<this.framebuffer.wBuffer[e]){this.framebuffer.wBuffer[e]=n;let t=1/n,i=0|Math.max(Math.min(s*t*this.framebuffer.bob.width,this.framebuffer.bob.width-1),0),r=0|Math.max(Math.min(x*t*this.framebuffer.bob.height,this.framebuffer.bob.height-1),0),o=this.framebuffer.bob.texture[i+r*this.framebuffer.bob.width];this.framebuffer.framebuffer[e]=o}e++,n+=i,s+=r,x+=o}C+=a,v+=y,P++,c+=a,p+=y,d+=u,w+=l,M+=h,g+=z,b+=m,j+=f}}}},12:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=i(2),o=i(4),n=i(3),s=i(5),x=i(6);e.RightClipEdge=class extends x.AbstractClipEdge{isInside(t){return t.projection.x<=r.Framebuffer.maxWindow.x}isInside2(t){return t.position.x<320}computeIntersection(t,e){const i=new s.Vertex,n=1/(e.projection.x-t.projection.x),x=(r.Framebuffer.maxWindow.x-t.projection.x)*n;return i.color=e.color.sub(t.color).mul(x).add(t.color),i.projection=new o.Vector4f(r.Framebuffer.maxWindow.x,t.projection.y+(e.projection.y-t.projection.y)*x,1/(1/t.projection.z+(1/e.projection.z-1/t.projection.z)*x)),i}computeIntersection2(t,e){let i=new s.Vertex;i.position=new o.Vector4f(r.Framebuffer.maxWindow.x+1,Math.round(t.position.y+(e.position.y-t.position.y)*(r.Framebuffer.maxWindow.x+1-t.position.x)/(e.position.x-t.position.x)),1/(1/t.position.z+(1/e.position.z-1/t.position.z)*(r.Framebuffer.maxWindow.x+1-t.position.x)/(e.position.x-t.position.x)));let x=new n.TextureCoordinate,y=i.position.z;return x.u=(t.textureCoordinate.u/t.position.z+(e.textureCoordinate.u/e.position.z-t.textureCoordinate.u/t.position.z)*(r.Framebuffer.maxWindow.x+1-t.position.x)/(e.position.x-t.position.x))*y,x.v=(t.textureCoordinate.v/t.position.z+(e.textureCoordinate.v/e.position.z-t.textureCoordinate.v/t.position.z)*(r.Framebuffer.maxWindow.x+1-t.position.x)/(e.position.x-t.position.x))*y,i.textureCoordinate=x,i}}},13:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=i(6),o=i(3),n=i(5),s=i(2),x=i(4);e.LeftClipEdge=class extends r.AbstractClipEdge{isInside(t){return t.projection.x>=0}isInside2(t){return t.position.x>=0}computeIntersection(t,e){const i=new n.Vertex,r=(s.Framebuffer.minWindow.x-t.projection.x)/(e.projection.x-t.projection.x);return i.color=e.color.sub(t.color).mul(r).add(t.color),i.projection=new x.Vector4f(s.Framebuffer.minWindow.x,t.projection.y+(e.projection.y-t.projection.y)*r,1/(1/t.projection.z+(1/e.projection.z-1/t.projection.z)*r)),i}computeIntersection2(t,e){let i=new n.Vertex;i.position=new x.Vector4f(s.Framebuffer.minWindow.x,Math.round(t.position.y+(e.position.y-t.position.y)*(s.Framebuffer.minWindow.x-t.position.x)/(e.position.x-t.position.x)),1/(1/t.position.z+(1/e.position.z-1/t.position.z)*(s.Framebuffer.minWindow.x-t.position.x)/(e.position.x-t.position.x)));let r=new o.TextureCoordinate,y=i.position.z;return r.u=(t.textureCoordinate.u/t.position.z+(e.textureCoordinate.u/e.position.z-t.textureCoordinate.u/t.position.z)*(s.Framebuffer.minWindow.x-t.position.x)/(e.position.x-t.position.x))*y,r.v=(t.textureCoordinate.v/t.position.z+(e.textureCoordinate.v/e.position.z-t.textureCoordinate.v/t.position.z)*(s.Framebuffer.minWindow.x-t.position.x)/(e.position.x-t.position.x))*y,i.textureCoordinate=r,i}}},14:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=i(2),o=i(0),n=i(3),s=i(5),x=i(6);e.BottomClipEdge=class extends x.AbstractClipEdge{isInside(t){return t.projection.y>=r.Framebuffer.minWindow.y}isInside2(t){return t.position.y>=r.Framebuffer.minWindow.y}computeIntersection(t,e){const i=new s.Vertex,n=(r.Framebuffer.minWindow.y-t.projection.y)/(e.projection.y-t.projection.y);return i.color=e.color.sub(t.color).mul(n).add(t.color),i.projection=new o.Vector4f(t.projection.x+(e.projection.x-t.projection.x)*n,r.Framebuffer.minWindow.y,1/(1/t.projection.z+(1/e.projection.z-1/t.projection.z)*n)),i}computeIntersection2(t,e){const i=new s.Vertex;i.position=new o.Vector4f(Math.round(t.position.x+(e.position.x-t.position.x)*(r.Framebuffer.minWindow.y-t.position.y)/(e.position.y-t.position.y)),r.Framebuffer.minWindow.y,1/(1/t.position.z+(1/e.position.z-1/t.position.z)*(r.Framebuffer.minWindow.y-t.position.y)/(e.position.y-t.position.y)));const x=new n.TextureCoordinate,y=i.position.z;return x.u=(t.textureCoordinate.u/t.position.z+(e.textureCoordinate.u/e.position.z-t.textureCoordinate.u/t.position.z)*(r.Framebuffer.minWindow.y-t.position.y)/(e.position.y-t.position.y))*y,x.v=(t.textureCoordinate.v/t.position.z+(e.textureCoordinate.v/e.position.z-t.textureCoordinate.v/t.position.z)*(r.Framebuffer.minWindow.y-t.position.y)/(e.position.y-t.position.y))*y,i.textureCoordinate=x,i}}},15:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=i(2),o=i(0),n=i(3),s=i(5),x=i(6);e.TopClipEdge=class extends x.AbstractClipEdge{isInside(t){return t.projection.y<=r.Framebuffer.maxWindow.y}isInside2(t){return t.position.y<r.Framebuffer.maxWindow.y+1}computeIntersection(t,e){let i=new s.Vertex;const n=(r.Framebuffer.maxWindow.y-t.projection.y)/(e.projection.y-t.projection.y);return i.color=e.color.sub(t.color).mul(n).add(t.color),i.projection=new o.Vector4f(t.projection.x+(e.projection.x-t.projection.x)*n,r.Framebuffer.maxWindow.y,1/(1/t.projection.z+(1/e.projection.z-1/t.projection.z)*n)),i}computeIntersection2(t,e){let i=new s.Vertex;i.position=new o.Vector4f(Math.round(t.position.x+(e.position.x-t.position.x)*(r.Framebuffer.maxWindow.y+1-t.position.y)/(e.position.y-t.position.y)),r.Framebuffer.maxWindow.y+1,1/(1/t.position.z+(1/e.position.z-1/t.position.z)*(r.Framebuffer.maxWindow.y+1-t.position.y)/(e.position.y-t.position.y)));let x=new n.TextureCoordinate,y=i.position.z;return x.u=(t.textureCoordinate.u/t.position.z+(e.textureCoordinate.u/e.position.z-t.textureCoordinate.u/t.position.z)*(r.Framebuffer.maxWindow.y+1-t.position.y)/(e.position.y-t.position.y))*y,x.v=(t.textureCoordinate.v/t.position.z+(e.textureCoordinate.v/e.position.z-t.textureCoordinate.v/t.position.z)*(r.Framebuffer.maxWindow.y+1-t.position.y)/(e.position.y-t.position.y))*y,i.textureCoordinate=x,i}}},16:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=i(8);e.AbstractRenderingPipeline=class{constructor(t){this.framebuffer=t,this.NEAR_PLANE_Z=-1.7,this.cullMode=r.CullFace.BACK}setCullFace(t){this.cullMode=t}setAlpha(t){this.alpha=Math.max(Math.min(t,1),0)}isInFrontOfNearPlane(t){return t.z<this.NEAR_PLANE_Z}isTriangleCCW(t,e,i){const o=t.x*e.y-e.x*t.y+e.x*i.y-i.x*e.y+i.x*t.y-t.x*i.y;return this.cullMode===r.CullFace.BACK?o<0:o>0}isTriangleCCW2(t,e,i,o){const n=t.x*e.y-e.x*t.y+e.x*i.y-i.x*e.y+i.x*o.y-o.x*i.y+o.x*t.y-t.x*o.y;return this.cullMode===r.CullFace.BACK?n<0:n>0}}},17:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=i(1),o=i(4);class n{static constructIdentityMatrix(){let t=new n;return t.m11=1,t.m12=0,t.m13=0,t.m14=0,t.m21=0,t.m22=1,t.m23=0,t.m24=0,t.m31=0,t.m32=0,t.m33=1,t.m34=0,t.m41=0,t.m42=0,t.m43=0,t.m44=1,t}setIdentityMatrix(){this.m11=1,this.m12=0,this.m13=0,this.m14=0,this.m21=0,this.m22=1,this.m23=0,this.m24=0,this.m31=0,this.m32=0,this.m33=1,this.m34=0,this.m41=0,this.m42=0,this.m43=0,this.m44=1}transpose(){const t=new n;return t.m11=this.m11,t.m12=this.m21,t.m13=this.m31,t.m14=this.m41,t.m21=this.m12,t.m22=this.m22,t.m23=this.m32,t.m24=this.m42,t.m31=this.m13,t.m32=this.m23,t.m33=this.m33,t.m34=this.m43,t.m41=this.m14,t.m42=this.m24,t.m43=this.m34,t.m44=this.m44,t}computeNormalMatrix(){return this.inverse().transpose()}inverse(){const t=n.constructIdentityMatrix();t.m14=-this.m14,t.m24=-this.m24,t.m34=-this.m34;const e=1/Math.sqrt(this.m11*this.m11+this.m12*this.m12+this.m13*this.m13),i=1/Math.sqrt(this.m21*this.m21+this.m22*this.m22+this.m23*this.m23),r=1/Math.sqrt(this.m31*this.m31+this.m32*this.m32+this.m33*this.m33),o=n.constructIdentityMatrix();return o.m11=this.m11*e,o.m21=this.m12*e,o.m31=this.m13*e,o.m12=this.m21*i,o.m22=this.m22*i,o.m32=this.m23*i,o.m13=this.m31*r,o.m23=this.m32*r,o.m33=this.m33*r,o.multiplyMatrix(t)}getInverseRotation(){let t=n.constructIdentityMatrix();return t.m11=1*this.m11,t.m21=1*this.m12,t.m31=1*this.m13,t.m12=1*this.m21,t.m22=1*this.m22,t.m32=1*this.m23,t.m13=1*this.m31,t.m23=1*this.m32,t.m33=1*this.m33,t}getRotation(){let t=n.constructIdentityMatrix();return t.m11=this.m11,t.m21=this.m21,t.m31=this.m31,t.m12=this.m12,t.m22=this.m22,t.m32=this.m32,t.m13=this.m13,t.m23=this.m23,t.m33=this.m33,t}static constructShadowMatrix(t){let e=new r.Vector3f(0,-1.5,0),i=new r.Vector3f(0,1,0),o=new r.Vector3f(0,11,0),s=-e.dot(i),x=i.x*o.x+i.y*o.y+i.z*o.z,y=new n;return y.m11=x+s-o.x*i.x,y.m12=-o.x*i.y,y.m13=-o.x*i.z,y.m14=-o.x*s,y.m21=-o.y*i.x,y.m22=x+s-o.y*i.y,y.m23=-o.y*i.z,y.m24=-o.y*s,y.m31=-o.z*i.x,y.m32=-o.z*i.y,y.m33=x+s-o.z*i.z,y.m34=-o.z*s,y.m41=-i.x,y.m42=-i.y,y.m43=-i.z,y.m44=x,y}static constructTranslationMatrix(t,e,i){let r=new n;return r.m11=1,r.m12=0,r.m13=0,r.m14=t,r.m21=0,r.m22=1,r.m23=0,r.m24=e,r.m31=0,r.m32=0,r.m33=1,r.m34=i,r.m41=0,r.m42=0,r.m43=0,r.m44=1,r}setTranslationMatrix(t,e,i){this.m11=1,this.m12=0,this.m13=0,this.m14=t,this.m21=0,this.m22=1,this.m23=0,this.m24=e,this.m31=0,this.m32=0,this.m33=1,this.m34=i,this.m41=0,this.m42=0,this.m43=0,this.m44=1}static constructXRotationMatrix(t){let e=new n;return e.m11=1,e.m12=0,e.m13=0,e.m14=0,e.m21=0,e.m22=Math.cos(t),e.m23=-Math.sin(t),e.m24=0,e.m31=0,e.m32=Math.sin(t),e.m33=Math.cos(t),e.m34=0,e.m41=0,e.m42=0,e.m43=0,e.m44=1,e}setXRotationMatrix(t){this.m11=1,this.m12=0,this.m13=0,this.m14=0,this.m21=0,this.m22=Math.cos(t),this.m23=-Math.sin(t),this.m24=0,this.m31=0,this.m32=Math.sin(t),this.m33=Math.cos(t),this.m34=0,this.m41=0,this.m42=0,this.m43=0,this.m44=1}setScaleMatrix(t,e,i){this.m11=t,this.m12=0,this.m13=0,this.m14=0,this.m21=0,this.m22=e,this.m23=0,this.m24=0,this.m31=0,this.m32=0,this.m33=i,this.m34=0,this.m41=0,this.m42=0,this.m43=0,this.m44=1}setYRotationMatrix(t){this.m11=Math.cos(t),this.m12=0,this.m13=Math.sin(t),this.m14=0,this.m21=0,this.m22=1,this.m23=0,this.m24=0,this.m31=-Math.sin(t),this.m32=0,this.m33=Math.cos(t),this.m34=0,this.m41=0,this.m42=0,this.m43=0,this.m44=1}static constructYRotationMatrix(t){let e=new n;return e.m11=Math.cos(t),e.m12=0,e.m13=Math.sin(t),e.m14=0,e.m21=0,e.m22=1,e.m23=0,e.m24=0,e.m31=-Math.sin(t),e.m32=0,e.m33=Math.cos(t),e.m34=0,e.m41=0,e.m42=0,e.m43=0,e.m44=1,e}static constructZRotationMatrix(t){let e=new n;return e.m11=Math.cos(t),e.m12=-Math.sin(t),e.m13=0,e.m14=0,e.m21=Math.sin(t),e.m22=Math.cos(t),e.m23=0,e.m24=0,e.m31=0,e.m32=0,e.m33=1,e.m34=0,e.m41=0,e.m42=0,e.m43=0,e.m44=1,e}static constructScaleMatrix(t,e=t,i=e){let r=new n;return r.m11=t,r.m12=0,r.m13=0,r.m14=0,r.m21=0,r.m22=e,r.m23=0,r.m24=0,r.m31=0,r.m32=0,r.m33=i,r.m34=0,r.m41=0,r.m42=0,r.m43=0,r.m44=1,r}multiplyMatrix(t){let e=new n;return e.m11=this.m11*t.m11+this.m12*t.m21+this.m13*t.m31+this.m14*t.m41,e.m21=this.m21*t.m11+this.m22*t.m21+this.m23*t.m31+this.m24*t.m41,e.m31=this.m31*t.m11+this.m32*t.m21+this.m33*t.m31+this.m34*t.m41,e.m41=this.m41*t.m11+this.m42*t.m21+this.m43*t.m31+this.m44*t.m41,e.m12=this.m11*t.m12+this.m12*t.m22+this.m13*t.m32+this.m14*t.m42,e.m22=this.m21*t.m12+this.m22*t.m22+this.m23*t.m32+this.m24*t.m42,e.m32=this.m31*t.m12+this.m32*t.m22+this.m33*t.m32+this.m34*t.m42,e.m42=this.m41*t.m12+this.m42*t.m22+this.m43*t.m32+this.m44*t.m42,e.m13=this.m11*t.m13+this.m12*t.m23+this.m13*t.m33+this.m14*t.m43,e.m23=this.m21*t.m13+this.m22*t.m23+this.m23*t.m33+this.m24*t.m43,e.m33=this.m31*t.m13+this.m32*t.m23+this.m33*t.m33+this.m34*t.m43,e.m43=this.m41*t.m13+this.m42*t.m23+this.m43*t.m33+this.m44*t.m43,e.m14=this.m11*t.m14+this.m12*t.m24+this.m13*t.m34+this.m14*t.m44,e.m24=this.m21*t.m14+this.m22*t.m24+this.m23*t.m34+this.m24*t.m44,e.m34=this.m31*t.m14+this.m32*t.m24+this.m33*t.m34+this.m34*t.m44,e.m44=this.m41*t.m14+this.m42*t.m24+this.m43*t.m34+this.m44*t.m44,e}multiply2(t,e){this.m11=t.m11*e.m11+t.m12*e.m21+t.m13*e.m31+t.m14*e.m41,this.m21=t.m21*e.m11+t.m22*e.m21+t.m23*e.m31+t.m24*e.m41,this.m31=t.m31*e.m11+t.m32*e.m21+t.m33*e.m31+t.m34*e.m41,this.m41=t.m41*e.m11+t.m42*e.m21+t.m43*e.m31+t.m44*e.m41,this.m12=t.m11*e.m12+t.m12*e.m22+t.m13*e.m32+t.m14*e.m42,this.m22=t.m21*e.m12+t.m22*e.m22+t.m23*e.m32+t.m24*e.m42,this.m32=t.m31*e.m12+t.m32*e.m22+t.m33*e.m32+t.m34*e.m42,this.m42=t.m41*e.m12+t.m42*e.m22+t.m43*e.m32+t.m44*e.m42,this.m13=t.m11*e.m13+t.m12*e.m23+t.m13*e.m33+t.m14*e.m43,this.m23=t.m21*e.m13+t.m22*e.m23+t.m23*e.m33+t.m24*e.m43,this.m33=t.m31*e.m13+t.m32*e.m23+t.m33*e.m33+t.m34*e.m43,this.m43=t.m41*e.m13+t.m42*e.m23+t.m43*e.m33+t.m44*e.m43,this.m14=t.m11*e.m14+t.m12*e.m24+t.m13*e.m34+t.m14*e.m44,this.m24=t.m21*e.m14+t.m22*e.m24+t.m23*e.m34+t.m24*e.m44,this.m34=t.m31*e.m14+t.m32*e.m24+t.m33*e.m34+t.m34*e.m44,this.m44=t.m41*e.m14+t.m42*e.m24+t.m43*e.m34+t.m44*e.m44}multiply(t){return new r.Vector3f(this.m11*t.x+this.m12*t.y+this.m13*t.z+this.m14,this.m21*t.x+this.m22*t.y+this.m23*t.z+this.m24,this.m31*t.x+this.m32*t.y+this.m33*t.z+this.m34)}multiplyHom(t){return new o.Vector4f(this.m11*t.x+this.m12*t.y+this.m13*t.z+this.m14*t.w,this.m21*t.x+this.m22*t.y+this.m23*t.z+this.m24*t.w,this.m31*t.x+this.m32*t.y+this.m33*t.z+this.m34*t.w,this.m41*t.x+this.m42*t.y+this.m43*t.z+this.m44*t.w)}multiplyHomArr(t,e){e.x=this.m11*t.x+this.m12*t.y+this.m13*t.z+this.m14*t.w,e.y=this.m21*t.x+this.m22*t.y+this.m23*t.z+this.m24*t.w,e.z=this.m31*t.x+this.m32*t.y+this.m33*t.z+this.m34*t.w}multiplyHomArr2(t,e){e.x=this.m11*t.x+this.m12*t.y+this.m13*t.z+this.m14*t.w,e.y=this.m21*t.x+this.m22*t.y+this.m23*t.z+this.m24*t.w,e.z=this.m31*t.x+this.m32*t.y+this.m33*t.z+this.m34*t.w,e.w=this.m41*t.x+this.m42*t.y+this.m43*t.z+this.m44*t.w,e.x/=e.w,e.y/=e.w,e.z/=e.w}multiplyArr(t,e){e.x=this.m11*t.x+this.m12*t.y+this.m13*t.z+this.m14,e.y=this.m21*t.x+this.m22*t.y+this.m23*t.z+this.m24,e.z=this.m31*t.x+this.m32*t.y+this.m33*t.z+this.m34}}e.Matrix4f=n},18:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=i(9),o=i(0),n=i(29),s=i(30),x=i(21),y=i(23),a=i(5),h=i(16),z=i(32);e.FlatShadingRenderingPipeline=class extends h.AbstractRenderingPipeline{constructor(t){super(t),this.fog=null,this.lights=null,this.material=null,this.lighting=!0,this.color=r.Color.WHITE,this.triangleRasterizer=null,this.projectedVertices=new Array(new o.Vector4f(0,0,0,1),new o.Vector4f(0,0,0,1),new o.Vector4f(0,0,0,1)),this.vertexArray=new Array(new a.Vertex,new a.Vertex,new a.Vertex);const e=new x.PointLight;e.ambientIntensity=new o.Vector4f(1,1,1,1),e.diffuseIntensity=new o.Vector4f(1,1,1,1),e.specularIntensity=new o.Vector4f(1,1,1,1),e.position=new o.Vector4f(3,0,-2,1);const i=new x.PointLight;i.ambientIntensity=new o.Vector4f(0,0,1,1),i.diffuseIntensity=new o.Vector4f(0,.6,1,1),i.specularIntensity=new o.Vector4f(.8,.8,.8,1),i.position=new o.Vector4f(0,-380,-180,1),this.lights=[e,i];const n=new y.Material;n.ambientColor=new o.Vector4f(.12,.14,.1,0),n.diffuseColor=new o.Vector4f(.38,.4,.4,1),n.specularColor=new o.Vector4f(.8,.5,.5,0),n.shininess=2,this.material=n,this.triangleRasterizer=new z.SubPixelFlatShadingTriangleRasterizer(this.framebuffer)}setFog(t){this.fog=t}setLights(t){this.lights=t}enableLighting(t){this.lighting=t}setMaterial(t){this.material=t}setColor(t){this.color=t}draw(t,e){const i=e.computeNormalMatrix();for(let e=0;e<t.normals.length;e++)i.multiplyHomArr(t.normals[e],t.transformedNormals[e]);for(let i=0;i<t.points.length;i++)e.multiplyHomArr(t.points[i],t.transformedPoints[i]);for(let e=0;e<t.faces.length;e++){const i=t.transformedPoints[t.faces[e].v1],r=t.transformedPoints[t.faces[e].v2],o=t.transformedPoints[t.faces[e].v3],n=t.transformedNormals[t.faces[e].n1],s=t.transformedNormals[t.faces[e].n2],x=t.transformedNormals[t.faces[e].n3];if(this.isInFrontOfNearPlane(i)&&this.isInFrontOfNearPlane(r)&&this.isInFrontOfNearPlane(o))this.project2(i,this.projectedVertices[0]),this.project2(r,this.projectedVertices[1]),this.project2(o,this.projectedVertices[2]),this.vertexArray[0].position=i,this.vertexArray[0].projection=this.projectedVertices[0],this.vertexArray[0].normal=n,this.vertexArray[1].position=r,this.vertexArray[1].projection=this.projectedVertices[1],this.vertexArray[1].normal=s,this.vertexArray[2].position=o,this.vertexArray[2].projection=this.projectedVertices[2],this.vertexArray[2].normal=x,this.renderConvexPolygon(this.vertexArray,!0);else{if(!(this.isInFrontOfNearPlane(i)||this.isInFrontOfNearPlane(r)||this.isInFrontOfNearPlane(o)))continue;{this.vertexArray[0].position=i,this.vertexArray[1].position=r,this.vertexArray[2].position=o,this.lighting?(this.vertexArray[0].color=this.computeColor(n,i),this.vertexArray[1].color=this.computeColor(s,r),this.vertexArray[2].color=this.computeColor(x,o)):(this.vertexArray[0].color=this.color,this.vertexArray[1].color=this.color,this.vertexArray[2].color=this.color);const t=this.zClipTriangle(this.vertexArray);if(t.length<3)return;for(let e=0;e<t.length;e++)t[e].projection=this.project(t[e].position);this.renderConvexPolygon(t)}}}}project(t){return new o.Vector4f(160+292*t.x/-t.z,100-292*t.y/-t.z,t.z)}project2(t,e){e.x=160+292*t.x/-t.z,e.y=100-292*t.y/-t.z,e.z=t.z}computeNearPlaneIntersection(t,e){const i=(this.NEAR_PLANE_Z-t.position.z)/(e.position.z-t.position.z),r=new a.Vertex;return r.position=new o.Vector4f(i*(e.position.x-t.position.x)+t.position.x,i*(e.position.y-t.position.y)+t.position.y,this.NEAR_PLANE_Z),r.color=e.color.sub(t.color).mul(i).add(t.color),r}zClipTriangle(t){const e=t,i=new Array;let r=e[e.length-1];for(let t=0;t<e.length;t++){const o=e[t];this.isInFrontOfNearPlane(o.position)?(this.isInFrontOfNearPlane(r.position)||i.push(this.computeNearPlaneIntersection(r,o)),i.push(o)):this.isInFrontOfNearPlane(r.position)&&i.push(this.computeNearPlaneIntersection(r,o)),r=o}return i}renderConvexPolygon(t,e=!1){if(3===t.length&&!this.isTriangleCCW(t[0].projection,t[1].projection,t[2].projection))return;if(e&&(this.lighting?(this.vertexArray[0].color=this.computeColor(this.vertexArray[0].normal,this.vertexArray[0].position),this.vertexArray[1].color=this.computeColor(this.vertexArray[1].normal,this.vertexArray[1].position),this.vertexArray[2].color=this.computeColor(this.vertexArray[2].normal,this.vertexArray[2].position)):(this.vertexArray[0].color=this.color,this.vertexArray[1].color=this.color,this.vertexArray[2].color=this.color)),4===t.length&&!this.isTriangleCCW2(t[0].projection,t[1].projection,t[2].projection,t[3].projection))return;const i=n.SutherlandHodgman2DClipper.clipConvexPolygon(t);i.length<3||(3===i.length?this.triangleRasterizer.drawTriangleDDA(i[0],i[1],i[2]):this.triangulateConvexPolygon(i))}triangulateConvexPolygon(t){const e=t[0],i=t.length-2;for(let r=0;r<i;r++)this.triangleRasterizer.drawTriangleDDA(e,t[1+r],t[2+r])}computeColor(t,e){let i=(new s.PhongLighting).computeColor(this.material,this.lights,t,e);return null!==this.fog&&(i=this.fog.computeVertexColor(i,e)),new r.Color(Math.min(255,255*i.x),Math.min(255,255*i.y),Math.min(255,255*i.z),255)}}},19:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=i(0);e.AbstractGeometricObject=class{buildMesh(t,e,i=!1){this.inverse=i;const o=new Array;for(let i=0;i<e.length;i+=3){let r=t[e[i+1]].sub(t[e[i]]).cross(t[e[i+2]].sub(t[e[i]]));o.push(this.inverse?r.normalize().mul(-1):r.normalize())}let n=new Array;for(let t=0;t<e.length;t+=3)n.push({n1:t/3,n2:t/3,n3:t/3,v1:e[0+t],v2:e[1+t],v3:e[2+t]});this.mesh={points:t,normals:o,faces:n,transformedPoints:t.map(()=>new r.Vector4f(0,0,0,0)),transformedNormals:o.map(()=>new r.Vector4f(0,0,0,0))}}getMesh(){return this.mesh}}},2:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=i(20),o=i(9),n=i(8),s=i(22),x=i(0),y=i(28),a=i(11),h=i(18),z=i(25),m=i(14),f=i(34),l=i(13),u=i(12),c=i(15),p=i(7),d=i(3),w=i(35),M=i(36);class b{constructor(t,e){this.cullMode=n.CullFace.BACK,this.torus=new s.Torus,this.linerClipper=new f.CohenSutherlandLineClipper(this),this.triangleRasterizer=new y.FlatShadingTriangleRasterizer(this),this.texturedTriangleRasterizer=new a.TexturedTriangleRasterizer(this),this.scaleClipBlitter=new r.ScaleClipBlitter(this),this.renderingPipeline=new h.FlatShadingRenderingPipeline(this),this.texturedRenderingPipeline=new z.TexturingRenderingPipeline(this),this.lineRasterizer=new w.LineRasterizerDda(this),this.lineRasterizerNo=new M.LineRasterizerNoZ(this),this.tmpGlitch=new Uint32Array(64e3),this.lensFlareVisible=!1,this.lensFlareStart=0,this.lensFlareEnd=0,this.width=t,this.height=e,this.imageData=new ImageData(320,200),this.wBuffer=new Float32Array(64e3);let i=new ArrayBuffer(this.width*this.height*b.PIXEL_SIZE_IN_BYTES);this.unsignedIntArray=new Uint8ClampedArray(i),this.framebuffer=new Uint32Array(i)}setCullFace(t){this.cullMode=t}setTexture(t){this.bob=t}precompute(t,e){}getImageData(){return this.imageData.data.set(this.unsignedIntArray),this.imageData}clear(){let t=o.Color.BLACK.toPackedFormat(),e=this.width*this.height;for(let i=0;i<e;i++)this.framebuffer[i]=t}clearColorBuffer(t){this.framebuffer.fill(t)}drawPixel(t,e,i){this.framebuffer[t+e*this.width]=i}drawPixel4(t,e,i,r){const o=t+e*this.width;let n=1-r,s=(this.framebuffer[o]>>0&255)*n+(i>>0&255)*r|0,x=(this.framebuffer[o]>>8&255)*n+(i>>8&255)*r|0,y=(this.framebuffer[o]>>16&255)*n+(i>>16&255)*r|0;this.framebuffer[t+e*this.width]=s|x<<8|y<<16|255<<24}drawPixel3(t,e,i,r){const o=t+e*this.width;let n=(i>>24&255)/255*r,s=1-n,x=(this.framebuffer[o]>>0&255)*s+(i>>0&255)*n|0,y=(this.framebuffer[o]>>8&255)*s+(i>>8&255)*n|0,a=(this.framebuffer[o]>>16&255)*s+(i>>16&255)*n|0;this.framebuffer[o]=x|y<<8|a<<16|255<<24}readPixel(t,e,i){return this.framebuffer[t+e*this.width]}drawRect(t,e,i,r){let o=t+e*this.width;for(let t=0;t<i;t++)this.framebuffer[o++]=r}drawRect2(t,e,i,r,o){let n=t+e*this.width;for(let t=0;t<r;t++){for(let t=0;t<i;t++)this.framebuffer[n++]=o;n+=320-i}}drawText(t,e,i,r){let o=t,n=" ".charCodeAt(0);for(let t=0;t<i.length;t++){let s=i.charCodeAt(t)-n,x=8*Math.floor(s%32),y=8*Math.floor(s/32);this.drawTextureRectFastAlpha(o,e,x,y,8,8,r),o+=8}}addReflections(){for(let t=0;t<50;t++)for(let e=0;e<320;e++)this.framebuffer[320*(150+t)+e]=this.framebuffer[320*(150-3*t-1)+e+this.interpolate(0,50,t)*(10*Math.sin(.002*Date.now()+.2*t))|0]}drawTextureRect2(t,e,i,r,o,n,s,x){for(let y=0;y<o;y++)for(let o=0;o<n;o++){let n=i+y+(r+o)*s.width,a=t+y+320*(e+o),h=(s.texture[n]>>24&255)/255*x,z=1-h,m=(this.framebuffer[a]>>0&255)*z+(s.texture[n]>>0&255)*h|0,f=(this.framebuffer[a]>>8&255)*z+(s.texture[n]>>8&255)*h|0,l=(this.framebuffer[a]>>16&255)*z+(s.texture[n]>>16&255)*h|0;this.framebuffer[a]=m|f<<8|l<<16|255<<24}}drawTextureRectFastAlpha(t,e,i,r,o,n,s){let x=i+r*s.width,y=t+320*e;for(let t=0;t<n;t++){for(let t=0;t<o;t++){const t=s.texture[x];4278190080&t&&(this.framebuffer[y]=t),x++,y++}x+=s.width-o,y+=320-o}}drawTextureRectNoAlpha(t,e,i,r,o,n,s){let x=i+r*s.width,y=t+320*e;for(let t=0;t<n;t++){for(let t=0;t<o;t++)this.framebuffer[y]=s.texture[x],x++,y++;x+=s.width-o,y+=320-o}}drawTextureRect(t,e,i,r,o,n,s,x){let y=i+r*s.width,a=t+320*e;for(let t=0;t<n;t++){for(let t=0;t<o;t++){let t=(s.texture[y]>>24&255)/255*x,e=1-t,i=this.framebuffer[a],r=s.texture[y],o=(i>>0&255)*e+(r>>0&255)*t,n=(i>>8&255)*e+(r>>8&255)*t,h=(i>>16&255)*e+(r>>16&255)*t;this.framebuffer[a]=o|n<<8|h<<16|255<<24,y++,a++}y+=s.width-o,a+=320-o}}drawTextureRectAdd(t,e,i,r,o,n,s,x){let y=i+r*s.width,a=t+320*e;for(let t=0;t<n;t++){for(let t=0;t<o;t++){let t=(s.texture[y]>>24&255)/255*x,e=this.framebuffer[a],i=s.texture[y],r=Math.min(255,(e>>0&255)+(i>>0&255)*t),o=Math.min(255,(e>>8&255)+(i>>8&255)*t),n=Math.min(255,(e>>16&255)+(i>>16&255)*t);this.framebuffer[a]=r|o<<8|n<<16|255<<24,y++,a++}y+=s.width-o,a+=320-o}}pixelate(){for(let t=0;t<10;t++)for(let e=0;e<10;e++)this.drawBox2(10*t+20,10*e+50,10,10,this.readPixel(10*t+20,10*e+50,0));this.drawLineDDA(new x.Vector3f(20,50,-.3),new x.Vector3f(120,50,-.3),4294967295),this.drawLineDDA(new x.Vector3f(20,150,-.3),new x.Vector3f(120,150,-.3),4294967295),this.drawLineDDA(new x.Vector3f(20,50,-.3),new x.Vector3f(20,150,-.3),4294967295),this.drawLineDDA(new x.Vector3f(120,50,-.3),new x.Vector3f(120,150,-.3),4294967295)}interpolate(t,e,i){return i<=t?0:i>=e?1:(i-t)/(e-t)}fastFramebufferCopyOffset(t,e,i=0){let r=2001,o=64e3,n=320*(200-i);for(;--r;)t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n],t[--o]=e[--n]}fastFramebufferCopy(t,e,i=0){t.set(e)}drawPolarDistotion2(t,e){let i=0,r=1.355*(.4+.3*(1+Math.sin(17e-5*t)));for(let t=0;t<200;t++)for(let o=0;o<320;o++){let n=o-160,s=t-100,x=Math.sqrt(n*n+s*s)*r,y=Math.atan2(n,s)/(2*Math.PI)*256,a=e.texture[(255&x)+256*(255&y)];this.framebuffer[i++]=a}}drawPolarDistotion3(t,e){let i=0;Math.sin(17e-5*t);for(let r=0;r<200;r++)for(let o=0;o<320;o++){let n=o-160,s=r-100,x=.8*Math.sqrt(n*n+s*s)-.017*t,y=Math.atan2(n,s)/(2*Math.PI)*256+.017*t,a=e.texture[(255&x)+256*(255&y)];this.framebuffer[i++]=a}}noise(t,e,i=.07){for(let r=0;r<16;r++)for(let o=0;o<10;o++)this.drawTextureRect(20*r,20*o,Math.round(t/100+r+o)%12*20,0,20,20,e,i)}drawTexturedBillboard(t,e,i,r,o,n){let s,x,y,a,h,z=o.width/i,m=o.height/r,f=0,l=0;if(e+r<0||e>199||t+i<0||t>319)return;e<0?(l=m*-e,s=r+e-Math.max(e+r-200,0),y=0):(y=e,s=r-Math.max(e+r-200,0)),t<0?(h=f=z*-t,x=i+t-Math.max(t+i-320,0),a=0):(h=0,a=t,x=i-Math.max(t+i-320,0));let u=a+320*y;for(let t=0;t<s;t++){for(let t=0;t<x;t++){if(this.wBuffer[u]>n){this.wBuffer[u]=n;let t=Math.min(0|f,o.width-1)+Math.min(0|l,o.height-1)*o.width,e=(this.framebuffer[u]>>0&255)+(o.texture[t]>>0&255),i=(this.framebuffer[u]>>8&255)+(o.texture[t]>>8&255),r=(this.framebuffer[u]>>16&255)+(o.texture[t]>>16&255);this.framebuffer[u]=e|i<<8|r<<16|255<<24}f+=m,u++}l+=m,f=h,u+=320-x}}drawParticle(t,e,i,r,o,n,s){let x,y,a,h,z,m=o.width/i,f=o.height/r,l=0,u=0;if(e+r<0||e>199||t+i<0||t>319)return;e<0?(u=f*-e,x=r+e-Math.max(e+r-200,0),a=0):(a=e,x=r-Math.max(e+r-200,0)),t<0?(z=l=m*-t,y=i+t-Math.max(t+i-320,0),h=0):(z=0,h=t,y=i-Math.max(t+i-320,0));const c=1/255*s;let p=h+320*a;for(let t=0;t<x;t++){for(let t=0;t<y;t++){if(this.wBuffer[p]>n){let t=Math.min(0|l,o.width-1)+Math.min(0|u,o.height-1)*o.width,e=(o.texture[t]>>24&255)*c,i=1-e,r=this.framebuffer[p],n=o.texture[t],s=(r>>0&255)*i+(n>>0&255)*e,x=(r>>8&255)*i+(n>>8&255)*e,y=(r>>16&255)*i+(n>>16&255)*e;this.framebuffer[p]=s|x<<8|y<<16|255<<24}l+=m,p++}u+=f,l=z,p+=320-y}}drawParticle2(t,e,i,r,o,n,s,x=0,y){let a,h,z,m,f,l=o.width/i,u=y/r,c=0,p=0;if(e+r<0||e>199||t+i<0||t>319)return;e<0?(p=u*-e,a=r+e-Math.max(e+r-200,0),z=0):(z=e,a=r-Math.max(e+r-200,0)),t<0?(f=c=l*-t,h=i+t-Math.max(t+i-320,0),m=0):(f=0,m=t,h=i-Math.max(t+i-320,0));const d=1/255*s;let w=m+320*z;for(let t=0;t<a;t++){for(let t=0;t<h;t++){if(this.wBuffer[w]>n){let t=Math.min(0|c,o.width-1)+Math.min(0|p,y-1)*o.width+y*o.width*x,e=(o.texture[t]>>24&255)*d,i=1-e,r=this.framebuffer[w],n=o.texture[t],s=(r>>0&255)*i+(n>>0&255)*e,a=(r>>8&255)*i+(n>>8&255)*e,h=(r>>16&255)*i+(n>>16&255)*e;this.framebuffer[w]=s|a<<8|h<<16|255<<24}c+=l,w++}p+=u,c=f,w+=320-h}}drawParticle2Sub(t,e,i,r,o,n,s,x=0,y){let a,h,z,m,f,l=o.width/i,u=y/r,c=0,p=0;if(e+r<0||e>199||t+i<0||t>319)return;e<0?(p=u*-e,a=r+e-Math.max(e+r-200,0),z=0):(z=e,a=r-Math.max(e+r-200,0)),t<0?(f=c=l*-t,h=Math.ceil(i+t-Math.max(t+i-320,0)),m=0):(f=0,m=t,h=Math.ceil(i-Math.max(t+i-320,0))),f+=(Math.ceil(t)-t)*l,p+=(Math.ceil(e)-e)*u;const d=1/255*s;let w=Math.ceil(m)+320*Math.ceil(z);for(let t=0;t<a;t++){for(let t=0;t<h;t++){if(this.wBuffer[w]>n){let t=Math.min(0|Math.round(c),o.width-1)+Math.min(0|Math.round(p),y-1)*o.width+y*o.width*x,e=(o.texture[t]>>24&255)*d,i=1-e,r=this.framebuffer[w],n=o.texture[t],s=(r>>0&255)*i+(n>>0&255)*e,a=(r>>8&255)*i+(n>>8&255)*e,h=(r>>16&255)*i+(n>>16&255)*e;this.framebuffer[w]=s|a<<8|h<<16|255<<24}c+=l,w++}p+=u,c=f,w+=320-h}}drawParticleNoDepth(t,e,i,r,o,n,s){let x,y,a,h,z,m=o.width/i,f=o.height/r,l=0,u=0;if(e+r<0||e>199||t+i<0||t>319)return;e<0?(u=f*-e,x=r+e-Math.max(e+r-200,0),a=0):(a=e,x=r-Math.max(e+r-200,0)),t<0?(z=l=m*-t,y=i+t-Math.max(t+i-320,0),h=0):(z=0,h=t,y=i-Math.max(t+i-320,0));const c=1/255*s;let p=h+320*a;for(let t=0;t<x;t++){for(let t=0;t<y;t++){let t=Math.min(0|l,o.width-1)+Math.min(0|u,o.height-1)*o.width,e=(o.texture[t]>>24&255)*c,i=1-e,r=this.framebuffer[p],n=o.texture[t],s=(r>>0&255)*i+(n>>0&255)*e,x=(r>>8&255)*i+(n>>8&255)*e,y=(r>>16&255)*i+(n>>16&255)*e;this.framebuffer[p]=s|x<<8|y<<16|255<<24,l+=m,p++}u+=f,l=z,p+=320-y}}drawSoftParticle(t,e,i,r,o,n,s){let x,y,a,h,z,m=o.width/i,f=o.height/r,l=0,u=0;if(e+r<0||e>199||t+i<0||t>319)return;e<0?(u=f*-e,x=r+e-Math.max(e+r-200,0),a=0):(a=e,x=r-Math.max(e+r-200,0)),t<0?(z=l=m*-t,y=i+t-Math.max(t+i-320,0),h=0):(z=0,h=t,y=i-Math.max(t+i-320,0));const c=1/255*s;let p=h+320*a;for(let t=0;t<x;t++){for(let t=0;t<y;t++){if(this.wBuffer[p]>n){let t=Math.min(Math.max(1/n-1/this.wBuffer[p],0),1),e=Math.min(0|l,o.width-1)+Math.min(0|u,o.height-1)*o.width,i=(o.texture[e]>>24&255)*c*t,r=1-i,s=(this.framebuffer[p]>>0&255)*r+(o.texture[e]>>0&255)*i,x=(this.framebuffer[p]>>8&255)*r+(o.texture[e]>>8&255)*i,y=(this.framebuffer[p]>>16&255)*r+(o.texture[e]>>16&255)*i;this.framebuffer[p]=s|x<<8|y<<16|255<<24}l+=m,p++}u+=f,l=z,p+=320-y}}drawFog(t,e,i){const r=-e;for(let e=0;e<64e3;e++){const o=Math.max(Math.min(r*(1/this.wBuffer[e]+i),1),0),n=1-o,s=(this.framebuffer[e]>>0&255)*n+t.r*o,x=(this.framebuffer[e]>>8&255)*n+t.g*o,y=(this.framebuffer[e]>>16&255)*n+t.b*o;this.framebuffer[e]=s|x<<8|y<<16|255<<24}}drawRadialBlur(){this.fastFramebufferCopy(this.tmpGlitch,this.framebuffer);let t=new p.Texture;t.texture=this.tmpGlitch,t.width=320,t.height=200;let e=320,i=200;for(let r=0;r<16;r++)e+=320*.09,i+=18,this.scaleClipBlitter.drawScaledTextureClip(160-e/2,100-i/2,e,i,t,.19*(15-r)/15),this.fastFramebufferCopy(this.tmpGlitch,this.framebuffer)}drawScaledTextureClipBi(t,e,i,r,o,n){let s,x,y,a,h,z=o.width/i,m=o.height/r,f=0,l=0;if(e+r<0||e>199||t+i<0||t>319)return;e<0?(l=m*-e,s=r+e-Math.max(e+r-200,0),y=0):(y=e,s=r-Math.max(e+r-200,0)),t<0?(h=f=z*-t,x=i+t-Math.max(t+i-320,0),a=0):(h=0,a=t,x=i-Math.max(t+i-320,0));const u=1/255*n;let c=a+320*y;for(let t=0;t<s;t++){for(let t=0;t<x;t++){let t=o.getBilinearFilteredPixel2(f,l),e=255*u,i=1-e,r=this.framebuffer[c],n=(r>>0&255)*i+(t>>0&255)*e,s=(r>>8&255)*i+(t>>8&255)*e,x=(r>>16&255)*i+(t>>16&255)*e;this.framebuffer[c]=n|s<<8|x<<16|255<<24,f+=z,c++}l+=m,f=h,c+=320-x}}drawScaledTextureClipBiAdd(t,e,i,r,o,n){let s,x,y,a,h,z=o.width/i,m=o.height/r,f=0,l=0;if(e+r<0||e>199||t+i<0||t>319)return;e<0?(l=m*-e,s=r+e-Math.max(e+r-200,0),y=0):(y=e,s=r-Math.max(e+r-200,0)),t<0?(h=f=z*-t,x=i+t-Math.max(t+i-320,0),a=0):(h=0,a=t,x=i-Math.max(t+i-320,0));let u=a+320*y;for(let t=0;t<s;t++){for(let t=0;t<x;t++){let t=o.getBilinearFilteredPixel2(f,l),e=this.framebuffer[u],i=t,r=Math.min((e>>0&255)+(i>>0&255)*n,255),s=Math.min((e>>8&255)+(i>>8&255)*n,255),x=Math.min((e>>16&255)+(i>>16&255)*n,255);this.framebuffer[u]=r|s<<8|x<<16|255<<24,f+=z,u++}l+=m,f=h,u+=320-x}}drawScaledTextureClipAdd(t,e,i,r,o,n=1){let s,x,y,a,h,z=o.width/i,m=o.height/r,f=0,l=0;if(e+r<0||e>199||t+i<0||t>319)return;e<0?(l=m*-e,s=r+e-Math.max(e+r-200,0),y=0):(y=e,s=r-Math.max(e+r-200,0)),t<0?(h=f=z*-t,x=i+t-Math.max(t+i-320,0),a=0):(h=0,a=t,x=i-Math.max(t+i-320,0));let u=a+320*y;for(let t=0;t<s;t++){for(let t=0;t<x;t++){let t=Math.min(0|f,o.width-1)+Math.min(0|l,o.height-1)*o.width,e=this.framebuffer[u],i=o.texture[t],r=Math.min((e>>0&255)+(i>>0&255)*n,255),s=Math.min((e>>8&255)+(i>>8&255)*n,255),x=Math.min((e>>16&255)+(i>>16&255)*n,255);this.framebuffer[u]=r|s<<8|x<<16|255<<24,f+=z,u++}l+=m,f=h,u+=320-x}}drawTexture(t,e,i,r){let o=Math.max(t,0)+Math.max(e,0)*this.width,n=Math.max(0,0-t)+Math.max(0,0-e)*i.width;const s=Math.min(i.width,320-t)-Math.max(0,0-t),x=Math.min(i.height,200-e)-Math.max(0,0-e),y=i.width-s,a=this.width-s,h=1/255*r;for(let t=0;t<x;t++){for(let t=0;t<s;t++){let t=(i.texture[n]>>24&255)*h,e=1-t,r=(this.framebuffer[o]>>0&255)*e+(i.texture[n]>>0&255)*t,s=(this.framebuffer[o]>>8&255)*e+(i.texture[n]>>8&255)*t,x=(this.framebuffer[o]>>16&255)*e+(i.texture[n]>>16&255)*t;this.framebuffer[o]=r|s<<8|x<<16|255<<24,o++,n++}n+=y,o+=a}}drawTextureFullscreen(t,e){let i=0,r=1-e;for(let o=0;o<64e3;o++){let o=(this.framebuffer[i]>>0&255)*r+(t.texture[i]>>0&255)*e,n=(this.framebuffer[i]>>8&255)*r+(t.texture[i]>>8&255)*e,s=(this.framebuffer[i]>>16&255)*r+(t.texture[i]>>16&255)*e;this.framebuffer[i]=o|n<<8|s<<16|255<<24,i++}}drawTexture3(t,e,i,r,o){let n=Math.max(t,0)+Math.max(e,0)*this.width,s=Math.max(0,0-t)+Math.max(0,0-e)*i.width;const x=Math.min(i.width,320-t)-Math.max(0,0-t),y=Math.min(i.height,200-e)-Math.max(0,0-e),a=i.width-x,h=this.width-x,z=1/255*r,m=Math.floor(y*Math.max(Math.min(1,o),0));for(let t=0;t<m;t++){for(let t=0;t<x;t++){let t=(i.texture[s]>>24&255)*z,e=1-t,r=(this.framebuffer[n]>>0&255)*e+(i.texture[s]>>0&255)*t,o=(this.framebuffer[n]>>8&255)*e+(i.texture[s]>>8&255)*t,x=(this.framebuffer[n]>>16&255)*e+(i.texture[s]>>16&255)*t;this.framebuffer[n]=r|o<<8|x<<16|255<<24,n++,s++}s+=a,n+=h}}drawTextureNoClipAlpha(t,e,i){let r=t+e*this.width,o=0,n=this.width-i.width;for(let t=0;t<i.height;t++){for(let t=0;t<i.width;t++){let t=i.texture[o];4278190080&t&&(this.framebuffer[r]=t),r++,o++}r+=n}}scene8(t){let e=[0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,7,1,6,2,5,3,4],i=[new x.Vector3f(1,1,-1),new x.Vector3f(-1,1,-1),new x.Vector3f(-1,1,1),new x.Vector3f(1,1,1),new x.Vector3f(1,-1,1),new x.Vector3f(-1,-1,1),new x.Vector3f(-1,-1,-1),new x.Vector3f(1,-1,-1)],r=x.Matrix3f.constructScaleMatrix(.8,.8,.8).multiplyMatrix(x.Matrix3f.constructYRotationMatrix(.05*t));r=r.multiplyMatrix(x.Matrix3f.constructXRotationMatrix(.05*t));let o=new Array;i.forEach(e=>{let i=r.multiply(e),n=i.x,s=i.y,y=i.z-4+2*Math.sin(.09*t);o.push(new x.Vector3f(n,s,y))});for(let t=0;t<e.length;t+=2){let i=-16776961;this.nearPlaneClipping(o[e[t]],o[e[t+1]],i)}}project(t){return new x.Vector3f(Math.round(160+292*t.x/-t.z),Math.round(100-292*t.y/-t.z),t.z)}nearPlaneClipping(t,e,i){if(t.z<-1.7&&e.z<-1.7)this.linerClipper.cohenSutherlandLineClipper(this.project(t),this.project(e),i);else{if(t.z>-1.7&&e.z>-1.7)return;if(t.z<-1.7){let r=(-1.7-t.z)/(e.z-t.z),o=new x.Vector3f(r*(e.x-t.x)+t.x,r*(e.y-t.y)+t.y,-1.7);this.linerClipper.cohenSutherlandLineClipper(this.project(t),this.project(o),i)}else if(e.z<-1.7){let r=(-1.7-e.z)/(t.z-e.z),o=new x.Vector3f(r*(t.x-e.x)+e.x,r*(t.y-e.y)+e.y,-1.7);this.linerClipper.cohenSutherlandLineClipper(this.project(e),this.project(o),i)}}}clearDepthBuffer(){this.wBuffer.fill(-1/900)}sphereFunction2(t,e){return new x.Vector4f(Math.cos(t)*Math.cos(e),Math.cos(t)*Math.sin(e),Math.sin(t),1)}drawBox(){let t=b.maxWindow.y-b.minWindow.y+1,e=b.maxWindow.x-b.minWindow.x+1,i=320*b.minWindow.y+b.minWindow.x;for(let r=0;r<t;r++)this.framebuffer.fill(-13158601,i,i+e),i+=320}drawBox2(t,e,i,r,o){let n=320*e+t;for(let t=0;t<r;t++)this.framebuffer.fill(o,n,n+i),n+=320}wireFrameSphereClipping(t){this.wBuffer.fill(100);let e=[];for(let t=0;t<=16;t++)for(let i=0;i<16;i++)e.push(this.sphereFunction2(-t*Math.PI/16-Math.PI/2,2*-i*Math.PI/16));let i=[];for(let t=0;t<16;t++)for(let e=0;e<16;e++)i.push(16*t+(1+e)%16),i.push(16*t+(0+e)%16),i.push(16*t+16+(1+e)%16),i.push(16*t+16+(0+e)%16),i.push(16*t+16+(1+e)%16),i.push(16*t+(0+e)%16);let r=10.8+5*(Math.sin(.16*t)+1)/2,o=x.Matrix4f.constructScaleMatrix(r,r,r).multiplyMatrix(x.Matrix4f.constructYRotationMatrix(.08*t));o=o.multiplyMatrix(x.Matrix4f.constructXRotationMatrix(.08*t)),o=x.Matrix4f.constructTranslationMatrix(0+20*Math.sin(.04*t),5*Math.sin(.06*t),-22).multiplyMatrix(o);let n=new Array;for(let t=0;t<e.length;t++){let i=o.multiplyHom(e[t]),r=i.x,s=i.y,y=i.z,a=160+r/(.0078*-y),h=100+s/(.0078*-y);n.push(new x.Vector3f(a,h,y))}this.drawLineDDA(new x.Vector3f(b.minWindow.x-1,b.minWindow.y-1,0),new x.Vector3f(b.minWindow.x-1,b.maxWindow.y+1,0),-1179448),this.drawLineDDA(new x.Vector3f(b.maxWindow.x+1,b.minWindow.y-1,0),new x.Vector3f(b.maxWindow.x+1,b.maxWindow.y+1,0),-1179448),this.drawLineDDA(new x.Vector3f(b.minWindow.x-1,b.minWindow.y-1,0),new x.Vector3f(b.maxWindow.x+1,b.minWindow.y-1,0),-1179448),this.drawLineDDA(new x.Vector3f(b.minWindow.x-1,b.maxWindow.y+1,0),new x.Vector3f(b.maxWindow.x+2,b.maxWindow.y+1,0),-1179448),this.drawBox();for(let t=0;t<i.length;t+=3){let e=n[i[t]],r=n[i[t+1]],o=n[i[t+2]],s=-1;this.isTriangleCCW(e,r,o)&&(this.linerClipper.cohenSutherlandLineClipper(e,r,s),this.linerClipper.cohenSutherlandLineClipper(e,o,s),this.linerClipper.cohenSutherlandLineClipper(o,r,s))}}isTriangleCCW(t,e,i){const r=t.x*e.y-e.x*t.y+e.x*i.y-i.x*e.y+i.x*t.y-t.x*i.y;return this.cullMode===n.CullFace.BACK?r<0:r>0}drawBoundingSphere(t,e,i){let r=[];for(let e=0;e<=8;e++)for(let i=0;i<8;i++){let o=this.sphereFunction2(-e*Math.PI/8-Math.PI/2,2*-i*Math.PI/8).mul(t.getRadius()+.01).add(t.getCenter());o.w=1,r.push(o)}let o=[];for(let t=0;t<8;t++)for(let e=0;e<8;e++)o.push(8*t+(1+e)%8),o.push(8*t+(0+e)%8),o.push(8*t+8+(1+e)%8),o.push(8*t+8+(0+e)%8),o.push(8*t+8+(1+e)%8),o.push(8*t+(0+e)%8);let n=e,s=new Array;for(let t=0;t<r.length;t++){let e=n.multiplyHom(r[t]);s.push(new x.Vector3f(e.x,e.y,e.z))}for(let t=0;t<o.length;t+=3){let e=s[o[t]],r=s[o[t+1]],n=s[o[t+2]];this.nearPlaneClipping(e,r,i),this.nearPlaneClipping(e,n,i),this.nearPlaneClipping(n,r,i)}}drawPlanedeformationTunnelAnim(t,e){let i=0;for(let r=0;r<200;r++)for(let o=0;o<320;o++){let n=o-160,s=r-100,x=51.2/Math.max(1,Math.sqrt(n*n+s*s)),y=x+.002*t,a=16*(Math.atan2(n,s)/Math.PI+1)+69e-5*t,h=e.texture[(31&y)+32*(31&a)],z=1-this.cosineInterpolate(1,6,x),m=(h>>0&255)*z|(h>>8&255)*z<<8|(h>>16&255)*z<<16;this.framebuffer[i++]=m}}drawPlanedeformationTunnelV2(t,e,i){let r=0;for(let i=0;i<200;i++)for(let o=0;o<320;o++){let n=1.2,s=o-160+80*Math.sin(1e-4*t)*n,x=i-100+80*Math.cos(1e-4*t)*n,y=o-160+80*Math.sin(1e-4*t+Math.PI)*n,a=i-100+80*Math.cos(1e-4*t+Math.PI)*n,h=5120/Math.max(1,Math.sqrt(s*s+x*x));h+=8*Math.sin(5*Math.atan2(s,x));let z=5120/Math.max(1,Math.sqrt(y*y+a*a)),m=h-(z+=8*Math.sin(5*Math.atan2(y,a)))+.019*t,f=128.5*(Math.atan2(s,x)/Math.PI+1)+.0069*t;f-=128.5*(Math.atan2(y,a)/Math.PI+1)+.0069*t;let l=e.texture[(255&m)+255*(255&f)],u=Math.min(60/(2*h),1)*Math.min(60/(2*z),1),c=(255&l)*u,p=(l>>8&255)*u,d=(l>>16&255)*u;this.framebuffer[r++]=c|p<<8|d<<16|255<<24}}drawLedTunnel(t,e){for(let i=0;i<25;i++)for(let r=0;r<40;r++){let o=160/(1.4*Math.sqrt((r-20)*(r-20)+(i-12.5)*(i-12.5))),n=(15*(.5*(Math.sin(o+.005*t)+1)*(1-Math.min(.003*o,1)))|0)%16;this.drawTextureRectNoAlpha(8*r,8*i,0,8*n,8,8,e)}}drawParticleWaves(t,e,i=!1){i||this.clearColorBuffer(-13617080),this.clearDepthBuffer();let r=new Array;for(let e=0;e<50;e++)for(let i=0;i<50;i++){let o=2*(i-25),n=4*(Math.sin(.09*i*2+8e-4*t)+Math.cos(.08*e*2+9e-4*t)),s=2*(e-25);r.push(new x.Vector3f(o,n,s))}let o=x.Matrix4f.constructTranslationMatrix(0,-0,-49).multiplyMatrix(x.Matrix4f.constructXRotationMatrix(.1*Math.PI).multiplyMatrix(x.Matrix4f.constructYRotationMatrix(6e-5*t))),n=new Array(r.length);r.forEach(t=>{let e=this.project(o.multiply(t));n.push(e)}),n.sort(function(t,e){return t.z-e.z}),n.forEach(t=>{let i=-1.3*192/t.z;this.drawParticle(Math.round(t.x-i/2),Math.round(t.y-i/2),Math.round(i),Math.round(i),e,1/t.z,this.interpolate(-60,-25,t.z))})}drawScreenBounds(t){const e=o.Color.WHITE.toPackedFormat();t.drawLineDDANoZ(new x.Vector3f(80,50,0),new x.Vector3f(240,50,-100),e),t.drawLineDDANoZ(new x.Vector3f(80,50,0),new x.Vector3f(80,150,-100),e),t.drawLineDDANoZ(new x.Vector3f(240,50,0),new x.Vector3f(240,150,-100),e),t.drawLineDDANoZ(new x.Vector3f(80,150,0),new x.Vector3f(240,150,-100),e)}drawBlenderScene5(t,e,i,r){this.clearDepthBuffer();let o=x.Matrix4f.constructTranslationMatrix(0,0,9*(.5*Math.sin(6e-4*t)+.5)-54).multiplyMatrix(x.Matrix4f.constructXRotationMatrix(.8*(.5*Math.sin(14e-5*t)+.5)-.1).multiplyMatrix(x.Matrix4f.constructYRotationMatrix(2e-4*-t).multiplyMatrix(x.Matrix4f.constructTranslationMatrix(0,-13,0)))),n=o.multiplyMatrix(x.Matrix4f.constructScaleMatrix(9,9,9));for(let t=0;t<this.blenderObj4.length;t++){let e=this.blenderObj4[t];0!==t&&2!==t&&this.renderingPipeline.draw(e,n),0===t&&this.renderingPipeline.draw(e,n),2===t&&this.renderingPipeline.draw(e,n)}n=o.multiplyMatrix(x.Matrix4f.constructTranslationMatrix(0,14.2,-4).multiplyMatrix(x.Matrix4f.constructScaleMatrix(7,7,9).multiplyMatrix(x.Matrix4f.constructXRotationMatrix(2*Math.PI*this.cosineInterpolate(0,1300,Math.floor(.7*t)%4e3)))));let s=this.blenderObj5[0];this.renderingPipeline.draw(s,n);n=o.multiplyMatrix(x.Matrix4f.constructTranslationMatrix(0,19,0).multiplyMatrix(x.Matrix4f.constructScaleMatrix(8,8,8)));let y=this.project(o.multiply(new x.Vector3f(20,19,-90)));this.drawLensFlare(y,.15*t,i,r)}drawPlaneDeformation(t,e){const i=e.width,r=e.height;let o=0;for(let n=0;n<200;n++){let s=2*n/200-1;for(let n=0;n<320;n++){let x=2*n/320-1,y=(Math.sqrt(x*x+s*s),Math.atan2(s,x),x/Math.abs(s)*i*.05|0),a=1/Math.abs(s)*r*.05+.008*t|0,h=1-Math.max(Math.min(1/Math.abs(s)*.2,1),0),z=e.texture[(255&y)+(255&a)*i];z=255<<24|(z>>16&255)*h<<16|(z>>8&255)*h<<8|(z>>0&255)*h<<0,this.framebuffer[o++]=z}}}shadingSphereClip(t){this.clearDepthBuffer();let e=x.Matrix4f.constructYRotationMatrix(.1*t).multiplyMatrix(x.Matrix4f.constructScaleMatrix(1.6,1.6,1.6));e=x.Matrix4f.constructZRotationMatrix(.02*-t).multiplyMatrix(x.Matrix4f.constructTranslationMatrix(0,0,-21).multiplyMatrix(e)),this.renderingPipeline.draw(this.torus.getMesh(),e)}torusFunction(t){return new x.Vector3f(10*Math.sin(t),0,10*Math.cos(t))}torusFunction2(t){let e=.5*(2+Math.sin(3*t));return new x.Vector3f(e*Math.cos(2*t),e*Math.cos(3*t),e*Math.sin(2*t))}cosineInterpolate(t,e,i){let r;return i<=t?0:i>=e?1:(r=(i-t)/(e-t),(1-Math.cos(r*Math.PI))/2)}createPlane(){let t={points:[]};for(let e=0;e<60;e++)for(let i=0;i<100;i++)t.points.push(new x.Vector3f(0+i,0+e,0)),t.points.push(new x.Vector3f(0+i,1+e,0)),t.points.push(new x.Vector3f(1+i,0+e,0)),t.points.push(new x.Vector3f(1+i,0+e,0)),t.points.push(new x.Vector3f(0+i,1+e,0)),t.points.push(new x.Vector3f(1+i,1+e,0));let e=[],i=[],r=[],o=[],n=[];return t.points.forEach(t=>{let i=t,r=e.find(t=>t.sub(i).length()<.001);if(r){let t=e.indexOf(r);n.push(t)}else n.push(e.push(i)-1)}),e.forEach(t=>{r.push(new x.Vector3f(0,0,0)),o.push(new x.Vector3f(0,0,0)),i.push(new x.Vector3f(0,0,0))}),{points:e,points2:i,normals:r,normals2:o,index:n}}createCylinder(){let t={points:[]};for(let e=0;e<110;e++)for(let i=0;i<50;i++){let r=30*Math.sin(2*Math.PI/50*i),o=30*Math.sin(2*Math.PI/50*(i+1)),n=30*Math.cos(2*Math.PI/50*i),s=30*Math.cos(2*Math.PI/50*(i+1));t.points.push(new x.Vector3f(r,0+e,n)),t.points.push(new x.Vector3f(r,1+e,n)),t.points.push(new x.Vector3f(o,0+e,s)),t.points.push(new x.Vector3f(o,0+e,s)),t.points.push(new x.Vector3f(r,1+e,n)),t.points.push(new x.Vector3f(o,1+e,s))}let e=[],i=[],r=[],o=[],n=[],s=[];return t.points.forEach(t=>{let i=t,r=e.find(t=>t.sub(i).length()<.001);if(r){let t=e.indexOf(r);s.push(t)}else s.push(e.push(i)-1)}),e.forEach(t=>{r.push(new x.Vector3f(0,0,0)),o.push(new x.Vector3f(0,0,0)),i.push(new x.Vector3f(0,0,0)),n.push(new d.TextureCoordinate)}),{points:e,points2:i,normals:r,normals2:o,index:s,texture:n}}createCylinder2(t){let e={points:[]};for(let i=0;i<110;i++)for(let r=0;r<50;r++){let o=r/50*256&255,n=(r+1)/50*256&255,s=.9*i/110*256&255,y=.9*(i+1)/110*256&255,a=1+(255&t.texture[o+256*s])/255*.9,h=1+(255&t.texture[n+256*s])/255*.9,z=1+(255&t.texture[o+256*y])/255*.9,m=1+(255&t.texture[n+256*y])/255*.9,f=30*Math.sin(2*Math.PI/50*r),l=30*Math.cos(2*Math.PI/50*r),u=30*Math.sin(2*Math.PI/50*(r+1)),c=30*Math.cos(2*Math.PI/50*(r+1));e.points.push(new x.Vector3f(f*a,0+i,l*a)),e.points.push(new x.Vector3f(f*z,1+i,l*z)),e.points.push(new x.Vector3f(u*h,0+i,c*h)),e.points.push(new x.Vector3f(u*h,0+i,c*h)),e.points.push(new x.Vector3f(f*z,1+i,l*z)),e.points.push(new x.Vector3f(u*m,1+i,c*m))}let i=[],r=[],o=[],n=[],s=[];return e.points.forEach(t=>{let e=t,r=i.find(t=>t.sub(e).length()<.001);if(r){let t=i.indexOf(r);s.push(t)}else s.push(i.push(e)-1)}),i.forEach(t=>{o.push(new x.Vector3f(0,0,0)),n.push(new x.Vector3f(0,0,0)),r.push(new x.Vector3f(0,0,0))}),{points:i,points2:r,normals:o,normals2:n,index:s}}fakeSphere(t,e){e.textureCoordinate.u=.5+.5*t.x,e.textureCoordinate.v=.5-.5*t.y}fakeSphere2(t,e){e.u=.5+Math.asin(t.x)/Math.PI,e.v=.5-Math.asin(t.y)/Math.PI}drawLensFlare(t,e,i,r){let o=t;o.z<0&&o.x>0&&o.x<320&&o.y>0&&o.y<200&&this.wBuffer[o.x+320*o.y]>1/o.z?this.lensFlareVisible||(this.lensFlareVisible=!0,this.lensFlareStart=e):this.lensFlareVisible&&(this.lensFlareVisible=!1,this.lensFlareEnd=e);let n=this.interpolate(this.lensFlareStart,this.lensFlareStart+100,e);1!=this.lensFlareVisible&&(n*=1-this.interpolate(this.lensFlareEnd,this.lensFlareEnd+100,e));let s=new x.Vector3f(160,100,0).sub(o);if(n>0)for(let t=0;t<i.length;t++){let e=o.add(s.mul(i[t].scale));this.drawTexture(Math.round(e.x)-i[t].tex.width/2,Math.round(e.y)-i[t].tex.height/2,i[t].tex,i[t].alpha*n)}this.drawTextureRectAdd(0,0,0,0,320,200,r,.03+.15*n)}drawLineDDA(t,e,i){this.lineRasterizer.drawLineDDA(t,e,i)}drawLineDDANoZ(t,e,i){this.lineRasterizerNo.drawLineDDANoZ(t,e,i)}}b.PIXEL_SIZE_IN_BYTES=4,b.minWindow=new x.Vector2f(0,0),b.maxWindow=new x.Vector2f(319,199),b.clipRegion=new Array(new u.RightClipEdge,new l.LeftClipEdge,new m.BottomClipEdge,new c.TopClipEdge),e.Framebuffer=b},20:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.ScaleClipBlitter=class{constructor(t){this.framebuffer=t}drawScaledTextureClip(t,e,i,r,o,n){let s,x,y,a,h,z=o.width/i,m=o.height/r,f=0,l=0;if(e+r<0||e>199||t+i<0||t>319)return;e<0?(l=m*-e,s=r+e-Math.max(e+r-200,0),y=0):(y=e,s=r-Math.max(e+r-200,0)),t<0?(h=f=z*-t,x=i+t-Math.max(t+i-320,0),a=0):(h=0,a=t,x=i-Math.max(t+i-320,0));const u=1/255*n;let c=a+320*y;for(let t=0;t<s;t++){for(let t=0;t<x;t++){let t=Math.min(0|f,o.width-1)+Math.min(0|l,o.height-1)*o.width,e=(o.texture[t]>>24&255)*u,i=1-e,r=this.framebuffer.framebuffer[c],n=o.texture[t],s=(r>>0&255)*i+(n>>0&255)*e,x=(r>>8&255)*i+(n>>8&255)*e,y=(r>>16&255)*i+(n>>16&255)*e;this.framebuffer.framebuffer[c]=s|x<<8|y<<16|255<<24,f+=z,c++}l+=m,f=h,c+=320-x}}}},21:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=i(31);e.PointLight=class extends r.Light{}},22:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=i(4),o=i(19),n=i(1);e.Torus=class extends o.AbstractGeometricObject{constructor(t=!1){super();const e=[];this.inverse=t;for(let t=0;t<15;t++){let i=this.torusFunction(2*t*Math.PI/15),o=this.torusFunction(2*t*Math.PI/15+.1),s=new n.Vector3f(0,4,0),x=o.sub(i).cross(s);for(let t=0;t<12;t++){let o=s.mul(Math.sin(2*t*Math.PI/12)).add(x.mul(Math.cos(2*t*Math.PI/12))).add(i);e.push(new r.Vector4f(o.x,o.y,o.z,1))}}const i=[];for(let t=0;t<15;t++)for(let r=0;r<12;r++)i.push((12*t+(1+r)%12)%e.length),i.push((12*t+(0+r)%12)%e.length),i.push((12*t+12+(1+r)%12)%e.length),i.push((12*t+12+(0+r)%12)%e.length),i.push((12*t+12+(1+r)%12)%e.length),i.push((12*t+(0+r)%12)%e.length);this.buildMesh(e,i)}torusFunction(t){return new n.Vector3f(10*Math.sin(t),0,10*Math.cos(t))}}},23:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.Material=class{}},24:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});class r{constructor(t,e){this.x=t,this.y=e}perp(){return new r(-this.y,this.x)}sub(t){return new r(this.x-t.x,this.y-t.y)}mul(t){return new r(this.x*t,this.y*t)}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}normalize(){const t=1/this.length();return this.mul(t)}dot(t){return this.x*t.x+this.y*t.y}}e.Vector2f=r},25:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=i(2),o=i(4),n=i(33),s=i(11),x=i(3),y=i(5),a=i(16);e.TexturingRenderingPipeline=class extends a.AbstractRenderingPipeline{constructor(t){super(t),this.triangleRasterizer=null,this.vertexArray=new Array(new y.Vertex,new y.Vertex,new y.Vertex),this.projectedVertices=new Array(new o.Vector4f(0,0,0,1),new o.Vector4f(0,0,0,1),new o.Vector4f(0,0,0,1)),this.setAlpha(1),this.triangleRasterizer=new s.TexturedTriangleRasterizer(t)}enableAlphaBlending(){this.triangleRasterizer=new n.TexturedAlphaBlendingTriangleRasterizer(this.framebuffer,this)}disableAlphaBlending(){this.triangleRasterizer=new s.TexturedTriangleRasterizer(this.framebuffer)}setModelViewMatrix(t){this.modelViewMatrix=t}drawMeshArray(t){for(let e=0;e<t.length;e++){const i=t[e];this.draw(i)}}draw(t){for(let e=0;e<t.points.length;e++)this.modelViewMatrix.multiplyHomArr(t.points[e],t.points2[e]);for(let e=0;e<t.faces.length;e++){const i=t.points2[t.faces[e].vertices[0]],r=t.points2[t.faces[e].vertices[1]],o=t.points2[t.faces[e].vertices[2]];if(this.isInFrontOfNearPlane(i)&&this.isInFrontOfNearPlane(r)&&this.isInFrontOfNearPlane(o))this.project2(i,this.projectedVertices[0]),this.project2(r,this.projectedVertices[1]),this.project2(o,this.projectedVertices[2]),this.isTriangleCCW(this.projectedVertices[0],this.projectedVertices[1],this.projectedVertices[2])&&(this.vertexArray[0].position=this.projectedVertices[0],this.vertexArray[0].textureCoordinate=t.uv[t.faces[e].uv[0]],this.vertexArray[1].position=this.projectedVertices[1],this.vertexArray[1].textureCoordinate=t.uv[t.faces[e].uv[1]],this.vertexArray[2].position=this.projectedVertices[2],this.vertexArray[2].textureCoordinate=t.uv[t.faces[e].uv[2]],this.clipConvexPolygon2(this.vertexArray));else{if(!(this.isInFrontOfNearPlane(i)||this.isInFrontOfNearPlane(r)||this.isInFrontOfNearPlane(o)))continue;this.vertexArray[0].position=i,this.vertexArray[0].textureCoordinate=t.uv[t.faces[e].uv[0]],this.vertexArray[1].position=r,this.vertexArray[1].textureCoordinate=t.uv[t.faces[e].uv[1]],this.vertexArray[2].position=o,this.vertexArray[2].textureCoordinate=t.uv[t.faces[e].uv[2]],this.zClipTriangle2(this.vertexArray)}}}project(t){return new o.Vector4f(Math.round(160+292*t.x/-t.z),Math.round(100-292*t.y/-t.z),t.z)}project2(t,e){e.x=Math.round(160+292*t.x/-t.z),e.y=Math.round(100-292*t.y/-t.z),e.z=t.z}computeNearPlaneIntersection2(t,e){const i=(this.NEAR_PLANE_Z-t.position.z)/(e.position.z-t.position.z),r=new y.Vertex;return r.position=new o.Vector4f(i*(e.position.x-t.position.x)+t.position.x,i*(e.position.y-t.position.y)+t.position.y,this.NEAR_PLANE_Z),r.textureCoordinate=new x.TextureCoordinate(i*(e.textureCoordinate.u-t.textureCoordinate.u)+t.textureCoordinate.u,i*(e.textureCoordinate.v-t.textureCoordinate.v)+t.textureCoordinate.v),r}zClipTriangle2(t){const e=t,i=new Array;let r=e[e.length-1];for(let t=0;t<e.length;t++){const o=e[t];this.isInFrontOfNearPlane(o.position)?(this.isInFrontOfNearPlane(r.position)||i.push(this.computeNearPlaneIntersection2(r,o)),i.push(o)):this.isInFrontOfNearPlane(r.position)&&i.push(this.computeNearPlaneIntersection2(r,o)),r=o}if(i.length<3)return;const o=i.map(t=>(t.position=this.project(t.position),t));(3!==i.length||this.isTriangleCCW(o[0].position,o[1].position,o[2].position))&&(4!==i.length||this.isTriangleCCW2(o[0].position,o[1].position,o[2].position,o[3].position))&&this.clipConvexPolygon2(o)}clipConvexPolygon2(t){let e=t;for(let t=0;t<r.Framebuffer.clipRegion.length;t++){let i=r.Framebuffer.clipRegion[t],o=e;e=new Array;let n=o[o.length-1];for(let t=0;t<o.length;t++){let r=o[t];i.isInside2(r)?(i.isInside2(n)||e.push(i.computeIntersection2(n,r)),e.push(r)):i.isInside2(n)&&e.push(i.computeIntersection2(n,r)),n=r}}if(!(e.length<3))for(let t=0;t<e.length-2;t++)this.triangleRasterizer.drawTriangleDDA(e[0],e[1+t],e[2+t])}}},26:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=i(2),o=i(37);e.Canvas=class{constructor(t,e,i){this.scene=i,this.canvas=document.createElement("canvas"),this.canvas.width=t,this.canvas.height=e,this.canvas.style.cssText="image-rendering: optimizeSpeed;image-rendering: -moz-crisp-edges;image-rendering: -o-crisp-edges;image-rendering: -webkit-crisp-edges;image-rendering: crisp-edges;image-rendering: -webkit-optimize-contrast;image-rendering: pixelated; -ms-interpolation-mode: nearest-neighbor;",this.canvas.style.width=`${2*t}px`,this.canvas.style.height=`${2*e}px`,this.context=this.canvas.getContext("2d"),this.context.oImageSmoothingEnabled=!1,this.context.imageSmoothingEnabled=!1,this.context.webkitImageSmoothingEnabled=!1,this.framebuffer=new r.Framebuffer(320,200),this.boundRenderLoop=this.renderLoop.bind(this)}init(){this.canvas.addEventListener("click",t=>{t.preventDefault(),o.FullscreenUtils.toggleFullscreen(this.canvas)}),this.scene.init(this.framebuffer).then(()=>{this.scene.onInit(),this.renderLoop(0)})}renderLoop(t){this.scene.render(this.framebuffer),this.flipBackbuffer(),requestAnimationFrame(this.boundRenderLoop)}flipBackbuffer(){this.context.putImageData(this.framebuffer.getImageData(),0,0)}appendTo(t){t.appendChild(this.canvas)}}},27:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=i(1);class o{static constructXRotationMatrix(t){let e=new o,i=Math.cos(t),r=Math.sin(t);return e.m11=1,e.m12=0,e.m13=0,e.m21=0,e.m22=i,e.m23=-r,e.m31=0,e.m32=r,e.m33=i,e}static constructYRotationMatrix(t){let e=new o;return e.m11=Math.cos(t),e.m12=0,e.m13=Math.sin(t),e.m21=0,e.m22=1,e.m23=0,e.m31=-Math.sin(t),e.m32=0,e.m33=Math.cos(t),e}static constructZRotationMatrix(t){let e=new o;return e.m11=Math.cos(t),e.m12=-Math.sin(t),e.m13=0,e.m21=Math.sin(t),e.m22=Math.cos(t),e.m23=0,e.m31=0,e.m32=0,e.m33=1,e}static constructScaleMatrix(t,e,i){let r=new o;return r.m11=t,r.m12=0,r.m13=0,r.m21=0,r.m22=e,r.m23=0,r.m31=0,r.m32=0,r.m33=i,r}multiplyMatrix(t){let e=new o;return e.m11=this.m11*t.m11+this.m12*t.m21+this.m13*t.m31,e.m21=this.m21*t.m11+this.m22*t.m21+this.m23*t.m31,e.m31=this.m31*t.m11+this.m32*t.m21+this.m33*t.m31,e.m12=this.m11*t.m12+this.m12*t.m22+this.m13*t.m32,e.m22=this.m21*t.m12+this.m22*t.m22+this.m23*t.m32,e.m32=this.m31*t.m12+this.m32*t.m22+this.m33*t.m32,e.m13=this.m11*t.m13+this.m12*t.m23+this.m13*t.m33,e.m23=this.m21*t.m13+this.m22*t.m23+this.m23*t.m33,e.m33=this.m31*t.m13+this.m32*t.m23+this.m33*t.m33,e}multiply(t){return new r.Vector3f(this.m11*t.x+this.m12*t.y+this.m13*t.z,this.m21*t.x+this.m22*t.y+this.m23*t.z,this.m31*t.x+this.m32*t.y+this.m33*t.z)}}e.Matrix3f=o},28:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=i(10);e.FlatShadingTriangleRasterizer=class extends r.AbstractTriangleRasterizer{constructor(t){super(),this.framebuffer=t,this.temp=null}drawTriangleDDA(t,e,i){t.projection.y>i.projection.y&&(this.temp=t,t=i,i=this.temp),t.projection.y>e.projection.y&&(this.temp=t,t=e,e=this.temp),e.projection.y>i.projection.y&&(this.temp=e,e=i,i=this.temp),t.projection.y!==i.projection.y&&(e.projection.y===i.projection.y?(e.projection.x>i.projection.x&&(this.temp=e,e=i,i=this.temp),this.fillBottomFlatTriangle(t,e,i)):t.projection.y===e.projection.y?(t.projection.x>e.projection.x&&(this.temp=t,t=e,e=this.temp),this.fillTopFlatTriangle(t,e,i)):(i.projection.x-t.projection.x)*(e.projection.y-t.projection.y)/(i.projection.y-t.projection.y)+t.projection.x>e.projection.x?this.fillLongRightTriangle(t,e,i):this.fillLongLeftTriangle(t,e,i))}fillBottomFlatTriangle(t,e,i){const r=t.color.toPackedFormat(),o=i.projection.y-t.projection.y,n=(e.projection.x-t.projection.x)/o,s=(i.projection.x-t.projection.x)/o,x=(1/e.projection.z-1/t.projection.z)/o,y=(1/i.projection.z-1/t.projection.z)/o;let a=1/t.projection.z,h=1/t.projection.z,z=t.projection.x,m=t.projection.x,f=t.projection.y;for(let t=0;t<o;t++){let t=Math.round(m)-Math.round(z),e=320*Math.round(f)+Math.round(z),i=(h-a)/t,o=a;for(let n=0;n<t;n++)o<this.framebuffer.wBuffer[e]&&(this.framebuffer.wBuffer[e]=o,this.framebuffer.framebuffer[e]=r),e++,o+=i;z+=n,m+=s,f++,a+=x,h+=y}}fillTopFlatTriangle(t,e,i){const r=t.color.toPackedFormat();let o=i.projection.y-t.projection.y,n=(i.projection.x-t.projection.x)/o,s=(i.projection.x-e.projection.x)/o,x=(1/i.projection.z-1/t.projection.z)/o,y=(1/i.projection.z-1/e.projection.z)/o,a=1/t.projection.z,h=1/e.projection.z,z=t.projection.x,m=e.projection.x,f=t.projection.y;for(let t=0;t<o;t++){let t=Math.round(m)-Math.round(z),e=320*Math.round(f)+Math.round(z);for(let i=0;i<t;i++){let o=(h-a)/t*i+a;o<this.framebuffer.wBuffer[e]&&(this.framebuffer.wBuffer[e]=o,this.framebuffer.framebuffer[e]=r),e++}z+=n,m+=s,f++,a+=x,h+=y}}fillLongRightTriangle(t,e,i){const r=t.color.toPackedFormat();let o=e.projection.y-t.projection.y,n=i.projection.y-t.projection.y,s=(e.projection.x-t.projection.x)/o,x=(i.projection.x-t.projection.x)/n,y=(1/e.projection.z-1/t.projection.z)/o,a=(1/i.projection.z-1/t.projection.z)/n,h=1/t.projection.z,z=1/t.projection.z,m=t.projection.x,f=t.projection.x,l=t.projection.y;for(let t=0;t<o;t++){let t=Math.round(f)-Math.round(m),e=320*Math.round(l)+Math.round(m),i=(z-h)/t,o=h;for(let n=0;n<t;n++)o<this.framebuffer.wBuffer[e]&&(this.framebuffer.wBuffer[e]=o,this.framebuffer.framebuffer[e]=r),e++,o+=i;m+=s,f+=x,l++,h+=y,z+=a}o=i.projection.y-e.projection.y,s=(i.projection.x-e.projection.x)/o,y=(1/i.projection.z-1/e.projection.z)/o,m=e.projection.x,l=e.projection.y;for(let t=0;t<o;t++){let t=Math.round(f)-Math.round(m),e=320*Math.round(l)+Math.round(m),i=(z-h)/t,o=h;for(let n=0;n<t;n++)o<this.framebuffer.wBuffer[e]&&(this.framebuffer.wBuffer[e]=o,this.framebuffer.framebuffer[e]=r),e++,o+=i;m+=s,f+=x,l++,h+=y,z+=a}}fillLongLeftTriangle(t,e,i){const r=t.color.toPackedFormat();let o=e.projection.y-t.projection.y,n=i.projection.y-t.projection.y,s=(e.projection.x-t.projection.x)/o,x=(i.projection.x-t.projection.x)/n,y=(1/e.projection.z-1/t.projection.z)/o,a=(1/i.projection.z-1/t.projection.z)/n,h=1/t.projection.z,z=1/t.projection.z,m=t.projection.x,f=t.projection.x,l=t.projection.y;for(let t=0;t<o;t++){let t=Math.round(f)-Math.round(m),e=320*Math.round(l)+Math.round(m),i=(z-h)/t,o=h;for(let n=0;n<t;n++)o<this.framebuffer.wBuffer[e]&&(this.framebuffer.wBuffer[e]=o,this.framebuffer.framebuffer[e]=r),e++,o+=i;m+=x,f+=s,l++,h+=a,z+=y}o=i.projection.y-e.projection.y,s=(i.projection.x-e.projection.x)/o,y=(1/i.projection.z-1/e.projection.z)/o,z=1/e.projection.z,f=e.projection.x,l=e.projection.y;for(let t=0;t<o;t++){let t=Math.round(f)-Math.round(m),e=320*Math.round(l)+Math.round(m),i=(z-h)/t,o=h;for(let n=0;n<t;n++)o<this.framebuffer.wBuffer[e]&&(this.framebuffer.wBuffer[e]=o,this.framebuffer.framebuffer[e]=r),e++,o+=i;m+=x,f+=s,l++,h+=a,z+=y}}}},29:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=i(12),o=i(13),n=i(14),s=i(15);class x{static clipConvexPolygon(t){let e=t;const i=x.clipRegion.length;for(let t=0;t<i;t++){const i=x.clipRegion[t],r=e;e=new Array;let o=r[r.length-1];for(let t=0;t<r.length;t++){const n=r[t];i.isInside(n)?(i.isInside(o)||e.push(i.computeIntersection(o,n)),e.push(n)):i.isInside(o)&&e.push(i.computeIntersection(n,o)),o=n}}return e}}x.clipRegion=new Array(new r.RightClipEdge,new o.LeftClipEdge,new n.BottomClipEdge,new s.TopClipEdge),e.SutherlandHodgman2DClipper=x},3:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.TextureCoordinate=class{constructor(t,e){this.u=t,this.v=e}}},30:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=i(0);e.PhongLighting=class{computeColor(t,e,i,o){let n=new r.Vector4f(0,0,0);for(let r=0;r<e.length;r++){const s=e[r],x=this.computeAmbientIntensity(t,s),y=this.computeDiffuseIntensity(t,s,i,o),a=this.computeSpecularIntensity(t,s,i,o);n=n.add(x).add(y).add(a)}return n}computeAmbientIntensity(t,e){return t.ambientColor.componentWiseMul(e.ambientIntensity)}computeDiffuseIntensity(t,e,i,r){const o=e.position.sub(r).normalize(),n=Math.min(Math.max(i.dot(o),0),1);return t.diffuseColor.componentWiseMul(e.diffuseIntensity).mul(n)}computeSpecularIntensity(t,e,i,r){const o=e.position.sub(r).normalize(),n=i.mul(2*i.dot(o)).sub(o),s=r.mul(-1).normalize(),x=Math.pow(Math.max(n.dot(s),0),t.shininess);return t.specularColor.componentWiseMul(e.specularIntensity).mul(x)}}},31:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.Light=class{}},32:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=i(10);e.SubPixelFlatShadingTriangleRasterizer=class extends r.AbstractTriangleRasterizer{constructor(t){super(),this.framebuffer=t}drawTriangleDDA(t,e,i){const r=t.color.toPackedFormat();let o;t.projection.y>e.projection.y&&(o=t,t=e,e=o),t.projection.y>i.projection.y&&(o=t,t=i,i=o),e.projection.y>i.projection.y&&(o=e,e=i,i=o);const n=Math.ceil(t.projection.y),s=Math.ceil(e.projection.y),x=Math.ceil(i.projection.y);if(n===x)return;const y=i.projection.y-t.projection.y>0?(i.projection.x-t.projection.x)/(i.projection.y-t.projection.y):0,a=i.projection.y-e.projection.y>0?(i.projection.x-e.projection.x)/(i.projection.y-e.projection.y):0,h=e.projection.y-t.projection.y>0?(e.projection.x-t.projection.x)/(e.projection.y-t.projection.y):0,z=y>h;if(n===s&&e.projection.x!==t.projection.x)if(e.projection.x<t.projection.x){let i=Math.ceil(t.projection.y)-t.projection.y;this.rightX=t.projection.x+i*y,i=Math.ceil(e.projection.y)-e.projection.y,this.leftX=e.projection.x+i*a,this.drawSegement(s,x,a,y,r)}else{let i=Math.ceil(t.projection.y)-t.projection.y;this.leftX=t.projection.x+i*y,i=Math.ceil(e.projection.y)-e.projection.y,this.rightX=e.projection.x+i*a,this.drawSegement(s,x,y,a,r)}else if(z){const i=Math.ceil(t.projection.y)-t.projection.y;if(this.rightX=t.projection.x+i*y,n<s&&(this.leftX=t.projection.x+i*h,this.drawSegement(n,s,h,y,r)),s<x){const t=Math.ceil(e.projection.y)-e.projection.y;this.leftX=e.projection.x+t*a,this.drawSegement(s,x,a,y,r)}}else{const i=Math.ceil(t.projection.y)-t.projection.y;if(this.leftX=t.projection.x+i*y,n<s&&(this.rightX=t.projection.x+i*h,this.drawSegement(n,s,y,h,r)),s<x){const t=Math.ceil(e.projection.y)-e.projection.y;this.rightX=e.projection.x+t*a,this.drawSegement(s,x,y,a,r)}}}drawSegement(t,e,i,r,o){for(let n=t;n<e;n++){const t=Math.ceil(this.leftX),e=Math.ceil(this.rightX);let s=320*n+t;for(let i=t;i<e;i++)this.framebuffer.framebuffer[s++]=o;this.leftX+=i,this.rightX+=r}}}},33:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=i(1);e.TexturedAlphaBlendingTriangleRasterizer=class{constructor(t,e){this.framebuffer=t,this.pipeline=e,this.temp=null}drawTriangleDDA(t,e,i){if(t.position.y>i.position.y&&(this.temp=t,t=i,i=this.temp),t.position.y>e.position.y&&(this.temp=t,t=e,e=this.temp),e.position.y>i.position.y&&(this.temp=e,e=i,i=this.temp),t.position.y!==i.position.y)if((i.position.x-t.position.x)*(e.position.y-t.position.y)/(i.position.y-t.position.y)+t.position.x>e.position.x)this.fillLongRightTriangle2(t,e,i);else{let o=t.textureCoordinate,n=e.textureCoordinate,s=i.textureCoordinate;this.fillLongLeftTriangle2(t.position,e.position,i.position,new r.Vector3f(o.u,o.v,0),new r.Vector3f(n.u,n.v,0),new r.Vector3f(s.u,s.v,0))}}fillLongRightTriangle2(t,e,i){let r=e.position.y-t.position.y,o=i.position.y-t.position.y,n=(e.position.x-t.position.x)/r,s=(i.position.x-t.position.x)/o,x=(e.textureCoordinate.u/e.position.z-t.textureCoordinate.u/t.position.z)/r,y=(i.textureCoordinate.u/i.position.z-t.textureCoordinate.u/t.position.z)/o,a=(e.textureCoordinate.v/e.position.z-t.textureCoordinate.v/t.position.z)/r,h=(i.textureCoordinate.v/i.position.z-t.textureCoordinate.v/t.position.z)/o,z=(1/e.position.z-1/t.position.z)/r,m=(1/i.position.z-1/t.position.z)/o,f=1/t.position.z,l=1/t.position.z,u=t.textureCoordinate.u/t.position.z,c=t.textureCoordinate.v/t.position.z,p=t.textureCoordinate.u/t.position.z,d=t.textureCoordinate.v/t.position.z,w=t.position.x,M=t.position.x,b=t.position.y;for(let t=0;t<r;t++){let t=Math.round(M)-Math.round(w),e=320*Math.round(b)+Math.round(w),i=(l-f)/t,r=(p-u)/t,o=(d-c)/t,g=f,j=u,C=c;for(let n=0;n<t;n++){const t=this.framebuffer.framebuffer[e];if(g<this.framebuffer.wBuffer[e]){this.framebuffer.wBuffer[e]=g;let i=1/g,r=0|Math.max(Math.min(j*i*this.framebuffer.bob.width,this.framebuffer.bob.width-1),0),o=0|Math.max(Math.min(C*i*this.framebuffer.bob.height,this.framebuffer.bob.height-1),0),n=this.framebuffer.bob.texture[r+o*this.framebuffer.bob.width];const s=this.pipeline.alpha*(n>>24&255)/255,x=1-s;let y=(t>>0&255)*x+(n>>0&255)*s,a=(t>>8&255)*x+(n>>8&255)*s,h=(t>>16&255)*x+(n>>16&255)*s;this.framebuffer.framebuffer[e]=y|a<<8|h<<16|255<<24}e++,g+=i,j+=r,C+=o}w+=n,M+=s,b++,f+=z,l+=m,u+=x,p+=y,c+=a,d+=h}if(0!=(r=i.position.y-e.position.y)){n=(i.position.x-e.position.x)/r,z=(1/i.position.z-1/e.position.z)/r,x=(i.textureCoordinate.u/i.position.z-e.textureCoordinate.u/e.position.z)/r,a=(i.textureCoordinate.v/i.position.z-e.textureCoordinate.v/e.position.z)/r,f=1/e.position.z,u=e.textureCoordinate.u/e.position.z,c=e.textureCoordinate.v/e.position.z,w=e.position.x,b=e.position.y;for(let t=0;t<r;t++){let t=Math.round(M)-Math.round(w),e=320*Math.round(b)+Math.round(w),i=(l-f)/t,r=(p-u)/t,o=(d-c)/t,g=f,j=u,C=c;for(let n=0;n<t;n++){if(g<this.framebuffer.wBuffer[e]){this.framebuffer.wBuffer[e]=g;let t=1/g,i=0|Math.max(Math.min(j*t*this.framebuffer.bob.width,this.framebuffer.bob.width-1),0),r=0|Math.max(Math.min(C*t*this.framebuffer.bob.height,this.framebuffer.bob.height-1),0),o=this.framebuffer.bob.texture[i+r*this.framebuffer.bob.width];const n=this.pipeline.alpha*(o>>24&255)/255,s=1-n;let x=(this.framebuffer.framebuffer[e]>>0&255)*s+(o>>0&255)*n,y=(this.framebuffer.framebuffer[e]>>8&255)*s+(o>>8&255)*n,a=(this.framebuffer.framebuffer[e]>>16&255)*s+(o>>16&255)*n;this.framebuffer.framebuffer[e]=x|y<<8|a<<16|255<<24}e++,g+=i,j+=r,C+=o}w+=n,M+=s,b++,f+=z,l+=m,u+=x,p+=y,c+=a,d+=h}}}fillLongLeftTriangle2(t,e,i,r,o,n){let s=e.y-t.y,x=i.y-t.y,y=(e.x-t.x)/s,a=(i.x-t.x)/x,h=(n.x/i.z-r.x/t.z)/x,z=(o.x/e.z-r.x/t.z)/s,m=(n.y/i.z-r.y/t.z)/x,f=(o.y/e.z-r.y/t.z)/s,l=(1/e.z-1/t.z)/s,u=(1/i.z-1/t.z)/x,c=t.x,p=t.x,d=1/t.z,w=1/t.z,M=r.x/t.z,b=r.y/t.z,g=r.x/t.z,j=r.y/t.z,C=t.x,v=t.x,P=t.y;for(let t=0;t<s;t++){let t=Math.round(v)-Math.round(C),e=320*Math.round(P)+Math.round(C),i=(w-d)/t,r=(g-M)/t,o=(j-b)/t,n=d,s=M,x=b;for(let y=0;y<t;y++){if(n<this.framebuffer.wBuffer[e]){this.framebuffer.wBuffer[e]=n;let t=1/n,i=0|Math.max(Math.min(s*t*this.framebuffer.bob.width,this.framebuffer.bob.width-1),0),r=0|Math.max(Math.min(x*t*this.framebuffer.bob.height,this.framebuffer.bob.height-1),0),o=this.framebuffer.bob.texture[i+r*this.framebuffer.bob.width];const y=this.pipeline.alpha*(o>>24&255)/255,a=1-y;let h=(this.framebuffer.framebuffer[e]>>0&255)*a+(o>>0&255)*y,z=(this.framebuffer.framebuffer[e]>>8&255)*a+(o>>8&255)*y,m=(this.framebuffer.framebuffer[e]>>16&255)*a+(o>>16&255)*y;this.framebuffer.framebuffer[e]=h|z<<8|m<<16|255<<24}e++,n+=i,s+=r,x+=o}C+=a,v+=y,P++,c+=a,p+=y,d+=u,w+=l,M+=h,g+=z,b+=m,j+=f}s=i.y-e.y,y=(i.x-e.x)/s,l=(1/i.z-1/e.z)/s,z=(n.x/i.z-o.x/e.z)/s,f=(n.y/i.z-o.y/e.z)/s,p=e.x,w=1/e.z,g=o.x/e.z,j=o.y/e.z,v=e.x,P=e.y;for(let t=0;t<s;t++){let t=Math.round(v)-Math.round(C),e=320*Math.round(P)+Math.round(C),i=(w-d)/t,r=(g-M)/t,o=(j-b)/t,n=d,s=M,x=b;for(let y=0;y<t;y++){if(n<this.framebuffer.wBuffer[e]){this.framebuffer.wBuffer[e]=n;let t=1/n,i=0|Math.max(Math.min(s*t*this.framebuffer.bob.width,this.framebuffer.bob.width-1),0),r=0|Math.max(Math.min(x*t*this.framebuffer.bob.height,this.framebuffer.bob.height-1),0),o=this.framebuffer.bob.texture[i+r*this.framebuffer.bob.width];const y=this.pipeline.alpha*(o>>24&255)/255,a=1-y;let h=(this.framebuffer.framebuffer[e]>>0&255)*a+(o>>0&255)*y,z=(this.framebuffer.framebuffer[e]>>8&255)*a+(o>>8&255)*y,m=(this.framebuffer.framebuffer[e]>>16&255)*a+(o>>16&255)*y;this.framebuffer.framebuffer[e]=h|z<<8|m<<16|255<<24}e++,n+=i,s+=r,x+=o}C+=a,v+=y,P++,c+=a,p+=y,d+=u,w+=l,M+=h,g+=z,b+=m,j+=f}}}},34:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=i(2),o=i(1);class n{constructor(t){this.framebuffer=t}cohenSutherlandLineClipper(t,e,i){let s=new o.Vector3f(t.x,t.y,t.z),x=new o.Vector3f(e.x,e.y,e.z),y=this.computeRegionCode(s),a=this.computeRegionCode(x),h=!1,z=!1;for(;!z;)if(this.isTrivialAccept(y,a))h=!0,z=!0;else if(this.isTrivialReject(y,a))z=!0;else{if(y==n.REGION_CODE_CENTER){let t=y;y=a,a=t;let e=s;s=x,x=e}(y&n.REGION_CODE_TOP)!=n.REGION_CODE_CENTER?(s.x=s.x+(x.x-s.x)*(r.Framebuffer.maxWindow.y-s.y)/(x.y-s.y),s.y=r.Framebuffer.maxWindow.y):(y&n.REGION_CODE_BOTTOM)!=n.REGION_CODE_CENTER?(s.x=s.x+(x.x-s.x)*(r.Framebuffer.minWindow.y-s.y)/(x.y-s.y),s.y=r.Framebuffer.minWindow.y):(y&n.REGION_CODE_RIGHT)!=n.REGION_CODE_CENTER?(s.y=s.y+(x.y-s.y)*(r.Framebuffer.maxWindow.x-s.x)/(x.x-s.x),s.x=r.Framebuffer.maxWindow.x):(y&n.REGION_CODE_LEFT)!=n.REGION_CODE_CENTER&&(s.y=s.y+(x.y-s.y)*(r.Framebuffer.minWindow.x-s.x)/(x.x-s.x),s.x=r.Framebuffer.minWindow.x),y=this.computeRegionCode(s)}h&&this.framebuffer.drawLineDDA(s,x,i)}isTrivialAccept(t,e){return(t|e)===n.REGION_CODE_CENTER}isTrivialReject(t,e){return(t&e)!==n.REGION_CODE_CENTER}computeRegionCode(t){let e=n.REGION_CODE_CENTER;return t.x<r.Framebuffer.minWindow.x?e|=n.REGION_CODE_LEFT:t.x>r.Framebuffer.maxWindow.x&&(e|=n.REGION_CODE_RIGHT),t.y<r.Framebuffer.minWindow.y?e|=n.REGION_CODE_BOTTOM:t.y>r.Framebuffer.maxWindow.y&&(e|=n.REGION_CODE_TOP),e}}n.REGION_CODE_CENTER=0,n.REGION_CODE_LEFT=1,n.REGION_CODE_RIGHT=2,n.REGION_CODE_BOTTOM=4,n.REGION_CODE_TOP=8,e.CohenSutherlandLineClipper=n},35:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.LineRasterizerDda=class{constructor(t){this.framebuffer=t}drawLineDDA(t,e,i){let r,o,n,s=e.x-t.x,x=e.y-t.y;Math.abs(s)>Math.abs(x)?(r=Math.sign(s),o=x/Math.abs(s),n=Math.abs(s)):(r=s/Math.abs(x),o=Math.sign(x),n=Math.abs(x));let y=t.x,a=t.y,h=1/t.z,z=(1/e.z-1/t.z)/n;for(let t=0;t<=n;t++)h<this.framebuffer.wBuffer[Math.round(y)+320*Math.round(a)]&&(this.framebuffer.wBuffer[Math.round(y)+320*Math.round(a)]=h,this.framebuffer.drawPixel(Math.round(y),Math.round(a),i)),y+=r,a+=o,h+=z}}},36:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.LineRasterizerNoZ=class{constructor(t){this.framebuffer=t}drawLineDDANoZ(t,e,i){let r,o,n,s=e.x-t.x,x=e.y-t.y;Math.abs(s)>Math.abs(x)?(r=Math.sign(s),o=x/Math.abs(s),n=Math.abs(s)):(r=s/Math.abs(x),o=Math.sign(x),n=Math.abs(x));let y=t.x,a=t.y;for(let t=0;t<=n;t++)this.framebuffer.drawPixel(Math.round(y),Math.round(a),i),y+=r,a+=o}}},37:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});class r{static toggleFullscreen(t){this.fullscreen?(r.exitFullscreen(),this.fullscreen=!1):(r.enterFullscreen(t),this.fullscreen=!0)}static enterFullscreen(t){t.requestFullscreen?t.requestFullscreen():t.mozRequestFullScreen?t.mozRequestFullScreen():t.msRequestFullscreen?t.msRequestFullscreen():t.webkitRequestFullScreen&&t.webkitRequestFullScreen()}static exitFullscreen(){document.exitFullscreen?document.exitFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitExitFullscreen&&document.webkitExitFullscreen()}}r.fullscreen=!1,e.FullscreenUtils=r},378:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=i(26),o=i(379);(class{static main(){const t=new r.Canvas(320,200,new o.StarfieldScene);t.appendTo(document.getElementById("aisa")),t.init()}}).main()},379:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=i(9),o=i(8),n=i(2),s=i(0),x=i(38),y=i(41),a=i(3),h=i(5);let z=i(380);e.StarfieldScene=class extends x.AbstractScene{init(t){return this.bunnyObj=this.createBunny(),Promise.all([y.TextureUtils.load(i(95),!1).then(t=>this.spheremap=t),y.TextureUtils.load(i(67),!0).then(t=>this.texture7=t)])}createBunny(){let t=new Array;z.vertices.forEach(e=>{t.push(new s.Vector3f(e.x,e.y,e.z))});let e=new Array;z.normals.forEach(t=>{e.push(new s.Vector3f(t.x,t.y,t.z).normalize())});let i=z.faces,r=new Array,o=new Array;for(let e=0;e<t.length;e++)r.push(new s.Vector3f(0,0,0));for(let t=0;t<e.length;t++)o.push(new s.Vector3f(0,0,0));return{index:i,points:t,normals:e,points2:r,normals2:o}}render(t){const e=Date.now();t.clearColorBuffer(r.Color.BLACK.toPackedFormat()),t.setTexture(this.spheremap),t.setCullFace(o.CullFace.BACK),this.reflectionBunny(t,.002*e),this.scene7(t,.2*e,this.texture7)}scene7(t,e,i){let r=new Array;for(let t=0;t<120;t++)r.push(new s.Vector3f(8*Math.sin(.25*t),.3*t-18,8*Math.cos(.25*t)));r.push(new s.Vector3f(0,0,5));let o=s.Matrix3f.constructYRotationMatrix(5e-4*e);o=o.multiplyMatrix(s.Matrix3f.constructXRotationMatrix(2e-4*e));let n=new Array(r.length);r.forEach(t=>{let e=o.multiply(t),i=e.x,r=e.y,x=e.z-10,y=160+i/(.0058*x),a=100+r/(.0058*x);n.push(new s.Vector3f(y,a,x))}),n.sort(function(t,e){return t.z-e.z}),n.forEach(e=>{let r=-1.9/(.0058*e.z)|0;t.drawSoftParticle(e.x-r/2|0,e.y-r/2|0,r,r,i,1/e.z,1)})}reflectionBunny(t,e){t.clearDepthBuffer();let i=this.bunnyObj,r=s.Matrix4f.constructScaleMatrix(64.1,64.1,64.1).multiplyMatrix(s.Matrix4f.constructYRotationMatrix(.3*e));r=r.multiplyMatrix(s.Matrix4f.constructXRotationMatrix(.3*e));let o=(r=s.Matrix4f.constructTranslationMatrix(0,0,-8).multiplyMatrix(r)).computeNormalMatrix();for(let t=0;t<i.normals.length;t++)o.multiplyArr(i.normals[t],i.normals2[t]);for(let t=0;t<i.points.length;t++){let e=r.multiply(i.points[t]),o=e.x,n=e.y,s=e.z,x=160+o/(.0078*-s),y=100-n/(.0078*-s);i.points2[t].x=Math.round(x),i.points2[t].y=Math.round(y),i.points2[t].z=s}let x=new h.Vertex;x.textureCoordinate=new a.TextureCoordinate;let y=new h.Vertex;y.textureCoordinate=new a.TextureCoordinate;let z=new h.Vertex;z.textureCoordinate=new a.TextureCoordinate;let m=new Array(x,y,z);for(let e=0;e<i.index.length;e+=6){let r=i.points2[i.index[e]],o=i.points2[i.index[e+1]],s=i.points2[i.index[e+2]];t.isTriangleCCW(r,o,s)&&(m[0].position=r,t.fakeSphere(i.normals2[i.index[e+3]],x),m[1].position=o,t.fakeSphere(i.normals2[i.index[e+4]],y),m[2].position=s,t.fakeSphere(i.normals2[i.index[e+5]],z),r.x<n.Framebuffer.minWindow.x||o.x<n.Framebuffer.minWindow.x||s.x<n.Framebuffer.minWindow.x||r.x>n.Framebuffer.maxWindow.x||o.x>n.Framebuffer.maxWindow.x||s.x>n.Framebuffer.maxWindow.x||r.y<n.Framebuffer.minWindow.y||o.y<n.Framebuffer.minWindow.y||s.y<n.Framebuffer.minWindow.y||r.y>n.Framebuffer.maxWindow.y||o.y>n.Framebuffer.maxWindow.y||s.y>n.Framebuffer.maxWindow.y?t.texturedRenderingPipeline.clipConvexPolygon2(m):t.texturedTriangleRasterizer.drawTriangleDDA(m[0],m[1],m[2]))}}}},38:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.AbstractScene=class{init(t){return Promise.all([])}onInit(){}}},380:function(t){t.exports={vertices:[{x:-.068299,y:-.012056,z:-.004591},{x:-.068525,y:-.005406,z:-.012251},{x:-.064052,y:-.012598,z:-.014347},{x:-.055768,y:.031529,z:.044722},{x:-.06163,y:.027832,z:.042526},{x:-.055096,y:.026321,z:.039957},{x:-.034954,y:.031979,z:-.022985},{x:-.038456,y:.023834,z:-.027304},{x:-.047605,y:.027236,z:-.022685},{x:.043439,y:-.029232,z:-.027578},{x:.04182,y:-.036145,z:-.028203},{x:.036717,y:-.033639,z:-.033982},{x:-.029491,y:.082052,z:-.006989},{x:-.040923,y:.071875,z:-86e-5},{x:-.036353,y:.069932,z:.001201},{x:.047787,y:.028857,z:.011455},{x:.052105,y:.020373,z:.015567},{x:.052554,y:.022809,z:.004829},{x:.012459,y:-.03476,z:.045393},{x:.00148,y:-.036985,z:.04092},{x:.013537,y:-.038718,z:.041531},{x:-.068511,y:-.008897,z:.01445},{x:-.071733,y:-.007283,z:.009196},{x:-.067756,y:-.012199,z:.006393},{x:-.048113,y:.042054,z:.032571},{x:-.051938,y:.044347,z:.035792},{x:-.05728,y:.045946,z:.041329},{x:.032814,y:.016992,z:.035653},{x:.041297,y:.007613,z:.035627},{x:.045251,y:.01467,z:.028694},{x:-.006282,y:.095143,z:-.023457},{x:-.014288,y:.09306,z:-.01598},{x:-.021231,y:.084522,z:-.008864},{x:-.040539,y:.073995,z:-.009652},{x:-.031844,y:.082575,z:-.011494},{x:-.022646,y:.087572,z:-.020009},{x:-.057361,y:.059078,z:-.031633},{x:-.056608,y:.063283,z:-.051612},{x:-.052282,y:.058994,z:-.031321},{x:-.061184,y:.062333,z:-.028856},{x:-.060236,y:.065194,z:-.038989},{x:-.0596,y:.06216,z:-.042884},{x:-.074392,y:.061931,z:609e-6},{x:-.068437,y:.064993,z:-.004231},{x:-.066706,y:.06185,z:-.008431},{x:-.045195,y:.069829,z:-.003487},{x:-.040002,y:.067335,z:.005669},{x:-.078877,y:.030961,z:.025766},{x:-.075097,y:.025319,z:.025756},{x:-.07537,y:.025438,z:.03066},{x:-.063121,y:.069105,z:.008183},{x:-.059652,y:.068601,z:-.006008},{x:-.07173,y:.06666,z:.010611},{x:.054136,y:-.048148,z:-.004613},{x:.047022,y:-.051749,z:658e-6},{x:.045949,y:-.048888,z:-.009585},{x:-.022703,y:.027846,z:-.024948},{x:-.032912,y:.020588,z:-.028258},{x:.067325,y:-.01318,z:.003167},{x:.071962,y:-.015382,z:515e-6},{x:.064412,y:-.015793,z:-.004548},{x:.057201,y:-.038627,z:.023187},{x:.045106,y:-.046609,z:.018727},{x:.05683,y:-.042893,z:.018598},{x:-.01004,y:-.015643,z:-.046429},{x:-.014777,y:-.020069,z:-.039251},{x:-.016582,y:-.011982,z:-.04167},{x:.024651,y:-.052599,z:-.028854},{x:-.027993,y:-.053236,z:-.035286},{x:-.014737,y:-.05353,z:-.036597},{x:-.05378,y:.080307,z:-.06374},{x:-.051636,y:.092173,z:-.069224},{x:-.052477,y:.073855,z:-.066444},{x:-.062126,y:.077708,z:-.028973},{x:-.058365,y:.076564,z:-.022692},{x:-.059785,y:.087383,z:-.048566},{x:-.036536,y:.066177,z:-.01386},{x:-.024823,y:.065537,z:-.016374},{x:-.036782,y:.059573,z:-.010844},{x:-.04212,y:.066569,z:.019057},{x:-.046059,y:.068883,z:.005612},{x:-.054775,y:.073187,z:-.017546},{x:-.055017,y:.068598,z:-.006602},{x:-.051995,y:.068526,z:-.013592},{x:-.049618,y:.067769,z:-.004404},{x:-.049036,y:.064876,z:-.01418},{x:-.048196,y:.061693,z:-.020433},{x:-.047151,y:.070796,z:-.035258},{x:-.015347,y:.038093,z:-.006408},{x:-.024578,y:.038497,z:-.015053},{x:-.023389,y:.040779,z:-.007993},{x:-.01151,y:.039013,z:.004765},{x:.001378,y:.042061,z:-.004365},{x:-.047733,y:.082257,z:-.070291},{x:-.066324,y:.041561,z:-.014494},{x:-.061433,y:.033191,z:-.016451},{x:-.07136,y:.033871,z:-.011472},{x:-.064857,y:.037778,z:.043865},{x:-.073466,y:.056941,z:.027695},{x:-.075194,y:.05454,z:.023181},{x:-.075631,y:.047502,z:.030002},{x:.003579,y:.089405,z:-.038325},{x:-.006598,y:.087876,z:-.030875},{x:.001582,y:.09395,z:-.037987},{x:-.02271,y:.06404,z:-.012823},{x:-.004653,y:.07368,z:-.022516},{x:-.00352,y:.072368,z:-.019306},{x:.027087,y:.015217,z:-.030848},{x:.034903,y:.014152,z:-.030349},{x:.028913,y:.009703,z:-.032177},{x:.030622,y:.040601,z:-.007736},{x:.038154,y:.037876,z:469e-6},{x:.045075,y:.031722,z:-.003503},{x:-.074506,y:.043058,z:-.006078},{x:-.070845,y:.054615,z:-.00489},{x:-.067763,y:.051957,z:-.010496},{x:.008655,y:.043147,z:.013942},{x:.021987,y:.043917,z:.011068},{x:.012138,y:.044548,z:.005021},{x:.014472,y:.032096,z:.029637},{x:.027975,y:.029079,z:.028192},{x:.022583,y:.036428,z:.025476},{x:-.074608,y:.064918,z:.004506},{x:.039324,y:-.048792,z:.020825},{x:.05183,y:-.047555,z:.014145},{x:-.00126,y:-.052265,z:.037701},{x:-.017555,y:-.052435,z:.031134},{x:.004182,y:-.050151,z:.020044},{x:.05184,y:.011576,z:.023282},{x:.044296,y:.02715,z:.022099},{x:-.034263,y:.010953,z:.035024},{x:-.039917,y:.013106,z:.033622},{x:-.039888,y:.00344,z:.036063},{x:-.021637,y:.027804,z:.024531},{x:-.025101,y:.034291,z:.019591},{x:-.037402,y:.026134,z:.026633},{x:-.046622,y:.052534,z:.025696},{x:-.050205,y:.056875,z:.030719},{x:-.04878,y:.04876,z:.028782},{x:-.074081,y:.011308,z:.014773},{x:-.075852,y:.005094,z:.010905},{x:-.070807,y:.001318,z:.019712},{x:-.051753,y:-.047753,z:-.015554},{x:-.034095,y:-.053253,z:-.023193},{x:-.051264,y:-.053376,z:-.01564},{x:146e-6,y:.094667,z:-.031627},{x:-.005681,y:.09937,z:-.025245},{x:.00341,y:-.025736,z:-.044729},{x:.015308,y:-.019191,z:-.042649},{x:.016433,y:-.023698,z:-.042772},{x:817e-6,y:.004174,z:-.045663},{x:.011462,y:.009285,z:-.04028},{x:.017851,y:.005801,z:-.041709},{x:-.005626,y:.099043,z:-.029463},{x:-.017387,y:.092348,z:-.018555},{x:-918e-6,y:.099113,z:-.033263},{x:.03818,y:.037656,z:.00957},{x:.072204,y:-.026729,z:-.006309},{x:.072876,y:-.032901,z:908e-6},{x:.069735,y:-.036142,z:-.005495},{x:.072681,y:-.020739,z:.013898},{x:.074434,y:-.017526,z:.004082},{x:.071038,y:-.01459,z:.009628},{x:-.066255,y:-.007019,z:.023506},{x:-.07231,y:-.002146,z:.013802},{x:.016291,y:.005526,z:.046559},{x:.003707,y:.002891,z:.048054},{x:.004498,y:-.007902,z:.048949},{x:-.056155,y:.093525,z:-.06617},{x:-.054374,y:.094447,z:-.064419},{x:-.077139,y:.045089,z:-24e-5},{x:-.001823,y:.042014,z:.005236},{x:-.052508,y:-.022885,z:-.012587},{x:-.050323,y:-.01222,z:-.025577},{x:-.040323,y:-.045677,z:-.018586},{x:-.04419,y:-.040201,z:-.011991},{x:-.052745,y:.064227,z:-.050539},{x:-.044302,y:.059043,z:-.010861},{x:-.044155,y:.067779,z:-.008717},{x:-.042545,y:-.041922,z:.0357},{x:-.048006,y:-.049432,z:.035381},{x:-.040805,y:-.047314,z:.038484},{x:-.047899,y:-.052634,z:.01072},{x:-.050796,y:-.05201,z:.030921},{x:-.052992,y:-.051417,z:.023026},{x:-.024778,y:-.052099,z:.033533},{x:-.041591,y:-.05067,z:.037949},{x:.014099,y:.043819,z:-.006311},{x:-778e-6,y:.038824,z:-.012633},{x:-.005859,y:.0775,z:-.025955},{x:.004094,y:.093093,z:-.037523},{x:.00488,y:.079567,z:-.028961},{x:.004365,y:.083002,z:-.034314},{x:.00701,y:.041169,z:.019101},{x:.018653,y:.041047,z:.019935},{x:-.003708,y:.033752,z:.024537},{x:-.009722,y:.017914,z:.033731},{x:.002005,y:.032379,z:.028144},{x:-.028667,y:.037392,z:-.0185},{x:-.007414,y:.028341,z:-.024645},{x:-.002428,y:.033953,z:-.018575},{x:-.003129,y:.027008,z:-.026996},{x:-.067509,y:.013129,z:-.015272},{x:-.069021,y:.019404,z:-.010122},{x:-.060063,y:.017284,z:-.02022},{x:-.031293,y:.05886,z:-.007464},{x:-.037877,y:.055811,z:-.008746},{x:.07257,y:-.027406,z:.014364},{x:.067947,y:-.029127,z:.019315},{x:.071197,y:-.034855,z:.011939},{x:.050144,y:-.039117,z:.022545},{x:.05769,y:-.027672,z:.022569},{x:.067824,y:-.021136,z:.018813},{x:.059905,y:-.020468,z:.017991},{x:-.048101,y:.079135,z:-.058192},{x:-.046857,y:.080702,z:-.068448},{x:-.048569,y:.088553,z:-.06458},{x:-.053032,y:.086713,z:-.054017},{x:-.048965,y:.080137,z:-.052331},{x:-.048248,y:.073409,z:-.03062},{x:.040721,y:.032047,z:-.01295},{x:-.071386,y:.041204,z:-.011749},{x:-.07849,y:.030914,z:.032641},{x:-.07268,y:.027732,z:.038178},{x:-.050528,y:.009379,z:.034165},{x:-.052569,y:.015268,z:.032144},{x:-.05855,y:.007165,z:.032278},{x:-.061499,y:.024231,z:.037347},{x:-.050924,y:.03073,z:.040318},{x:-.069,y:.054038,z:.035572},{x:-.063703,y:.058489,z:.035123},{x:-.06966,y:.06195,z:.026043},{x:-.04954,y:.092254,z:-.067516},{x:-.030108,y:-.052351,z:.00999},{x:-.025238,y:-.052933,z:.019297},{x:-.035574,y:-.052722,z:.020143},{x:-.019319,y:-.053334,z:.006224},{x:-.015164,y:-.053084,z:.005069},{x:-.003003,y:-.031635,z:-.042475},{x:-.007414,y:-.023894,z:-.044133},{x:-.002131,y:-.023807,z:-.045925},{x:-.033204,y:-.033102,z:-.019066},{x:-.026865,y:-.037249,z:-.019965},{x:-.039598,y:-.039064,z:-.015094},{x:-.02115,y:-.04638,z:.039128},{x:-.014267,y:-.04946,z:.044859},{x:-.015375,y:.002317,z:.03546},{x:-.014478,y:-.004247,z:.037609},{x:-.010154,y:.004552,z:.04174},{x:-.055791,y:.06812,z:-.059064},{x:-.052508,y:.067468,z:-.060048},{x:-.049397,y:.073904,z:-.066051},{x:.061332,y:-.045226,z:.004301},{x:.066864,y:-.037378,z:.01566},{x:.063885,y:-.042821,z:.010221},{x:.06448,y:-.041812,z:-.004822},{x:.069198,y:-.039204,z:.005496},{x:-.062919,y:.007058,z:-.021788},{x:-.014853,y:-.007017,z:-.044419},{x:-.01142,y:-.001975,z:-.046198},{x:.001387,y:.076559,z:-.021199},{x:-.057577,y:-.052669,z:-.002681},{x:-.045665,y:-.053246,z:.009373},{x:.011329,y:-.027838,z:.045507},{x:.010562,y:-.023562,z:.047753},{x:.007382,y:-.03057,z:.045063},{x:.055904,y:.004213,z:-.016589},{x:.055679,y:.011812,z:-.011626},{x:.05905,y:24e-6,z:-.009421},{x:-.022116,y:-.049133,z:-.039031},{x:-.029377,y:-.051128,z:-.034996},{x:-.064382,y:.001107,z:.028256},{x:-.067668,y:.00866,z:.023963},{x:-.063636,y:.068036,z:.017269},{x:-.074466,y:.064374,z:.013966},{x:-.06313,y:.065894,z:.024394},{x:.026237,y:-.050651,z:-.030958},{x:.003567,y:-.051543,z:-.034364},{x:.021671,y:-.048122,z:-.032718},{x:-.013421,y:-.052765,z:-.029997},{x:-.072597,y:.045082,z:.038411},{x:-.067646,y:.045557,z:.042271},{x:-.036785,y:-.053537,z:-.01441},{x:-.07173,y:.026307,z:-.006406},{x:-.078312,y:.030732,z:235e-6},{x:-.074641,y:.035692,z:-.007851},{x:-.034736,y:.063346,z:.00219},{x:-.032039,y:.07013,z:-774e-6},{x:.075146,y:-.02413,z:.001133},{x:.074768,y:-.024648,z:.007866},{x:.069607,y:-.018572,z:-.00663},{x:.058706,y:.006357,z:.010687},{x:.057018,y:.013933,z:.003505},{x:.048874,y:-.007075,z:.031341},{x:.053388,y:-.002905,z:.025281},{x:.048014,y:.003356,z:.032331},{x:.059965,y:-.031736,z:.023275},{x:.021481,y:.04487,z:.001111},{x:.030003,y:.042194,z:919e-6},{x:.023948,y:.036325,z:-.01955},{x:.01701,y:.038651,z:-.016759},{x:.018941,y:.043062,z:-.008787},{x:.010096,y:.037087,z:.025514},{x:-.0125,y:.024282,z:.028748},{x:-.01656,y:.032685,z:.01993},{x:.026012,y:-.004752,z:.04511},{x:.031992,y:-.009457,z:.044076},{x:.031121,y:-.001221,z:.042138},{x:.026092,y:-.012755,z:.045684},{x:-.018759,y:.078731,z:-.024581},{x:-.024752,y:.081078,z:-.021427},{x:-.021138,y:.072494,z:-.021755},{x:-.013652,y:.036131,z:.012669},{x:-.015459,y:.038803,z:.005676},{x:-.002884,y:.04009,z:.013755},{x:.054639,y:-.043489,z:-.011639},{x:.065321,y:-.035514,z:-.011514},{x:.055757,y:-.008206,z:-.015787},{x:.053433,y:-.003192,z:-.022567},{x:.072183,y:-.020473,z:-.005033},{x:.064611,y:-.027845,z:-.013513},{x:.030808,y:-.04446,z:.035436},{x:.037031,y:-.046485,z:.031115},{x:.041112,y:-.038125,z:.028869},{x:.033664,y:-.051896,z:.018402},{x:.043456,y:-.051665,z:.008823},{x:.022227,y:-.051553,z:-.00343},{x:.031135,y:-.052772,z:-.008189},{x:.030425,y:-.051008,z:-.004715},{x:.018575,y:.032351,z:-.024214},{x:.003762,y:.026657,z:-.026652},{x:.008952,y:.038831,z:-.017139},{x:-.063802,y:.044683,z:.043887},{x:-.056482,y:.060708,z:.032603},{x:-.076422,y:.037813,z:.035625},{x:-.074696,y:.032939,z:.038389},{x:-.079003,y:.036984,z:.029905},{x:-.07863,y:.036061,z:.022538},{x:-.053453,y:.068587,z:.018769},{x:.007933,y:.009085,z:.045461},{x:-.00878,y:-.046641,z:.04525},{x:-.008248,y:-.042405,z:.044225},{x:-.00566,y:-.051268,z:.043731},{x:.006779,y:-.04563,z:.039957},{x:-.008604,y:-.012502,z:.043066},{x:-.004254,y:-.006024,z:.048555},{x:-.010047,y:-.00669,z:.045428},{x:-.033929,y:-.043454,z:.034932},{x:-.025329,y:-.039617,z:.031134},{x:-.04533,y:-.039482,z:.028282},{x:-.047182,y:-.042863,z:.03305},{x:-.050537,y:-.043274,z:.026281},{x:-.051776,y:-.04879,z:.029492},{x:-.062665,y:.091713,z:-.058728},{x:-.064928,y:.082446,z:-.045547},{x:-.062463,y:.067576,z:-.011369},{x:-.062223,y:.065357,z:-.01741},{x:-.063142,y:.062015,z:-.015037},{x:-.055283,y:.054949,z:-.018942},{x:-.06154,y:.057406,z:-.015186},{x:.032394,y:-.05127,z:.03098},{x:.025271,y:-.052354,z:.029657},{x:.018813,y:-.043683,z:.03672},{x:.026467,y:-.050546,z:.035552},{x:-.051769,y:.079616,z:-.034408},{x:-.056145,y:.083479,z:-.039367},{x:-.066077,y:.0307,z:.040346},{x:-.069798,y:.034569,z:.040415},{x:-.076401,y:.025966,z:.001043},{x:.031933,y:.005045,z:.039293},{x:.028875,y:.006011,z:.042116},{x:-.009672,y:-.001041,z:.045701},{x:-.013987,y:.035534,z:-.01478},{x:.017219,y:-.052991,z:-.026635},{x:-.002704,y:-.003098,z:-.048355},{x:.009149,y:-.002734,z:-.046389},{x:-.075161,y:.001719,z:.002096},{x:-.076709,y:.025695,z:.007455},{x:-.076363,y:.049199,z:.005513},{x:.025993,y:-.052786,z:-.020018},{x:.019083,y:-.052944,z:-.006753},{x:.005519,y:-.01385,z:-.046404},{x:-.005781,y:-.015699,z:-.04784},{x:-.054552,y:.0146,z:-.023899},{x:-.05553,y:.007102,z:-.025263},{x:-.058265,y:.038747,z:-.017795},{x:-.042134,y:.03782,z:-.016308},{x:-.047358,y:.033042,z:-.018239},{x:-.059282,y:-.006956,z:.029577},{x:-.056687,y:-.014336,z:.026816},{x:-.053168,y:-.003283,z:.034589},{x:-.057712,y:.038095,z:.044364},{x:-.0519,y:.036435,z:.042161},{x:-.043556,y:-.014221,z:.031761},{x:-.046809,y:-.008824,z:.033927},{x:-.047942,y:-.050105,z:.010556},{x:-.058106,y:-.050843,z:-64e-5},{x:-.054865,y:-.052115,z:-.014393},{x:-.058265,y:-.051275,z:-.00774},{x:-.055207,y:-.045703,z:-.009443},{x:-.063233,y:.068612,z:-.026927},{x:-.064073,y:.072022,z:-.027967},{x:-.004489,y:.072643,z:-.015079},{x:.002268,y:.087537,z:-.030538},{x:-.045019,y:-.052227,z:.035376},{x:-.069501,y:.00532,z:-.014562},{x:-.073383,y:-231e-6,z:-.006326},{x:-.07453,y:.013816,z:554e-6},{x:-.009608,y:.004423,z:-.043695},{x:-.015618,y:.001098,z:-.040579},{x:-.013317,y:-.051835,z:.043245},{x:-.062653,y:.02623,z:-.014091},{x:-.055013,y:.029245,z:-.017852},{x:.059193,y:.007665,z:-.002381},{x:.0183,y:-.003633,z:-.043014},{x:.024734,y:.001465,z:-.040465},{x:.039289,y:-.005422,z:-.033535},{x:-.04835,y:.065208,z:-.03674},{x:.030447,y:.003688,z:-.036168},{x:.042421,y:.00501,z:-.029674},{x:.025337,y:-.051669,z:.022774},{x:.026339,y:-.051868,z:.003908},{x:.034165,y:-.051947,z:-.011389},{x:-.04717,y:.087666,z:-.070172},{x:.048482,y:.025833,z:-.01032},{x:.053851,y:.020002,z:-.003947},{x:-.020889,y:-.052384,z:-.03979},{x:-.015907,y:-.045726,z:-.038996},{x:-.080456,y:.032075,z:.009702},{x:-.077685,y:.030389,z:.017916},{x:-.080259,y:.040919,z:.009394},{x:.056427,y:.007352,z:.017238},{x:-.077433,y:.061121,z:.007024},{x:.044904,y:-.031605,z:.029931},{x:.043814,y:-.040409,z:.025503},{x:.022987,y:-.023088,z:.045969},{x:.018326,y:-.011809,z:.047341},{x:.012957,y:-.019384,z:.047652},{x:-.05799,y:.052621,z:-.016348},{x:.032216,y:-.049705,z:-.026318},{x:-.038967,y:.063276,z:.014142},{x:-.045677,y:.061829,z:.027004},{x:-.044293,y:.05912,z:.024783},{x:-.047263,y:.064972,z:.026041},{x:-.031963,y:.012676,z:-.030839},{x:-.041092,y:.015696,z:-.028605},{x:-.04221,y:.008947,z:-.030206},{x:-.04722,y:.009757,z:-.027387},{x:-721e-6,y:.016763,z:-.032198},{x:-.013255,y:.01847,z:-.031664},{x:.01324,y:-.009086,z:.049899},{x:.008681,y:-.014558,z:.049675},{x:-.052854,y:.044459,z:-.01779},{x:-.048837,y:.053905,z:-.015794},{x:-.029477,y:.067258,z:-.001834},{x:-.025925,y:.063694,z:-.004972},{x:.066299,y:-.014915,z:.012882},{x:-.039342,y:-.053671,z:.00594},{x:-.038269,y:-.053568,z:-.002509},{x:.027659,y:.037502,z:.022584},{x:.032831,y:.034128,z:.023682},{x:.027379,y:.041117,z:.016764},{x:-.007832,y:.09384,z:-.030118},{x:-.040002,y:.051325,z:.021087},{x:-.03594,y:.043494,z:.022241},{x:-.033898,y:.046318,z:.015127},{x:-.042706,y:.045398,z:.027539},{x:-.038084,y:.036533,z:.026629},{x:-.044193,y:.038495,z:.031816},{x:-.046888,y:.033411,z:.033474},{x:.03086,y:.035755,z:-.016436},{x:.041836,y:.021471,z:.028049},{x:-.061718,y:.021104,z:.028871},{x:-.044535,y:-.0382,z:-.003637},{x:-.05162,y:-.040972,z:-.003386},{x:-.051653,y:-.043253,z:.001319},{x:-.077688,y:.059085,z:.014114},{x:-.049984,y:.056028,z:-.018019},{x:.045343,y:.023288,z:-.018514},{x:.033823,y:.029861,z:-.021267},{x:.039358,y:.025891,z:-.020319},{x:.038565,y:.017636,z:-.02603},{x:.049078,y:.016011,z:-.020031},{x:.026387,y:.022683,z:-.027868},{x:.021073,y:.026851,z:-.027879},{x:-.063572,y:.089966,z:-.059412},{x:-.064242,y:.082227,z:-.050062},{x:-.049514,y:-.002863,z:-.028049},{x:-.039933,y:-.006251,z:-.030103},{x:-.06502,y:-.002223,z:-.018989},{x:-.05869,y:-.002846,z:-.02477},{x:-.05076,y:-.047804,z:.017377},{x:-.043117,y:-.044668,z:.012548},{x:-.04098,y:-.038907,z:.020091},{x:-.039691,y:-.038158,z:.028854},{x:.034462,y:-.019833,z:-.037048},{x:.026163,y:-.016542,z:-.04041},{x:-.024379,y:.015537,z:.031772},{x:-.034204,y:.019511,z:.031069},{x:-.026853,y:.007335,z:.033661},{x:.017877,y:-.032329,z:-.039416},{x:.013038,y:-.038445,z:-.039224},{x:.005946,y:-.030659,z:-.042505},{x:-.058558,y:-128e-6,z:.03223},{x:-.066144,y:-.016185,z:.004889},{x:-.021375,y:-.042791,z:-.036645},{x:-.030925,y:-.046464,z:-.028907},{x:-.024868,y:-.040934,z:-.030642},{x:-.034517,y:-.014761,z:-.024926},{x:-.044183,y:-.016939,z:-.024299},{x:-.056779,y:-.046088,z:-.001469},{x:-.06324,y:-.0181,z:-.002001},{x:-.049559,y:-.041406,z:-.008095},{x:.048102,y:.009089,z:-.022648},{x:-.034681,y:.056182,z:-.003393},{x:-.015527,y:.072599,z:-.007602},{x:.050059,y:379e-6,z:-.026112},{x:-.035657,y:-.036493,z:.027477},{x:-.071324,y:-.007624,z:-.001489},{x:-.016218,y:-.045376,z:.042897},{x:.016574,y:-.001179,z:.048463},{x:.023217,y:337e-6,z:.046928},{x:.049337,y:-.035715,z:.022884},{x:-.003174,y:.007279,z:.044641},{x:-.002765,y:862e-6,z:.047918},{x:.037613,y:-.042263,z:-.024487},{x:.034293,y:-.039626,z:-.030694},{x:.058839,y:-.005529,z:.015833},{x:-.079765,y:.039718,z:.016409},{x:-.074988,y:.049886,z:.018248},{x:-.07338,y:.026396,z:.01823},{x:-.067604,y:.022982,z:.021338},{x:-.058296,y:-.010641,z:-.021771},{x:-.059104,y:-.019875,z:-.008367},{x:-.018291,y:-.005894,z:-.038716},{x:-.038815,y:-.020942,z:-.02024},{x:.041556,y:.033558,z:.016398},{x:.059563,y:-.036637,z:-.014701},{x:.037316,y:.031176,z:.023776},{x:.035309,y:.020268,z:.031042},{x:-.020141,y:.032365,z:-.019701},{x:-.020502,y:.018339,z:-.029828},{x:-.073022,y:-.002372,z:.006852},{x:-.048538,y:.016761,z:-.026613},{x:.032978,y:-.051961,z:.012135},{x:.037598,y:-.00258,z:.040368},{x:.03142,y:.01156,z:.038426},{x:.047034,y:-.017815,z:-.026763},{x:.041523,y:-.021299,z:-.030547},{x:.042836,y:-.011552,z:-.031286},{x:.024314,y:-.033144,z:-.038835},{x:.034775,y:-.027637,z:-.035845},{x:-.04797,y:.004099,z:.03641},{x:.039923,y:-.052475,z:.005326},{x:.014477,y:.011653,z:.042767},{x:.021771,y:-.028244,z:.044287},{x:.033358,y:-.023126,z:.039566},{x:.016609,y:-.031999,z:.044907},{x:-.037566,y:.05362,z:.011956},{x:-.035771,y:.057408,z:.001441},{x:-.076724,y:.048431,z:.011717},{x:-.0348,y:.048403,z:-.003712},{x:-.048398,y:.027596,z:.02976},{x:-.045845,y:.05018,z:-.015418},{x:.039802,y:-.025666,z:.035852},{x:.050807,y:-.023772,z:.028115},{x:.046041,y:-.015389,z:.031909},{x:-.02317,y:.039261,z:.011563},{x:-.029833,y:.042946,z:-209e-6},{x:-.010551,y:.034417,z:.01918},{x:-.074577,y:.01578,z:.008187},{x:.01163,y:.026489,z:-.028163},{x:.014275,y:.022141,z:-.029676},{x:-.002238,y:.007716,z:-.042591},{x:-.010074,y:.007917,z:-.037149},{x:.003712,y:.024747,z:.03283},{x:-733e-6,y:-.024856,z:.044524},{x:-.00391,y:-.028784,z:.04145},{x:.001428,y:-.016846,z:.046046},{x:-.061504,y:-.016379,z:.018939},{x:-.052455,y:-.027275,z:.004489},{x:-.056492,y:-.023976,z:.00959},{x:-.056665,y:-.024756,z:-473e-6},{x:-.060673,y:-.019917,z:.009249},{x:.031318,y:.018811,z:-.027149},{x:-.018804,y:.010079,z:.035253},{x:-.010954,y:.008225,z:.035585},{x:-.032848,y:-.047431,z:-.021236},{x:-.010997,y:-.030956,z:-.038213},{x:.060651,y:-.008871,z:.002428},{x:.062192,y:-.01332,z:.003222},{x:.059976,y:-.014312,z:-.005829},{x:.05136,y:-.024557,z:-.020704},{x:.056619,y:-.032611,z:-.015849},{x:.045778,y:-.037118,z:-.01675},{x:-.044893,y:-.028401,z:-.004136},{x:-.03957,y:-.030587,z:.004097},{x:.022538,y:.008363,z:-.037346},{x:.048705,y:-.037308,z:-.015572},{x:-.05521,y:.089067,z:-.065699},{x:-.009105,y:-.039519,z:-.0367},{x:.041373,y:-.044675,z:-.014045},{x:.025019,y:.017363,z:.036344},{x:.021196,y:.011249,z:.040151},{x:.041722,y:-.009182,z:.036905},{x:-.04126,y:71e-5,z:-.031037},{x:-.023479,y:-.053379,z:-.00548},{x:-.023508,y:-.053087,z:365e-6},{x:-.022783,y:-.051144,z:.004216},{x:-.023182,y:-.051667,z:.014538},{x:.060834,y:-.013934,z:.00963},{x:.023098,y:-.051027,z:-.017271},{x:.008252,y:.020233,z:.035005},{x:.017039,y:.02471,z:.033457},{x:.013793,y:.014762,z:.035374},{x:-.060355,y:.076253,z:-.044461},{x:-.068777,y:.020095,z:.018316},{x:-52e-6,y:-.043066,z:-.035966},{x:.02434,y:-.039951,z:-.035513},{x:-.033955,y:.041949,z:-.010355},{x:-.039717,y:.04402,z:-.0139},{x:-.037986,y:.049781,z:-.009755},{x:-.040866,y:-.005499,z:.036102},{x:-.071521,y:.022687,z:-.00256},{x:.053428,y:-.017514,z:-.019985},{x:-.006728,y:.010355,z:-.033894},{x:-.021459,y:.072961,z:-.007844},{x:-.003119,y:.077776,z:-.01958},{x:-.034323,y:.05047,z:.00687},{x:-.074971,y:.057188,z:.002841},{x:-.053968,y:.022771,z:.028843},{x:.037639,y:-.035979,z:.031873},{x:.024371,y:-.031437,z:.043823},{x:.019767,y:-.036359,z:.043651},{x:.0293,y:-.032579,z:.04006},{x:.026638,y:-.041058,z:.035904},{x:.059965,y:-.020891,z:-.009253},{x:-.035595,y:-.003818,z:.036074},{x:.040844,y:-.016367,z:.03475},{x:.035343,y:-.031138,z:.038541},{x:-.053412,y:-.021162,z:.020056},{x:.031506,y:-.04305,z:-.031983},{x:.018283,y:-.04386,z:-.033325},{x:.021097,y:-.012115,z:-.043233},{x:-.061295,y:.06603,z:-.025515},{x:-.028544,y:.040937,z:.007483},{x:-.030424,y:.034338,z:.018171},{x:-.031008,y:.038275,z:.014532},{x:-.048108,y:.065427,z:-.008627},{x:.019226,y:-.053295,z:.003169},{x:-.027202,y:-.05226,z:-.015127},{x:-.01968,y:-.051041,z:-.004541},{x:-.071384,y:-.0041,z:-.005025},{x:.035744,y:-.047235,z:-.016592},{x:-.018901,y:-.039886,z:.035295},{x:-.034028,y:.003919,z:.035429},{x:.016338,y:-.053014,z:.006399},{x:-.01618,y:.005867,z:-.033595},{x:.013686,y:-.052125,z:183e-6},{x:-.035085,y:.002891,z:-.030677},{x:-.024448,y:.002786,z:-.032517},{x:929e-6,y:.013884,z:.035095},{x:-.077844,y:.056067,z:.008227},{x:-.022684,y:-.052748,z:-.02724},{x:.022127,y:-.026596,z:-.039499},{x:.008123,y:.0235,z:-.030716},{x:.021118,y:.014435,z:-.030332},{x:.026142,y:.022183,z:.031348},{x:.006986,y:.013024,z:-.032894},{x:.046903,y:-.032221,z:-.021054},{x:.051597,y:-.031285,z:-.015195},{x:-.032756,y:-.051263,z:-46e-5},{x:-.028413,y:127e-6,z:-.030541},{x:.001404,y:-.040808,z:-.038184},{x:.057823,y:-.017336,z:.016607},{x:.054572,y:-.024767,z:.021135},{x:-.057586,y:.070964,z:-.04878},{x:-.032535,y:-.013703,z:.033087},{x:-.044689,y:-.027042,z:.013581},{x:-.045993,y:-.021218,z:.025087},{x:-.02961,y:-.016335,z:.033019},{x:-.037364,y:-.021134,z:.027334},{x:-.022026,y:.00235,z:.034708},{x:-.028774,y:-436e-6,z:.033938},{x:-.009167,y:-.038365,z:.04112},{x:-.024073,y:-.044323,z:.032872},{x:-.029873,y:-.037541,z:.030572},{x:-.027435,y:-.007932,z:.034041},{x:.002081,y:-.040009,z:.039156},{x:-.025139,y:-.022817,z:.032872},{x:-.018125,y:-.00567,z:.032687},{x:-.032217,y:-.033118,z:.028867},{x:-.023318,y:-.002886,z:.03488},{x:-.021029,y:-.003264,z:-.032858},{x:.036416,y:-.050868,z:.003121},{x:-.043476,y:.016882,z:.032823},{x:-.03579,y:.032484,z:.023081},{x:-.007657,y:.009979,z:.036271},{x:-.058603,y:.080954,z:-.054893},{x:-.060331,y:.01737,z:.027706},{x:-.014298,y:-.035939,z:-.03219},{x:-.048619,y:-.041966,z:.021705},{x:-.036486,y:-.031381,z:.023899},{x:-.013887,y:-.027969,z:-.034914},{x:-.022762,y:-.032994,z:.029868},{x:-.027758,y:-.006702,z:-.028863},{x:-.020817,y:-.013883,z:-.0283},{x:-.018013,y:-.027548,z:-.022967},{x:-.021727,y:-.008465,z:-.029201},{x:-.030794,y:-.023644,z:-.022918},{x:-.015276,y:-.038368,z:-.032524},{x:-.038737,y:-.033349,z:-.015738},{x:-.042723,y:-.028462,z:-.010558},{x:-.04042,y:-.025615,z:-.01659},{x:-.028263,y:-.040878,z:-.022463},{x:-.03901,y:-.026752,z:.018745},{x:-.037792,y:-.030953,z:.010499},{x:-.038193,y:-.035035,z:.017337},{x:-.072331,y:.021935,z:.009562},{x:.017692,y:-.051165,z:-.023717},{x:-.043352,y:-.035203,z:-.007723},{x:-.04485,y:-.026173,z:-.011514},{x:-.041795,y:-.033022,z:-58e-5},{x:-.035731,y:-.033959,z:.006993},{x:-.041241,y:.028009,z:.026472},{x:.015925,y:-.049838,z:-.00846},{x:.004552,y:-.049353,z:-737e-6},{x:-.022995,y:.076711,z:-.010102},{x:-.012899,y:.080027,z:-.017848},{x:-.006721,y:.088656,z:-.024205},{x:-.024336,y:-.015284,z:-.025977},{x:-.025642,y:-.026217,z:-.021381},{x:-.020162,y:-.02908,z:-.019991},{x:-.018149,y:-.035386,z:-.020145},{x:-.037813,y:-.038767,z:.005322},{x:-.042908,y:-.044626,z:.008909},{x:-.037072,y:-.040689,z:.01045},{x:.054822,y:-.025167,z:-.013054},{x:-.006287,y:-.036245,z:.037008},{x:-.017121,y:-.03497,z:.028456},{x:-.012586,y:-.034059,z:.029657},{x:-.014658,y:-.031292,z:.027401},{x:-.012059,y:-.020589,z:.031519},{x:-.018533,y:-.017696,z:.031673},{x:-.023235,y:-.048727,z:-.017676},{x:-.01543,y:-.048519,z:-.025588},{x:.005512,y:-.048568,z:-.024222},{x:.010277,y:-.047889,z:-.02035},{x:.019679,y:-.0484,z:-.020321},{x:.017041,y:-.047797,z:-.014696},{x:-.019751,y:-.048711,z:-.009667},{x:.011526,y:-.049075,z:612e-6}],normals:[{x:-.812052,y:-.555941,z:-.177485},{x:-.836664,y:-.298683,z:-.459109},{x:-.64037,y:-.604072,z:-.474365},{x:.260865,y:-.248509,z:.932841},{x:-.276322,y:-.578377,z:.767546},{x:.349008,y:-.795773,z:.494913},{x:-.081159,y:.562624,z:-.82272},{x:-.146359,y:.3514,z:-.924715},{x:-.343681,y:.462334,z:-.817392},{x:.729021,y:-.177065,z:-.661193},{x:.710451,y:-.459865,z:-.532714},{x:.556702,y:-.262896,z:-.788015},{x:-.219307,y:.727418,z:.650206},{x:-.357062,y:.764123,z:.537236},{x:.265014,y:.478761,z:.836992},{x:.750256,y:.647347,z:.134381},{x:.844992,y:.447326,z:.293065},{x:.848611,y:.527781,z:.036142},{x:.007087,y:-.349682,z:.936842},{x:-.276583,y:-.489122,z:.827201},{x:.004615,y:-.646954,z:.762515},{x:-.849292,y:-.455004,z:.267721},{x:-.888098,y:-.41811,z:.190962},{x:-.836659,y:-.542918,z:.072408},{x:.631494,y:.355198,z:.689239},{x:.779888,y:.252136,z:.572889},{x:.529898,y:.375569,z:.760366},{x:.321019,y:.534919,z:.781542},{x:.513259,y:.271502,z:.814157},{x:.573794,y:.405971,z:.7113},{x:.745815,y:-.053477,z:.664003},{x:-.108363,y:.821003,z:.560546},{x:.413255,y:.281447,z:.86603},{x:-.740437,y:.499154,z:-.450109},{x:-.592007,y:.800897,z:.089949},{x:-.666506,y:.552953,z:-.500013},{x:-.467399,y:-.857624,z:-.214519},{x:-.156192,y:-.923903,z:-.349294},{x:.347258,y:-.900385,z:-.262143},{x:-.947249,y:-.300449,z:-.111574},{x:-.986438,y:.086531,z:-.13947},{x:-.855655,y:-.471386,z:-.213657},{x:-.818522,y:.227565,z:-.52748},{x:-.63289,y:.660648,z:-.403725},{x:-.805764,y:.161505,z:-.569789},{x:-.521516,y:.852659,z:.031523},{x:.468946,y:.720567,z:.510758},{x:-.928411,y:-.365564,z:-.066458},{x:-.558562,y:-.822428,z:-.107798},{x:-.577343,y:-.789764,z:.20724},{x:-.099966,y:.994917,z:.012097},{x:-.253742,y:.964424,z:.074177},{x:-.376788,y:.925276,z:.043541},{x:.413267,y:-.862165,z:-.293056},{x:.278823,y:-.959452,z:-.041355},{x:.284658,y:-.787286,z:-.546946},{x:.041492,y:.593253,z:-.803946},{x:-.033795,y:.348703,z:-.936624},{x:.130083,y:.988365,z:-.078822},{x:.549538,y:.778629,z:-.302893},{x:.175014,y:.813944,z:-.553955},{x:.30858,y:-.430448,z:.84823},{x:.254561,y:-.575975,z:.776821},{x:.399652,y:-.789662,z:.465523},{x:-.485635,y:-.243524,z:-.839556},{x:-.801697,y:-.326122,z:-.500925},{x:-.843836,y:-.19115,z:-.5014},{x:.157788,y:-.960241,z:-.230303},{x:-.263777,y:-.916456,z:-.300882},{x:.071814,y:-.918984,z:-.387701},{x:-.874684,y:-.138066,z:-.464614},{x:-.349232,y:.318081,z:-.881397},{x:-.486874,y:-.393114,z:-.780009},{x:-.683136,y:.652081,z:.328809},{x:-.197779,y:.890233,z:.410329},{x:-.096427,y:.905283,z:.41372},{x:-.345338,y:-.218237,z:-.912751},{x:.033883,y:-.718245,z:-.694965},{x:.092641,y:-.564149,z:-.82046},{x:.549529,y:.7666,z:.332179},{x:.070754,y:.997032,z:.030334},{x:.369849,y:.842519,z:.391629},{x:.327962,y:.944233,z:.029404},{x:.712342,y:.618927,z:.330905},{x:-.145951,y:.936517,z:-.318802},{x:.924184,y:.365397,z:.111217},{x:.969379,y:-.206282,z:-.133235},{x:.995959,y:.081287,z:.03819},{x:.038547,y:.967267,z:-.250818},{x:.299801,y:.841415,z:-.4496},{x:.261407,y:.947617,z:-.183541},{x:-.206131,y:.967851,z:.144135},{x:-.203494,y:.968012,z:-.146776},{x:.220862,y:-.260575,z:-.939852},{x:-.44703,y:.069714,z:-.891798},{x:-.380968,y:-.122071,z:-.916494},{x:-.599005,y:-.187093,z:-.778582},{x:-.367386,y:-.101366,z:.924528},{x:-.809613,y:.423185,z:.406744},{x:-.985828,y:.04271,z:.162233},{x:-.9411,y:.25018,z:.227467},{x:-1.063484,y:-.586479,z:-1.573127},{x:-.438605,y:-.201109,z:-.875888},{x:-.561834,y:-.186932,z:-.805853},{x:.20946,y:-.854812,z:-.474788},{x:.092922,y:-.79033,z:-.605594},{x:.45924,y:-.882445,z:-.101927},{x:-.00875,y:.49648,z:-.868004},{x:.341798,y:.406113,z:-.847494},{x:.194288,y:.542648,z:-.817181},{x:.386619,y:.87361,z:-.295518},{x:.545433,y:.833635,z:-.086924},{x:.694339,y:.709792,z:-.118692},{x:-.849785,y:.208333,z:-.484214},{x:-.844019,y:.253182,z:-.472791},{x:-.714065,y:.249776,z:-.654006},{x:-.119746,y:.966188,z:.228346},{x:.166872,y:.969967,z:.176969},{x:-.09933,y:.994896,z:.017741},{x:.0372,y:.533934,z:.844707},{x:.225365,y:.429051,z:.874715},{x:.123761,y:.695182,z:.7081},{x:-.642847,y:.739726,z:-.198877},{x:.545453,y:-.714381,z:.438338},{x:.374088,y:-.845084,z:.381957},{x:.01529,y:-.998638,z:.049892},{x:.026355,y:-.998499,z:.048008},{x:-.030703,y:-.997807,z:-.058632},{x:.787706,y:.305638,z:.534887},{x:.657308,y:.507203,z:.557398},{x:.092701,y:.24238,z:.965742},{x:-.040908,y:.285165,z:.957605},{x:-.031181,y:.068763,z:.997146},{x:.013672,y:.596638,z:.802394},{x:-.023412,y:.774412,z:.632248},{x:.037721,y:.569862,z:.820874},{x:.688946,y:.011542,z:.724721},{x:.676321,y:.137294,z:.723699},{x:.67835,y:.309791,z:.666236},{x:-.882333,y:.151855,z:.445453},{x:-.981622,y:-.073965,z:.175921},{x:-.849602,y:-.13063,z:.510991},{x:-.457891,y:.360687,z:-.812552},{x:-.681578,y:-.253135,z:-.686567},{x:-.295673,y:-.876166,z:-.380672},{x:.783222,y:.231263,z:.577131},{x:.448628,y:.743001,z:.496671},{x:.126549,y:-.226164,z:-.965834},{x:.231096,y:-.137283,z:-.963197},{x:.258531,y:-.185393,z:-.948046},{x:.036692,y:.48454,z:-.873999},{x:.085064,y:.816523,z:-.571012},{x:.278071,y:.409259,z:-.869013},{x:-.569757,y:.730991,z:-.37554},{x:-.528384,y:.848979,z:.006681},{x:.142036,y:1.732641,z:-.330083},{x:.531298,y:.841098,z:.101376},{x:.845566,y:-.110625,z:-.522283},{x:.930134,y:-.355547,z:-.091854},{x:.794799,y:-.495891,z:-.349839},{x:.837267,y:.222349,z:.499544},{x:.929455,y:.368762,z:-.011276},{x:.532225,y:.790529,z:.302986},{x:-.742036,y:-.418156,z:.523955},{x:-.89409,y:-.382612,z:.232834},{x:.151264,y:.403715,z:.902293},{x:-.042811,y:.293687,z:.954943},{x:-.144712,y:.052181,z:.988097},{x:-.578987,y:.492268,z:-.649959},{x:.257925,y:.952499,z:.161929},{x:-.912849,y:.25967,z:-.315084},{x:-.241969,y:.968456,z:.059537},{x:-.406011,y:-.771265,z:-.49021},{x:-.313945,y:-.482694,z:-.817585},{x:-.327751,y:.449934,z:-.830746},{x:-.56775,y:.655735,z:-.497665},{x:.7187,y:-.664558,z:-.20453},{x:.110797,y:.113891,z:-.987296},{x:-.543259,y:.429491,z:-.721392},{x:-.234717,y:.697704,z:.676844},{x:-.609696,y:-.022421,z:.792318},{x:.035807,y:.234152,z:.97154},{x:-.69237,y:-.691068,z:.207483},{x:-.646364,y:-.672951,z:.359653},{x:-.988696,y:-.140869,z:-.051346},{x:-.222967,y:-.710584,z:.66735},{x:-.142205,y:-.444335,z:.884502},{x:-.094242,y:.966371,z:-.239261},{x:-.17886,y:.890554,z:-.418238},{x:-.234062,y:-.557609,z:-.796422},{x:.995103,y:-.004675,z:-.098736},{x:.900227,y:-.434743,z:-.024297},{x:.433455,y:-.594828,z:-.676976},{x:-.140224,y:.861805,z:.487473},{x:.068915,y:.882764,z:.464735},{x:-.29536,y:.71766,z:.630656},{x:-.177138,y:.386918,z:.90494},{x:-.187184,y:.583796,z:.790028},{x:.065105,y:.73151,z:-.678716},{x:-.07993,y:.66393,z:-.743511},{x:-.114279,y:.785176,z:-.608637},{x:-.086373,y:.63201,z:-.770132},{x:-.734457,y:.248158,z:-.631657},{x:-.814627,y:.272206,z:-.512139},{x:-.547526,y:.304416,z:-.779452},{x:.410042,y:-.855418,z:-.316427},{x:.612397,y:-.196294,z:-.765793},{x:.872154,y:-.137118,z:.469624},{x:.650569,y:-.166187,z:.741041},{x:.83301,y:-.456499,z:.312574},{x:-.120427,y:-.117208,z:.985779},{x:-.001978,y:.275241,z:.961373},{x:.340928,y:.445019,z:.828086},{x:.090422,y:.630959,z:.770529},{x:.996038,y:-.088094,z:.01215},{x:.977094,y:-.139439,z:-.160763},{x:.875943,y:.379094,z:.298347},{x:.628495,y:.711485,z:.314299},{x:.90928,y:.381521,z:.166288},{x:.862062,y:.467504,z:.195678},{x:.545949,y:.701796,z:-.457627},{x:-.689243,y:.136663,z:-.711524},{x:-.89976,y:-.234797,z:.367834},{x:-.42853,y:-.482146,z:.764132},{x:-.217057,y:.214712,z:.952253},{x:-.234526,y:.277743,z:.931588},{x:-.473921,y:.150948,z:.867533},{x:-.179796,y:-.832979,z:.523277},{x:.74795,y:-.374151,z:.548254},{x:-.550227,y:.54647,z:.631364},{x:-.238575,y:.666408,z:.706387},{x:-.506615,y:.714921,z:.481902},{x:.66404,y:.744482,z:-.069255},{x:.118919,y:-.989313,z:-.084369},{x:.26619,y:-4.955281,z:-.072044},{x:.011282,y:-.999491,z:.029833},{x:-1.147655,y:-4.467609,z:.472531},{x:.164109,y:-.982604,z:-.086937},{x:-.16226,y:-.398635,z:-.902642},{x:-.470739,y:-.366479,z:-.802557},{x:-.037294,y:-.27966,z:-.959375},{x:-.311983,y:-.232391,z:-.921228},{x:-.27746,y:.152851,z:-.9485},{x:-.572013,y:.203342,z:-.79464},{x:-.732587,y:.222187,z:.643389},{x:-.354447,y:-.16755,z:.919943},{x:-.578931,y:.109755,z:.807956},{x:-.847196,y:-.012333,z:.531137},{x:-.70502,y:.43138,z:.562902},{x:-.870756,y:-.258032,z:-.418574},{x:.131584,y:-.82745,z:-.545905},{x:.69728,y:-.551577,z:-.45778},{x:.485447,y:-.871428,z:.070389},{x:.620605,y:-.573604,z:.534629},{x:.568076,y:-.77813,z:.267961},{x:.582137,y:-.744419,z:-.327043},{x:.734295,y:-.678829,z:.001509},{x:-.666619,y:.081999,z:-.740874},{x:-.716797,y:.045206,z:-.695815},{x:-.427837,y:.184436,z:-.884838},{x:.808313,y:99e-6,z:.588753},{x:-.506956,y:-.855843,z:.102607},{x:-.082887,y:-.995899,z:.036268},{x:-.017642,y:-.246933,z:.968872},{x:-.062347,y:-.217827,z:.973994},{x:-.149116,y:-.273811,z:.950154},{x:.831806,y:.248598,z:-.496285},{x:.867516,y:.3244,z:-.377068},{x:.958516,y:.061318,z:-.278366},{x:-.375015,y:.153057,z:-.914296},{x:-.739932,y:.168602,z:-.65121},{x:-.692454,y:-.070271,z:.718031},{x:-.733165,y:.145272,z:.664353},{x:-.239333,y:.94584,z:.219333},{x:-.634595,y:.734463,z:.240526},{x:-.213039,y:.877836,z:.428974},{x:.321537,y:-.574674,z:-.752571},{x:.164153,y:-.496073,z:-.852623},{x:.121786,y:-.247909,z:-.961098},{x:-.002618,y:-.899351,z:.437219},{x:-.747586,y:.315114,z:.584652},{x:-.481219,y:.268682,z:.834409},{x:.013289,y:-.999682,z:-.021429},{x:-.694378,y:-.449045,z:-.562315},{x:-.927879,y:-.172385,z:-.330642},{x:-.837323,y:-.089154,z:-.53939},{x:.638442,y:-.044543,z:.76838},{x:.606895,y:.051332,z:.793123},{x:.982817,y:-.018005,z:-.183703},{x:.982399,y:-.092085,z:.162517},{x:.37054,y:.608061,z:-.702112},{x:.959145,y:.221553,z:.17594},{x:.921263,y:.384649,z:.05762},{x:.681246,y:-.062803,z:.729356},{x:.845639,y:.049357,z:.531468},{x:.68976,y:.165948,z:.704764},{x:.180709,y:.049935,z:.982268},{x:.137174,y:.987186,z:-.081533},{x:.381471,y:.924322,z:-.010389},{x:.203904,y:.762701,z:-.613767},{x:865e-6,y:.778323,z:-.627864},{x:.096367,y:.920048,z:-.379769},{x:-.091675,y:.733451,z:.673532},{x:-.198261,y:.595331,z:.778636},{x:.010826,y:.792178,z:.610194},{x:.34213,y:.050594,z:.93829},{x:.420509,y:.011027,z:.907221},{x:.462542,y:.207592,z:.861951},{x:.315451,y:-.056588,z:.947253},{x:-.386416,y:-.166761,z:-.907124},{x:-.569845,y:.140834,z:-.809594},{x:-.147032,y:-.484099,z:-.862571},{x:.035524,y:.931212,z:.362743},{x:.179095,y:.976955,z:.116116},{x:-.311049,y:.897253,z:.313344},{x:.338303,y:-.632885,z:-.696425},{x:.613046,y:-.42421,z:-.666498},{x:.849201,y:-.064391,z:-.52413},{x:.839008,y:-.072137,z:-.539317},{x:.808209,y:.283603,z:-.516108},{x:.441063,y:.169212,z:-.88138},{x:.333247,y:-.022666,z:.942567},{x:.649501,y:-.401757,z:.645554},{x:.53758,y:-.18949,z:.821645},{x:.137728,y:-.9857,z:.09709},{x:.180014,y:-.974449,z:.134328},{x:.185661,y:-.976084,z:.113092},{x:-.068406,y:-.975183,z:.210569},{x:-.038128,y:-.982747,z:.180981},{x:-.017955,y:.672827,z:-.739582},{x:-.077377,y:.629074,z:-.773484},{x:-.083754,y:.802854,z:-.590264},{x:-.003379,y:.341297,z:.939949},{x:.187582,y:.654789,z:.732164},{x:-.749732,y:.132602,z:.648319},{x:-.628753,y:-.039286,z:.776612},{x:-.984986,y:.109751,z:.133254},{x:-.98807,y:-.149416,z:.037309},{x:.025515,y:.961593,z:.273292},{x:-.061109,y:.645768,z:.761084},{x:.131783,y:.021951,z:.991036},{x:.011119,y:.405977,z:.913816},{x:.14422,y:-.641458,z:.75348},{x:.278371,y:.171031,z:.945123},{x:-.701232,y:-.308648,z:.642659},{x:-.240606,y:-.136953,z:.960912},{x:-.694204,y:-.206562,z:.689502},{x:.075285,y:.608912,z:.789657},{x:.158507,y:.322206,z:.933305},{x:-.432081,y:.889246,z:.150158},{x:-.669273,y:.544707,z:.50534},{x:-.843981,y:.532898,z:.060959},{x:-.913854,y:.159619,z:.373353},{x:-.566058,y:.818848,z:.095215},{x:-.952854,y:.274855,z:.128547},{x:-.874875,y:.483777,z:-.02353},{x:-.987328,y:-.147044,z:-.059685},{x:-.965655,y:-.067067,z:-.251021},{x:-.072975,y:-.837019,z:-.542286},{x:-.721404,y:-.202603,z:-.662215},{x:.399809,y:-.862099,z:.31135},{x:.029458,y:-.997063,z:.070693},{x:.116369,y:-.316866,z:.941305},{x:.294356,y:-.435912,z:.850491},{x:.600912,y:.735283,z:.313472},{x:.270864,y:.897557,z:.347884},{x:-.38939,y:-.417855,z:.820837},{x:-.401941,y:-.086955,z:.911527},{x:-.781848,y:-.554287,z:-.285447},{x:.450364,y:.227212,z:.863451},{x:.399525,y:.387785,z:.830664},{x:-.606246,y:.228009,z:.761891},{x:-.137327,y:.886344,z:-.442195},{x:-.106874,y:-.964493,z:.241519},{x:-.020338,y:.169926,z:-.985247},{x:.242285,y:.119076,z:-.96287},{x:-.955888,y:-.290981,z:-.040106},{x:-.766664,y:-.640165,z:.04914},{x:-.952234,y:.187533,z:-.241001},{x:-.245879,y:-.96496,z:.091634},{x:-.24558,y:-.960479,z:-.131041},{x:.206673,y:-.114539,z:-.971683},{x:-.116457,y:-.11955,z:-.985974},{x:-.42557,y:.245348,z:-.871031},{x:-.372237,y:.155195,z:-.91507},{x:-.139565,y:.044109,z:-.98923},{x:.183867,y:.304853,z:-.934483},{x:-.143404,y:.468725,z:-.871626},{x:-.538482,y:-.348715,z:.767095},{x:-.446616,y:-.587527,z:.674793},{x:-.353002,y:-.32277,z:.878185},{x:.196933,y:.175248,z:.964627},{x:.689105,y:.167482,z:.705042},{x:-.16103,y:-.519049,z:.839439},{x:-.18492,y:-.268644,z:.945323},{x:-.679192,y:.399196,z:.615906},{x:-.87411,y:.007275,z:.485674},{x:-.742609,y:-.083306,z:-.664523},{x:-.955599,y:-.237737,z:-.1741},{x:-.696372,y:.611649,z:-.375434},{x:-.84096,y:-.50082,z:-.204853},{x:-.996713,y:-.0026,z:.080975},{x:.678954,y:-.249084,z:.690636},{x:.633113,y:.403241,z:.66073},{x:-.156529,y:-.937049,z:.312151},{x:-.849988,y:.02867,z:-.526022},{x:-.930106,y:-.218923,z:-.294917},{x:-.965534,y:.13067,z:-.225099},{x:-.344463,y:.588416,z:-.731514},{x:-.725123,y:.436552,z:-.532559},{x:-.129743,y:-.874803,z:.466783},{x:-.615871,y:-.071956,z:-.784554},{x:-.356477,y:.193827,z:-.913978},{x:.973306,y:.220304,z:-.064354},{x:.330824,y:.062576,z:-.941615},{x:.416424,y:.269787,z:-.86822},{x:.48759,y:.091923,z:-.86822},{x:.894695,y:-.415797,z:-.163196},{x:.436341,y:.422958,z:-.794174},{x:.481523,y:.278446,z:-.831025},{x:-.026104,y:-.999621,z:-.008766},{x:.086214,y:-.996198,z:-.012479},{x:.348576,y:-.899733,z:-.262633},{x:.838862,y:.285407,z:-.463524},{x:.759258,y:.559003,z:-.33323},{x:.866873,y:.48233,z:-.126051},{x:-.022847,y:-.343354,z:-.938928},{x:-.015803,y:.243581,z:-.969752},{x:-.970233,y:-.237294,z:.048362},{x:-.860277,y:-.500517,z:.096984},{x:-.97231,y:.221373,z:-.074882},{x:.890258,y:.219257,z:.399209},{x:-.943409,y:.264582,z:-.199939},{x:.563548,y:-.37887,z:.734079},{x:.649748,y:-.454936,z:.608983},{x:.294895,y:-.182357,z:.937967},{x:.283565,y:-.063202,z:.956868},{x:.08618,y:-.17311,z:.981125},{x:-.205573,y:-.110423,z:-.972392},{x:.686675,y:-.603603,z:-.405142},{x:.922714,y:.221976,z:.31516},{x:.727934,y:.200855,z:.655568},{x:.766905,y:-.027057,z:.641191},{x:.318056,y:.662144,z:.678532},{x:-.112873,y:.175208,z:-.97804},{x:-.212209,y:.215887,z:-.953079},{x:-.249274,y:.139641,z:-.958313},{x:-.362221,y:.133999,z:-.92241},{x:-.0309,y:.371668,z:-.927851},{x:-.110625,y:.356539,z:-.927708},{x:.170087,y:-.039772,z:.984626},{x:-.13881,y:-.228718,z:.963546},{x:.095439,y:.091509,z:-.99122},{x:.578458,y:-.110361,z:-.808212},{x:.443341,y:.247325,z:.861556},{x:.594976,y:-.570483,z:.566175},{x:.051742,y:.903424,z:.425615},{x:.122201,y:-.992483,z:-.006601},{x:.020226,y:-.984296,z:.175361},{x:.258375,y:.720176,z:.643886},{x:.353988,y:.655492,z:.6671},{x:.333735,y:.867841,z:.368067},{x:-.604484,y:.211158,z:-.768122},{x:.736874,y:.328562,z:.590816},{x:.778771,y:.307088,z:.547004},{x:.836235,y:.437963,z:.329998},{x:.557695,y:.400089,z:.727259},{x:.730855,y:.007018,z:.682497},{x:.542542,y:.185151,z:.81937},{x:.705428,y:-.160195,z:.690441},{x:.38436,y:.759247,z:-.525178},{x:.45353,y:.429025,z:.781183},{x:-.195273,y:-.892987,z:.405514},{x:-.657022,y:.725239,z:.205792},{x:-.537125,y:.843204,z:.02243},{x:-.505908,y:.655006,z:.56127},{x:-.973794,y:.13425,z:.183583},{x:.584578,y:-.673,z:-.453144},{x:.573561,y:.538902,z:-.616938},{x:.397584,y:.541386,z:-.740829},{x:.416103,y:.531803,z:-.737593},{x:.378321,y:.510369,z:-.772267},{x:.673913,y:.360141,z:-.645089},{x:.254714,y:.261746,z:-.930919},{x:.164284,y:.459275,z:-.872971},{x:-.867976,y:-.107619,z:-.484806},{x:-.772997,y:-.527061,z:-.353103},{x:-.335322,y:-.039217,z:-.941287},{x:-.050467,y:-.269223,z:-.961755},{x:-.762028,y:-.177007,z:-.622882},{x:-.494902,y:-.132163,z:-.858839},{x:-.822096,y:.402505,z:-.402677},{x:-.672782,y:.712539,z:-.19913},{x:-.547004,y:.816252,z:-.185795},{x:-.280344,y:.942685,z:.180974},{x:.441099,y:-.098844,z:-.891999},{x:.35637,y:-.128776,z:-.925428},{x:-.084975,y:.403379,z:.911079},{x:.084176,y:.425951,z:.900822},{x:.002027,y:.124173,z:.992259},{x:.195357,y:-.265436,z:-.944129},{x:.131333,y:-.44285,z:-.886925},{x:.136359,y:-.322899,z:-.936559},{x:-.487767,y:-.085888,z:.868739},{x:-.780674,y:-.614765,z:.112303},{x:-.359176,y:.591815,z:-.721628},{x:-.835604,y:.446752,z:-.319653},{x:-.539904,y:.734443,z:-.411215},{x:-.083365,y:-.443245,z:-.892515},{x:-.129273,y:-.632585,z:-.763626},{x:-.82485,y:.53305,z:.18836},{x:-.67942,y:-.724732,z:-.114687},{x:-.438621,y:.846062,z:-.30297},{x:.663252,y:.330762,z:-.671337},{x:.918907,y:-.394469,z:.002058},{x:.374792,y:.359311,z:.85465},{x:.665518,y:.206806,z:-.71716},{x:-.50826,y:.652772,z:.561748},{x:-.910531,y:-.394257,z:-.124473},{x:-.467734,y:.436718,z:.768441},{x:.147199,y:.225808,z:.962987},{x:.361594,y:.124299,z:.924013},{x:.394455,y:-.266708,z:.879359},{x:-.329563,y:.624139,z:.708405},{x:-.154652,y:.160258,z:.974885},{x:.701058,y:-.606766,z:-.374636},{x:.532498,y:-.444419,z:-.720373},{x:.926126,y:.050883,z:.373767},{x:-.982712,y:.148646,z:.110367},{x:-.988034,y:.098167,z:.118962},{x:-.669608,y:-.741014,z:.050234},{x:-.714342,y:-.636193,z:.291503},{x:-.612989,y:-.426917,z:-.66482},{x:-.635176,y:-.71536,z:-.291223},{x:-.892418,y:.104316,z:-.438986},{x:-.410393,y:-.486512,z:-.771287},{x:.586161,y:.718923,z:.373584},{x:.30769,y:-.317585,z:-.896921},{x:.418043,y:.595876,z:.685691},{x:.264699,y:.535376,z:.802064},{x:.141595,y:.808819,z:-.570757},{x:-.115328,y:.434109,z:-.893448},{x:-.949617,y:-.298411,z:.095803},{x:-.343141,y:.204889,z:-.916665},{x:-.024448,y:-.999322,z:-.027538},{x:.39447,y:.180602,z:.900986},{x:.265909,y:.342168,z:.901229},{x:.697133,y:-.071169,z:-.7134},{x:.652835,y:-.105744,z:-.750083},{x:.653822,y:-.065372,z:-.753819},{x:.246837,y:-.281756,z:-.927192},{x:.449059,y:-.088684,z:-.88909},{x:-.149223,y:.075898,z:.985886},{x:-.070673,y:-.996505,z:.044534},{x:.093094,y:.798669,z:.594526},{x:.299854,y:-.171548,z:.938434},{x:.493178,y:-.154166,z:.856159},{x:.126525,y:-.32231,z:.938141},{x:.90233,y:.334431,z:.27195},{x:.952496,y:.095833,z:.289079},{x:-.972777,y:.21052,z:.096888},{x:.931767,y:.297604,z:-.207949},{x:.594348,y:-.6197,z:.512564},{x:.390366,y:.232421,z:-.89084},{x:.572074,y:-.166079,z:.803212},{x:.732773,y:-.158649,z:.66172},{x:.541604,y:-.114442,z:.832807},{x:.142137,y:.913871,z:.380312},{x:.502117,y:.86354,z:-.046665},{x:-.27122,y:.839217,z:.471332},{x:-.956122,y:.262454,z:.130185},{x:.003767,y:.55579,z:-.831314},{x:.151775,y:.289613,z:-.945034},{x:-.145901,y:.812636,z:-.564212},{x:-.42741,y:.806715,z:-.408083},{x:-.102831,y:.387184,z:.91625},{x:-.327142,y:-.250798,z:.911086},{x:-.651989,y:-.236383,z:.72044},{x:-.137103,y:-.165986,z:.976551},{x:-.632657,y:-.688256,z:.355033},{x:-.35687,y:-.931604,z:.068971},{x:-.536073,y:-.810111,z:.237371},{x:-.547121,y:-.825873,z:-.136352},{x:-.644168,y:-.748083,z:.159437},{x:.21798,y:.518402,z:-.826888},{x:-.161177,y:.241557,z:.956908},{x:-2.067222,y:2.5079,z:5.219454},{x:-.636259,y:.468631,z:-.612829},{x:-.671629,y:-.294569,z:-.679811},{x:.984798,y:.169815,z:-.036552},{x:.44887,y:.892319,z:-.047778},{x:.878372,y:.219851,z:-.424415},{x:.783026,y:-.277627,z:-.55659},{x:.056441,y:.177139,z:-.982566},{x:.623362,y:-.534675,z:-.570563},{x:-.5892,y:-.802678,z:-.092473},{x:-.606744,y:-.74969,z:.264248},{x:.350507,y:.635417,z:-.688033},{x:.165073,y:-.266,z:-.949734},{x:-.64217,y:-.312314,z:-.700056},{x:-.337121,y:.020371,z:-.941241},{x:.347255,y:-.557381,z:-.754149},{x:-.010866,y:.644175,z:.764801},{x:.049205,y:.671484,z:.739384},{x:.609477,y:-.111476,z:.784927},{x:-.12992,y:-.03503,z:-.990906},{x:.178821,y:-.976565,z:-.119762},{x:-.25161,y:-.868877,z:.426317},{x:-.258348,y:-.954318,z:.15011},{x:-.173937,y:-2.814677,z:-.27619},{x:.820656,y:.464849,z:.332324},{x:-.589167,y:-.763829,z:-.263529},{x:-.045565,y:.215886,z:.975355},{x:.130922,y:.320085,z:.938299},{x:.082831,y:.507577,z:.857616},{x:-.739423,y:-.569843,z:-.358514},{x:-.844623,y:.137517,z:.517398},{x:.107732,y:-.219903,z:-.969555},{x:.207912,y:-.358648,z:-.910024},{x:.44695,y:.722484,z:-.527497},{x:.602239,y:.2052,z:-.771492},{x:.833567,y:.194625,z:-.516998},{x:-.078635,y:-.223489,z:.971529},{x:-.916203,y:-.228189,z:-.329395},{x:.846382,y:-.092363,z:-.524507},{x:-.155611,y:.687672,z:-.709149},{x:.182791,y:.702424,z:.687886},{x:.323522,y:.652615,z:.685148},{x:.881271,y:.465066,z:.084119},{x:-.862018,y:-.022075,z:-.506397},{x:.126468,y:-.171683,z:.977001},{x:.538253,y:-.435286,z:.721672},{x:.372209,y:-.164884,z:.913386},{x:.205824,y:-.444834,z:.871641},{x:.427722,y:-.353983,z:.831715},{x:.389925,y:-.360765,z:.847235},{x:.116765,y:.508496,z:-.853111},{x:.1417,y:-.15004,z:.978473},{x:.541757,y:-.094585,z:.835196},{x:.504479,y:-.257757,z:.824053},{x:-.45439,y:-.791365,z:.408988},{x:.467325,y:-.326717,z:-.821501},{x:.058086,y:-.502062,z:-.862879},{x:.320166,y:-.064659,z:-.945152},{x:-.970691,y:-.158291,z:-.18084},{x:.528745,y:.755779,z:.386299},{x:.349275,y:.599974,z:.719749},{x:.798208,y:.324223,z:.507684},{x:.297096,y:.700809,z:-.648538},{x:.094546,y:-.995433,z:-.013166},{x:.445534,y:-.891971,z:-.07673},{x:.442569,y:-.829886,z:-.339739},{x:-.90551,y:-.394225,z:-.156965},{x:.705963,y:-.612521,z:-.355574},{x:-.576328,y:.643685,z:.503503},{x:.19188,y:.036,z:.980758},{x:-.216798,y:-.974251,z:.061913},{x:-.427999,y:.373607,z:-.822942},{x:-.541647,y:-.832405,z:-.117132},{x:-.04699,y:-.077538,z:-.995881},{x:-.195936,y:-.101772,z:-.975321},{x:-.607542,y:1.121699,z:2.356527},{x:-.991336,y:-.068449,z:-.112105},{x:.283791,y:-.916778,z:.281034},{x:.270629,y:-.164835,z:-.948467},{x:.036861,y:.418505,z:-.907466},{x:.08894,y:.342092,z:-.935448},{x:-.077959,y:.594177,z:.800548},{x:.058195,y:.52677,z:-.848013},{x:.774817,y:-.403774,z:-.486441},{x:.534563,y:-.142995,z:-.832944},{x:.063837,y:-.962827,z:.262469},{x:-.169557,y:-.23037,z:-.958217},{x:-.043377,y:-.6013,z:-.797845},{x:.77891,y:.160428,z:.606269},{x:.415281,y:.203799,z:.886571},{x:-.967088,y:-.076649,z:-.242623},{x:-.068535,y:-.278745,z:.957917},{x:-.330599,y:-.891424,z:.309949},{x:-.268964,y:-.769958,z:.578639},{x:-.220097,y:-.189947,z:.956806},{x:-.385628,y:-.540323,z:.747892},{x:-.043628,y:-.04356,z:.998098},{x:.162193,y:-.033248,z:.986199},{x:-.165382,y:.761456,z:.626765},{x:-.339954,y:.439203,z:.831584},{x:-.165158,y:.243448,z:.955749},{x:-.101108,y:-.03277,z:.994336},{x:.114956,y:.226628,z:.967174},{x:.007982,y:-.117864,z:.992998},{x:-.169611,y:-.172031,z:.97038},{x:-.551138,y:.057324,z:.832443},{x:.032972,y:-.063827,z:.997416},{x:-.518974,y:-.137474,z:-.843663},{x:-.23785,y:-.968058,z:.079319},{x:-.027807,y:.388174,z:.921167},{x:.71886,y:.018803,z:.6949},{x:-.307911,y:.216433,z:.92647},{x:-.738708,y:-.481594,z:-.47157},{x:-.568415,y:.01455,z:.822613},{x:-.853317,y:.021934,z:-.520931},{x:-.59308,y:.750641,z:-.291195},{x:-.837084,y:-.054535,z:.544349},{x:-.886793,y:-.207048,z:-.413194},{x:.231025,y:-.070759,z:.970371},{x:-.11909,y:-.365333,z:-.923228},{x:-.740399,y:-.333841,z:-.583403},{x:-.869419,y:-.229694,z:-.437438},{x:-.67433,y:-.292872,z:-.677868},{x:-.145143,y:-.345781,z:-.927022},{x:-.46697,y:.756764,z:-.457435},{x:-.698377,y:-.153837,z:-.699002},{x:-.862516,y:-.348219,z:-.367165},{x:-.730315,y:-.366244,z:-.576633},{x:-.566987,y:.74663,z:-.34795},{x:-.721172,y:-.584949,z:.371142},{x:-.766218,y:-.639555,z:.06228},{x:-.996067,y:.085459,z:-.023378},{x:-.917728,y:-.317228,z:.239043},{x:-.24587,y:-.692817,z:.677903},{x:-.936176,y:.294674,z:-.191681},{x:-.4999,y:-.741987,z:-.446716},{x:-.927563,y:-.071353,z:.36679},{x:-.962292,y:-.168707,z:.213382},{x:.494531,y:-.192382,z:.847601},{x:-.650243,y:-.677212,z:-.344338},{x:.08254,y:-.987418,z:-.134885},{x:.582106,y:.20829,z:.785982},{x:.4249,y:.467852,z:.774967},{x:.651922,y:.082503,z:.753785},{x:-.15485,y:-.369871,z:-.916088},{x:.030525,y:-.289755,z:-.956614},{x:-.282855,y:-.289397,z:-.914463},{x:-.647577,y:.323679,z:-.689838},{x:-.768051,y:.415927,z:.486931},{x:-.548634,y:.771177,z:.322935},{x:-.829716,y:.552779,z:-.0775},{x:.709124,y:.066945,z:-.701899},{x:-.435249,y:.354551,z:.827558},{x:-.248407,y:.66651,z:.702893},{x:-.658518,y:.230467,z:.716407},{x:-.010131,y:.008267,z:.999915},{x:-.746206,y:-.205905,z:.633072},{x:.372335,y:-.145246,z:.916663},{x:.522755,y:-.852308,z:.017275},{x:.107607,y:-.930207,z:.350907},{x:-.09263,y:-.825132,z:.557294},{x:-.00591,y:-.998033,z:.062409},{x:-.330467,y:-.903304,z:.273557},{x:-.320316,y:-.934448,z:-.155576},{x:.186118,y:-.967608,z:-.170574},{x:-.503973,y:-.852581,z:-.138262}],faces:[0,1,2,0,1,2,3,4,5,3,4,5,6,7,8,6,7,8,9,10,11,9,10,11,12,13,14,12,13,14,15,16,17,15,16,17,18,19,20,18,19,20,21,22,23,21,22,23,24,25,26,24,25,26,27,28,29,27,28,29,30,31,32,30,31,32,33,34,35,33,34,35,36,37,38,36,37,38,39,40,41,39,40,41,42,43,44,42,43,44,45,46,13,45,46,13,47,48,49,47,48,49,50,51,52,50,51,52,53,54,55,53,54,55,6,56,57,6,56,57,58,59,60,58,59,60,61,62,63,61,62,63,64,65,66,64,65,66,67,68,69,67,68,69,70,71,72,70,71,72,73,74,75,73,74,75,76,77,78,76,77,78,79,46,80,79,46,80,81,82,83,81,82,83,82,80,84,82,80,84,85,86,87,85,86,87,88,89,90,88,89,90,88,91,92,88,91,92,93,72,71,93,72,71,94,95,96,94,95,96,97,4,3,97,4,3,98,99,100,98,99,100,101,102,103,101,102,103,104,105,106,104,105,106,107,108,109,107,108,109,110,111,112,110,111,112,113,114,115,113,114,115,116,117,118,116,117,118,119,120,121,119,120,121,51,43,122,51,43,122,62,123,124,62,123,124,125,126,127,125,126,127,128,129,29,128,129,29,130,131,132,130,131,132,133,134,135,133,134,135,136,137,138,136,137,138,139,140,141,139,140,141,142,143,144,142,143,144,145,146,30,145,146,30,147,148,149,147,148,149,150,151,152,150,151,152,146,31,30,146,31,30,153,154,31,153,154,31,155,146,145,155,146,145,153,31,146,153,31,146,15,112,156,15,112,156,157,158,159,157,158,159,160,161,162,160,161,162,21,163,164,21,163,164,165,166,167,165,166,167,71,168,169,71,168,169,113,170,114,113,170,114,118,92,171,118,92,171,172,2,173,172,2,173,174,142,175,174,142,175,176,38,37,176,38,37,177,76,78,177,76,78,178,45,33,178,45,33,179,180,181,179,180,181,182,183,184,182,183,184,185,181,186,185,181,186,187,188,92,187,188,92,101,189,102,101,189,102,190,191,192,190,191,192,193,121,194,193,121,194,195,196,197,195,196,197,198,56,6,198,56,6,199,200,201,199,200,201,202,203,204,202,203,204,205,206,78,205,206,78,207,208,209,207,208,209,210,62,61,210,62,61,211,212,213,211,212,213,214,215,216,214,215,216,217,218,216,217,218,216,217,219,218,217,219,218,112,220,110,112,220,110,115,94,221,115,94,221,39,41,36,39,41,36,222,49,223,222,49,223,224,225,226,224,225,226,5,4,227,5,4,227,3,5,228,3,5,228,229,230,231,229,230,231,194,117,116,194,117,116,216,169,217,216,169,217,232,71,169,232,71,169,233,234,235,233,234,235,236,237,234,236,237,234,238,239,240,238,239,240,241,242,243,241,242,243,244,185,245,244,185,245,246,247,248,246,247,248,249,250,37,249,250,37,72,251,250,72,251,250,53,252,54,53,252,54,209,253,254,209,253,254,255,256,252,255,256,252,257,202,204,257,202,204,64,258,259,64,258,259,191,106,105,191,106,105,191,260,106,191,260,106,190,101,103,190,101,103,190,192,101,190,192,101,182,261,262,182,261,262,112,15,17,112,15,17,263,264,265,263,264,265,266,267,268,266,267,268,269,68,270,269,68,270,271,272,141,271,272,141,153,146,155,153,146,155,273,274,275,273,274,275,45,34,33,45,34,33,13,12,34,13,12,34,276,277,278,276,277,278,279,68,67,279,68,67,280,98,100,280,98,100,281,230,229,281,230,229,262,144,282,262,144,282,283,284,285,283,284,285,286,287,14,286,287,14,288,161,289,288,161,289,290,60,59,290,60,59,291,292,16,291,292,16,293,294,295,293,294,295,296,212,211,296,212,211,110,297,298,110,297,298,299,300,301,299,300,301,171,116,118,171,116,118,195,302,193,195,302,193,303,304,133,303,304,133,52,51,122,52,51,122,305,306,307,305,306,307,305,308,306,305,308,306,309,76,310,309,76,310,309,311,76,309,311,76,312,91,313,312,91,313,195,193,314,195,193,314,53,255,252,53,255,252,315,316,255,315,316,255,316,157,159,316,157,159,268,317,318,268,317,318,290,319,320,290,319,320,321,322,323,321,322,323,324,325,124,324,325,124,326,327,328,326,327,328,318,266,268,318,266,268,329,300,299,329,300,299,330,201,331,330,201,331,332,230,281,332,230,281,26,137,333,26,137,333,334,222,335,334,222,335,336,337,47,336,337,47,215,214,251,215,214,251,160,162,212,160,162,212,275,338,273,275,338,273,275,230,333,275,230,333,16,129,128,16,129,128,166,165,339,166,165,339,245,340,341,245,340,341,340,342,343,340,342,343,344,345,346,344,345,346,347,179,181,347,179,181,181,348,347,181,348,347,349,350,179,349,350,179,351,352,350,351,352,350,104,205,77,104,205,77,105,104,77,105,104,77,353,354,75,353,354,75,355,356,357,355,356,357,357,39,36,357,39,36,358,36,38,358,36,38,358,359,36,358,359,36,360,361,324,360,361,324,362,343,363,362,343,363,81,364,365,81,364,365,51,82,81,51,82,81,223,366,367,223,366,367,368,284,283,368,284,283,307,369,370,307,369,370,105,192,191,105,192,191,371,346,345,371,346,345,252,124,54,252,124,54,254,253,63,254,253,63,372,88,188,372,88,188,279,67,373,279,67,373,97,281,334,97,281,334,281,229,280,281,229,280,374,150,375,374,150,375,353,169,168,353,169,168,164,140,376,164,140,376,164,141,140,164,141,140,249,41,40,249,41,40,37,36,41,37,36,41,377,284,368,377,284,368,378,114,170,378,114,170,298,297,117,298,297,117,379,327,380,379,327,380,381,382,374,381,382,374,240,239,64,240,239,64,204,383,384,204,383,384,385,386,387,385,386,387,388,389,390,388,389,390,3,391,97,3,391,97,3,228,392,3,228,392,80,82,50,80,82,50,274,52,122,274,52,122,98,231,274,98,231,274,288,319,161,288,319,161,390,393,394,390,393,394,72,250,249,72,250,249,182,395,396,182,395,396,397,398,399,397,398,399,400,401,354,400,401,354,277,67,69,277,67,69,277,276,67,277,276,67,238,240,147,238,240,147,260,402,106,260,402,106,403,260,191,403,260,191,103,153,155,103,153,155,83,364,81,83,364,81,219,217,364,219,217,364,45,13,34,45,13,34,217,365,364,217,365,364,217,75,365,217,75,365,404,183,182,404,183,182,405,406,407,405,406,407,160,208,207,160,208,207,374,408,150,374,408,150,259,409,408,259,409,408,342,245,410,342,245,410,245,185,410,245,185,410,411,95,412,411,95,412,157,316,320,157,316,320,396,261,182,396,261,182,332,281,97,332,281,97,360,363,361,360,363,361,413,292,291,413,292,291,414,415,416,414,415,416,375,150,152,375,150,152,230,332,333,230,332,333,38,176,417,38,176,417,105,77,311,105,77,311,144,398,397,144,398,397,144,397,142,144,397,142,297,118,117,297,118,117,187,92,118,187,92,118,77,76,311,77,76,311,256,209,254,256,209,254,158,289,209,158,289,209,418,109,419,418,109,419,414,375,152,414,375,152,352,183,180,352,183,180,352,184,183,352,184,183,420,421,324,420,421,324,404,180,183,404,180,183,404,186,180,404,186,180,55,54,422,55,54,422,93,215,251,93,215,251,93,423,215,93,423,215,423,93,71,423,93,71,14,32,12,14,32,12,214,216,218,214,216,218,33,310,178,33,310,178,33,35,310,33,35,310,154,34,31,154,34,31,53,315,255,53,315,255,53,55,315,53,55,315,216,232,169,216,232,169,112,424,220,112,424,220,112,17,425,112,17,425,426,269,427,426,269,427,277,69,426,277,69,426,28,295,29,28,295,29,255,159,256,255,159,256,255,316,159,255,316,159,417,87,86,417,87,86,83,219,364,83,219,364,85,87,219,85,87,219,337,428,429,337,428,429,430,284,428,430,284,428,16,431,291,16,431,291,42,122,43,42,122,43,432,274,122,432,274,122,212,208,160,212,208,160,212,296,208,212,296,208,253,61,63,253,61,63,208,296,61,208,296,61,181,180,186,181,180,186,433,323,434,433,323,434,435,436,437,435,436,437,438,359,358,438,359,358,276,439,67,276,439,67,365,74,81,365,74,81,365,75,74,365,75,74,440,441,442,440,441,442,79,338,443,79,338,443,46,14,13,46,14,13,46,286,14,46,286,14,80,338,79,80,338,79,80,50,338,80,50,338,444,445,57,444,445,57,446,447,445,446,447,445,201,448,449,201,448,449,450,451,437,450,451,437,450,167,451,450,167,451,42,432,122,42,432,122,231,275,274,231,275,274,231,230,275,231,230,275,391,3,392,391,3,392,85,83,82,85,83,82,452,438,453,452,438,453,438,452,385,438,452,385,286,454,287,286,454,287,286,455,454,286,455,454,141,163,271,141,163,271,141,164,163,141,164,163,335,223,367,335,223,367,335,222,223,335,222,223,363,360,322,363,360,322,58,162,59,58,162,59,456,212,162,456,212,162,160,289,161,160,289,161,160,207,289,160,207,289,423,216,215,423,216,215,423,232,216,423,232,216,103,155,190,103,155,190,76,178,310,76,178,310,207,209,289,207,209,289,284,113,285,284,113,285,161,59,162,161,59,162,161,319,59,161,319,59,457,262,458,457,262,458,457,235,262,457,235,262,459,460,461,459,460,461,116,193,194,116,193,194,116,314,193,116,314,193,71,232,423,71,232,423,103,462,153,103,462,153,103,102,462,103,102,462,463,464,465,463,464,465,466,467,464,466,467,464,467,468,469,467,468,469,250,176,37,250,176,37,110,299,301,110,299,301,110,220,470,110,220,470,129,471,29,129,471,29,472,49,48,472,49,48,472,227,49,472,227,49,473,474,475,473,474,475,186,404,185,186,404,185,124,63,62,124,63,62,124,252,63,124,252,63,324,124,123,324,124,123,98,229,231,98,229,231,98,280,229,98,280,229,274,432,476,274,432,476,477,86,453,477,86,453,83,85,219,83,85,219,374,382,259,374,382,259,355,73,401,355,73,401,355,74,73,355,74,73,302,197,119,302,197,119,302,195,197,302,195,197,478,220,424,478,220,424,479,470,220,479,470,220,478,480,220,478,480,220,478,481,480,478,481,480,481,478,482,481,478,482,483,484,479,483,484,479,73,354,401,73,354,401,73,75,354,73,75,354,354,485,486,354,485,486,354,353,485,354,353,485,280,334,281,280,334,281,154,35,34,154,35,34,26,333,332,26,333,332,301,297,110,301,297,110,187,118,297,187,118,297,214,87,417,214,87,417,173,487,488,173,487,488,489,257,490,489,257,490,182,491,492,182,491,492,182,184,491,182,184,491,493,349,494,493,349,494,351,350,349,351,350,349,416,495,496,416,495,496,158,256,159,158,256,159,158,209,256,158,209,256,252,254,63,252,254,63,252,256,254,252,256,254,497,498,499,497,498,499,500,501,502,500,501,502,503,388,390,503,388,390,503,163,388,503,163,388,504,21,23,504,21,23,389,388,163,389,388,163,505,427,269,505,427,269,446,445,444,446,445,444,143,270,68,143,270,68,506,507,270,506,507,270,508,509,173,508,509,173,510,399,398,510,399,398,474,510,475,474,510,475,474,399,510,474,399,510,511,504,0,511,504,0,512,474,473,512,474,473,512,399,474,512,399,474,208,253,209,208,253,209,208,61,253,208,61,253,441,79,443,441,79,443,37,41,249,37,41,249,513,267,266,513,267,266,51,74,355,51,74,355,51,81,74,51,81,74,514,206,205,514,206,205,402,455,106,402,455,106,402,515,455,402,515,455,52,274,273,52,274,273,194,461,117,194,461,117,194,459,461,194,459,461,516,266,318,516,266,318,517,179,347,517,179,347,494,349,179,494,349,179,180,350,352,180,350,352,180,179,350,180,179,350,518,1,0,518,1,0,38,477,358,38,477,358,38,417,477,38,417,477,417,86,477,417,86,477,341,519,245,341,519,245,503,271,163,503,271,163,370,520,521,370,520,521,221,96,285,221,96,285,221,94,96,221,94,96,273,50,52,273,50,52,273,338,50,273,338,50,522,433,434,522,433,434,261,398,144,261,398,144,153,35,154,153,35,154,153,462,35,153,462,35,310,462,102,310,462,102,310,35,462,310,35,462,102,309,310,102,309,310,309,102,311,309,102,311,338,333,443,338,333,443,338,275,333,338,275,333,166,523,524,166,523,524,166,339,523,166,339,523,525,526,10,525,526,10,378,170,430,378,170,430,294,527,431,294,527,431,401,356,355,401,356,355,401,400,356,401,400,356,334,336,222,334,336,222,334,100,336,334,100,336,222,47,49,222,47,49,222,336,47,222,336,47,337,528,428,337,528,428,336,100,529,336,100,529,530,48,47,530,48,47,531,472,48,531,472,48,64,382,240,64,382,240,64,259,382,64,259,382,173,532,490,173,532,490,173,2,532,173,2,532,511,0,533,511,0,533,66,258,64,66,258,64,66,534,258,66,534,258,535,509,508,535,509,508,111,156,112,111,156,112,15,156,536,15,156,536,31,12,32,31,12,32,31,34,12,31,34,12,185,404,126,185,404,126,374,259,408,374,259,408,316,537,320,316,537,320,316,315,537,316,315,537,538,460,539,538,460,539,460,459,120,460,459,120,440,79,441,440,79,441,440,46,79,440,46,79,218,87,214,218,87,214,218,219,87,218,219,87,25,137,26,25,137,26,136,442,137,136,442,137,466,464,463,466,464,463,540,200,56,540,200,56,313,88,90,313,88,90,313,91,88,313,91,88,214,176,251,214,176,251,214,417,176,214,417,176,158,288,289,158,288,289,157,319,288,157,319,288,479,299,470,479,299,470,199,56,200,199,56,200,199,541,56,199,541,56,384,257,204,384,257,204,384,490,257,384,490,257,21,504,163,21,504,163,21,542,22,21,542,22,158,157,288,158,157,288,84,45,178,84,45,178,72,93,251,72,93,251,357,44,355,357,44,355,357,359,44,357,359,44,82,51,50,82,51,50,355,43,51,355,43,51,355,44,43,355,44,43,169,75,217,169,75,217,169,353,75,169,353,75,387,198,6,387,198,6,8,7,543,8,7,543,544,325,324,544,325,324,536,16,15,536,16,15,536,129,16,536,129,16,545,28,546,545,28,546,547,548,549,547,548,549,11,550,551,11,550,551,224,552,131,224,552,131,111,298,156,111,298,156,111,110,298,111,110,298,459,121,120,459,121,120,459,194,121,459,194,121,106,205,104,106,205,104,106,455,205,106,455,205,137,441,443,137,441,443,137,442,441,137,442,441,157,320,319,157,320,319,439,422,67,439,422,67,274,476,98,274,476,98,424,112,425,424,112,425,128,431,16,128,431,16,187,297,301,187,297,301,299,110,470,299,110,470,553,54,325,553,54,325,553,422,54,553,422,54,554,339,165,554,339,165,490,487,173,490,487,173,189,311,102,189,311,102,189,105,311,189,105,311,435,555,556,435,555,556,435,557,555,435,557,555,267,413,268,267,413,268,425,292,413,425,292,413,503,390,552,503,390,552,78,77,205,78,77,205,465,558,463,465,558,463,559,46,440,559,46,440,430,528,560,430,528,560,430,428,528,430,428,528,514,559,561,514,559,561,562,228,5,562,228,5,562,469,228,562,469,228,7,445,543,7,445,543,563,452,453,563,452,453,564,565,566,564,565,566,433,522,565,433,522,565,426,68,269,426,68,269,301,331,187,301,331,187,331,188,187,331,188,187,312,567,304,312,567,304,313,90,568,313,90,568,569,195,314,569,195,314,134,304,567,134,304,567,407,140,570,407,140,570,407,376,140,407,376,140,272,139,141,272,139,141,570,140,139,570,140,139,360,123,322,360,123,322,360,324,123,360,324,123,359,438,94,359,438,94,571,484,572,571,484,572,330,300,329,330,300,329,399,142,397,399,142,397,399,175,142,399,175,142,455,514,205,455,514,205,455,286,514,455,286,514,267,425,413,267,425,413,17,292,425,17,292,425,17,16,292,17,16,292,363,343,342,363,343,342,573,408,574,573,408,574,573,150,408,573,150,408,549,548,495,549,548,495,505,269,270,505,269,270,333,137,443,333,137,443,450,437,436,450,437,436,371,524,523,371,524,523,371,345,524,371,345,524,575,197,196,575,197,196,576,344,577,576,344,577,576,345,344,576,345,344,576,578,345,576,578,345,91,171,92,91,171,92,314,116,171,314,116,171,92,188,88,92,188,88,325,54,124,325,54,124,434,123,62,434,123,62,433,565,564,433,565,564,389,163,579,389,163,579,580,581,582,580,581,582,511,583,504,511,583,504,579,163,504,579,163,504,284,430,170,284,430,170,94,385,95,94,385,95,94,438,385,94,438,385,319,290,59,319,290,59,156,117,461,156,117,461,156,298,117,156,298,117,422,327,379,422,327,379,481,108,584,481,108,584,196,585,586,196,585,586,303,497,585,303,497,585,489,532,1,489,532,1,489,490,532,489,490,532,143,506,270,143,506,270,587,506,143,587,506,143,405,202,257,405,202,257,518,22,542,518,22,542,334,335,367,334,335,367,334,280,100,334,280,100,261,144,262,261,144,262,428,377,429,428,377,429,428,284,377,428,284,377,588,239,238,588,239,238,385,412,95,385,412,95,461,536,156,461,536,156,461,460,536,461,460,536,283,285,96,283,285,96,329,484,571,329,484,571,587,143,174,587,143,174,589,590,591,589,590,591,526,550,11,526,550,11,9,548,547,9,548,547,592,9,547,592,9,547,320,537,593,320,537,593,594,525,10,594,525,10,391,392,26,391,392,26,392,24,26,392,24,26,392,228,469,392,228,469,223,227,366,223,227,366,223,49,227,223,49,227,515,454,455,515,454,455,321,363,322,321,363,322,363,321,362,363,321,362,342,340,245,342,340,245,396,398,261,396,398,261,396,510,398,396,510,398,595,596,580,595,596,580,267,424,425,267,424,425,267,482,424,267,482,424,597,152,151,597,152,151,597,415,152,597,415,152,315,598,537,315,598,537,557,435,264,557,435,264,282,144,143,282,144,143,168,485,353,168,485,353,168,599,485,168,599,485,600,588,238,600,588,238,147,502,238,147,502,238,538,536,460,538,536,460,601,55,422,601,55,422,27,546,28,27,546,28,27,602,546,27,602,546,546,370,369,546,370,369,546,603,370,546,603,370,565,294,293,565,294,293,293,604,566,293,604,566,446,605,487,446,605,487,606,607,458,606,607,458,608,609,233,608,609,233,244,245,519,244,245,519,133,135,498,133,135,498,589,413,610,589,413,610,337,336,528,337,336,528,67,379,373,67,379,373,379,380,611,379,380,611,539,29,471,539,29,471,575,612,613,575,612,613,613,614,120,613,614,120,540,89,88,540,89,88,198,540,56,198,540,56,198,89,540,198,89,540,192,189,101,192,189,101,192,105,189,192,105,189,486,400,354,486,400,354,615,400,486,615,400,486,351,184,352,351,184,352,570,139,616,570,139,616,240,382,381,240,382,381,617,427,600,617,427,600,550,526,618,550,526,618,516,549,419,516,549,419,394,552,390,394,552,390,619,561,568,619,561,568,619,620,621,619,620,621,306,604,545,306,604,545,306,556,604,306,556,604,307,370,521,307,370,521,479,220,480,479,220,480,91,314,171,91,314,171,91,569,314,91,569,314,175,399,512,175,399,512,393,622,394,393,622,394,516,513,266,516,513,266,516,419,513,516,419,513,623,411,203,623,411,203,357,36,359,357,36,359,11,548,9,11,548,9,11,551,548,11,551,548,418,416,415,418,416,415,71,599,168,71,599,168,556,306,308,556,306,308,129,536,538,129,536,538,538,471,129,538,471,129,538,539,471,538,539,471,547,317,624,547,317,624,128,294,431,128,294,431,128,295,294,128,295,294,240,148,147,240,148,147,148,240,381,148,240,381,597,418,415,597,418,415,573,151,150,573,151,150,625,573,574,625,573,574,572,484,483,572,484,483,584,479,480,584,479,480,584,483,479,584,483,479,484,299,479,484,299,479,302,121,193,302,121,193,302,119,121,302,119,121,482,108,481,482,108,481,482,513,108,482,513,108,436,308,305,436,308,305,524,345,578,524,345,578,578,451,167,578,451,167,520,450,436,520,450,436,626,515,627,626,515,627,402,627,515,402,627,515,402,260,627,402,260,627,620,206,621,620,206,621,620,563,206,620,563,206,206,514,621,206,514,621,559,628,561,559,628,561,561,621,514,561,621,514,561,619,621,561,619,621,155,145,190,155,145,190,387,6,8,387,6,8,629,432,42,629,432,42,560,378,430,560,378,430,99,98,476,99,98,476,24,392,469,24,392,469,630,5,472,630,5,472,630,562,5,630,562,5,304,303,569,304,303,569,26,332,391,26,332,391,317,549,318,317,549,318,182,262,404,182,262,404,604,293,295,604,293,295,631,433,564,631,433,564,555,632,556,555,632,556,632,633,634,632,633,634,635,633,362,635,633,362,635,634,633,635,634,633,526,11,10,526,11,10,434,322,123,434,322,123,434,323,322,434,323,322,125,342,410,125,342,410,497,133,498,497,133,498,60,290,636,60,290,636,132,552,394,132,552,394,132,131,552,132,131,552,542,164,376,542,164,376,403,191,190,403,191,190,422,553,327,422,553,327,533,0,2,533,0,2,132,622,637,132,622,637,557,18,20,557,18,20,482,478,424,482,478,424,638,639,564,638,639,564,174,143,142,174,143,142,303,585,196,303,585,196,303,195,569,303,195,569,303,196,195,303,196,195,29,295,128,29,295,128,312,569,91,312,569,91,583,579,504,583,579,504,583,640,579,583,640,579,396,475,510,396,475,510,313,567,312,313,567,312,200,372,188,200,372,188,359,115,44,359,115,44,359,94,115,359,94,115,419,416,418,419,416,418,641,276,278,641,276,278,641,439,276,641,439,276,501,618,642,501,618,642,381,414,643,381,414,643,381,375,414,381,375,414,148,643,496,148,643,496,148,381,643,148,381,643,509,172,173,509,172,173,221,113,115,221,113,115,221,285,113,221,285,113,251,176,250,251,176,250,644,356,400,644,356,400,374,375,381,374,375,381,568,567,313,568,567,313,645,134,567,645,134,567,603,554,165,603,554,165,646,645,647,646,645,647,376,407,406,376,407,406,575,119,197,575,119,197,575,613,119,575,613,119,379,67,422,379,67,422,571,330,329,571,330,329,420,324,361,420,324,361,539,27,29,539,27,29,177,178,76,177,178,76,648,84,178,648,84,178,436,521,520,436,521,520,436,305,521,436,305,521,305,307,521,305,307,521,447,487,384,447,487,384,238,502,501,238,502,501,200,331,201,200,331,201,200,188,331,200,188,331,23,0,504,23,0,504,513,419,108,513,419,108,482,267,513,482,267,513,326,421,649,326,421,649,165,370,603,165,370,603,265,264,576,265,264,576,68,426,69,68,426,69,606,650,651,606,650,651,282,458,262,282,458,262,490,384,487,490,384,487,466,468,467,466,468,467,138,466,463,138,466,463,24,468,466,24,468,466,113,284,170,113,284,170,652,406,1,652,406,1,652,376,406,652,376,406,542,376,652,542,376,652,422,439,653,422,439,653,405,1,406,405,1,406,405,257,1,405,257,1,654,244,519,654,244,519,606,237,236,606,237,236,167,450,520,167,450,520,541,201,449,541,201,449,544,553,325,544,553,325,426,427,617,426,427,617,367,97,334,367,97,334,404,262,235,404,262,235,126,234,237,126,234,237,126,235,234,126,235,234,556,308,435,556,308,435,57,541,444,57,541,444,57,56,541,57,56,541,97,391,332,97,391,332,213,212,456,213,212,456,609,234,233,609,234,233,655,132,637,655,132,637,416,549,495,416,549,495,629,42,44,629,42,44,421,420,656,421,420,656,608,236,609,608,236,609,127,656,420,127,656,420,541,449,657,541,449,657,435,308,436,435,308,436,511,582,583,511,582,583,511,533,582,511,533,582,658,649,656,658,649,656,488,487,605,488,487,605,149,500,502,149,500,502,409,259,258,409,259,258,659,605,446,659,605,446,659,446,444,659,446,444,657,444,541,657,444,541,657,660,444,657,660,444,282,606,458,282,606,458,282,650,606,282,650,606,68,282,143,68,282,143,612,661,614,612,661,614,612,575,661,612,575,661,235,126,404,235,126,404,415,414,152,415,414,152,383,447,384,383,447,384,299,484,329,299,484,329,300,330,331,300,330,331,603,546,602,603,546,602,560,662,378,560,662,378,518,23,22,518,23,22,68,663,282,68,663,282,68,279,663,68,279,663,185,125,410,185,125,410,185,126,125,185,126,125,664,551,550,664,551,550,551,664,495,551,664,495,551,495,548,551,495,548,638,566,604,638,566,604,545,604,28,545,604,28,604,295,28,604,295,28,318,549,516,318,549,516,317,547,549,317,547,549,268,591,317,268,591,317,589,268,413,589,268,413,589,591,268,589,591,268,644,39,357,644,39,357,641,278,618,641,278,618,199,201,541,199,201,541,236,607,606,236,607,606,520,165,167,520,165,167,520,370,165,520,370,165,371,248,247,371,248,247,371,523,248,371,523,248,452,386,385,452,386,385,383,8,543,383,8,543,412,387,8,412,387,8,386,452,563,386,452,563,502,147,149,502,147,149,448,330,665,448,330,665,120,539,460,120,539,460,659,488,605,659,488,605,508,173,488,508,173,488,133,304,134,133,304,134,534,409,258,534,409,258,574,408,409,574,408,409,206,177,78,206,177,78,652,518,542,652,518,542,652,1,518,652,1,518,57,7,6,57,7,6,624,592,547,624,592,547,501,500,618,501,500,618,463,440,442,463,440,442,453,358,477,453,358,477,453,438,358,453,438,358,666,572,483,666,572,483,270,507,505,270,507,505,643,416,496,643,416,496,120,119,613,120,119,613,539,602,27,539,602,27,539,667,602,539,667,602,648,178,177,648,178,177,84,648,82,84,648,82,85,82,648,85,82,648,453,86,85,453,86,85,85,648,453,85,648,453,556,634,639,556,634,639,419,109,108,419,109,108,145,403,190,145,403,190,421,544,324,421,544,324,498,130,499,498,130,499,498,131,130,498,131,130,566,565,293,566,565,293,201,330,448,201,330,448,625,448,668,625,448,668,625,449,448,625,449,448,634,556,632,634,556,632,556,639,638,556,639,638,421,656,649,421,656,649,315,601,598,315,601,598,315,55,601,315,55,601,669,9,592,669,9,592,669,592,670,669,592,670,664,149,495,664,149,495,518,0,23,518,0,23,263,557,264,263,557,264,557,633,555,557,633,555,557,20,633,557,20,633,555,633,632,555,633,632,578,437,451,578,437,451,639,631,564,639,631,564,233,235,457,233,235,457,671,457,458,671,457,458,378,662,629,378,662,629,623,368,283,623,368,283,623,377,368,623,377,368,643,414,416,643,414,416,411,96,95,411,96,95,203,405,407,203,405,407,203,202,405,203,202,405,204,411,412,204,411,412,204,203,411,204,203,411,672,659,660,672,659,660,672,488,659,672,488,659,659,444,660,659,444,660,2,1,532,2,1,532,437,264,435,437,264,435,673,238,501,673,238,501,89,198,619,89,198,619,529,476,662,529,476,662,662,432,629,662,432,629,662,476,432,662,476,432,366,4,97,366,4,97,366,227,4,366,227,4,558,628,559,558,628,559,673,600,238,673,600,238,636,320,593,636,320,593,636,290,320,636,290,320,623,407,570,623,407,570,533,2,172,533,2,172,545,307,306,545,307,306,545,369,307,545,369,307,545,546,369,545,546,369,416,419,549,416,419,549,445,7,57,445,7,57,655,130,132,655,130,132,224,503,552,224,503,552,622,132,394,622,132,394,584,480,481,584,480,481,108,107,584,108,107,584,10,9,669,10,9,669,164,542,21,164,542,21,291,431,527,291,431,527,674,565,675,674,565,675,456,58,590,456,58,590,456,162,58,456,162,58,294,674,527,294,674,527,294,565,674,294,565,674,456,590,610,456,590,610,676,249,40,676,249,40,497,303,133,497,303,133,637,393,677,637,393,677,583,582,581,583,582,581,678,581,580,678,581,580,389,579,640,389,579,640,679,389,640,679,389,640,680,677,681,680,677,681,586,523,661,586,523,661,586,248,523,586,248,523,585,499,682,585,499,682,683,655,637,683,655,637,412,383,204,412,383,204,412,8,383,412,8,383,642,673,501,642,673,501,148,495,149,148,495,149,440,558,559,440,558,559,440,463,558,440,463,558,224,226,503,224,226,503,224,131,225,224,131,225,372,200,540,372,200,540,19,265,576,19,265,576,19,18,265,19,18,265,684,519,341,684,519,341,685,185,244,685,185,244,181,685,348,181,685,348,517,347,686,517,347,686,494,179,517,494,179,517,497,499,585,497,499,585,677,680,687,677,680,687,343,341,340,343,341,340,688,684,341,688,684,341,682,586,585,682,586,585,680,689,690,680,689,690,688,341,343,688,341,343,685,181,185,685,181,185,684,654,519,684,654,519,244,654,685,244,654,685,686,689,691,686,689,691,246,586,682,246,586,682,246,690,247,246,690,247,499,692,682,499,692,682,663,650,282,663,650,282,571,665,330,571,665,330,571,572,665,571,572,665,387,412,385,387,412,385,239,65,64,239,65,64,136,463,442,136,463,442,664,500,149,664,500,149,657,574,409,657,574,409,625,657,449,625,657,449,657,534,693,657,534,693,657,409,534,657,409,534,683,677,687,683,677,687,637,677,683,637,677,683,499,655,683,499,655,683,499,130,655,499,130,655,328,327,694,328,327,694,326,380,327,326,380,327,439,526,525,439,526,525,439,641,526,439,641,526,641,618,526,641,618,526,645,567,568,645,567,568,498,695,131,498,695,131,628,465,645,628,465,645,628,558,465,628,558,465,498,135,695,498,135,695,646,647,696,646,647,696,646,135,134,646,135,134,372,540,88,372,540,88,597,109,418,597,109,418,151,573,625,151,573,625,151,109,597,151,109,597,668,665,666,668,665,666,668,448,665,668,448,665,665,572,666,665,572,666,247,346,371,247,346,371,586,697,196,586,697,196,246,248,586,246,248,586,563,453,177,563,453,177,395,182,492,395,182,492,524,167,166,524,167,166,642,278,617,642,278,617,300,331,301,300,331,301,127,361,125,127,361,125,80,45,84,80,45,84,80,46,45,80,46,45,429,47,337,429,47,337,429,530,47,429,530,47,286,559,514,286,559,514,286,46,559,286,46,559,489,1,257,489,1,257,599,71,70,599,71,70,698,486,485,698,486,485,698,615,486,698,615,486,599,698,485,599,698,485,697,586,661,697,586,661,575,196,661,575,196,661,697,661,196,697,661,196,661,339,554,661,339,554,661,523,339,661,523,339,528,529,560,528,529,560,528,336,529,528,336,529,629,114,378,629,114,378,629,44,114,629,44,114,114,44,115,114,44,115,653,439,525,653,439,525,594,10,669,594,10,669,667,614,603,667,614,603,380,326,649,380,326,649,653,525,594,653,525,594,653,601,422,653,601,422,619,90,89,619,90,89,619,568,90,619,568,90,386,563,620,386,563,620,25,138,137,25,138,137,136,138,463,136,138,463,138,24,466,138,24,466,271,226,272,271,226,272,271,503,226,271,503,226,695,225,131,695,225,131,695,135,630,695,135,630,699,272,226,699,272,226,699,226,225,699,226,225,472,5,227,472,5,227,531,699,472,531,699,472,557,263,18,557,263,18,120,667,539,120,667,539,614,554,603,614,554,603,614,661,554,614,661,554,500,550,618,500,550,618,500,664,550,500,664,550,312,304,569,312,304,569,688,362,19,688,362,19,635,639,634,635,639,634,635,323,631,635,323,631,20,362,633,20,362,633,700,588,600,700,588,600,491,351,701,491,351,701,491,184,351,491,184,351,287,32,14,287,32,14,32,287,30,32,287,30,198,386,619,198,386,619,198,387,386,198,387,386,386,620,619,386,620,619,627,260,403,627,260,403,686,691,517,686,691,517,691,680,702,691,680,702,691,689,680,691,689,680,582,595,580,582,595,580,389,393,390,389,393,390,349,701,351,349,701,351,588,65,239,588,65,239,588,703,65,588,703,65,505,600,427,505,600,427,617,277,426,617,277,426,617,278,277,617,278,277,578,264,437,578,264,437,578,576,264,578,576,264,348,686,347,348,686,347,348,704,686,348,704,686,693,660,657,693,660,657,693,672,660,693,672,660,488,672,705,488,672,705,706,65,707,706,65,707,708,534,66,708,534,66,706,708,66,706,708,66,693,534,708,693,534,708,395,475,396,395,475,396,591,624,317,591,624,317,638,564,566,638,564,566,679,393,389,679,393,389,323,433,631,323,433,631,631,639,635,631,639,635,283,96,411,283,96,411,172,509,535,172,509,535,508,709,535,508,709,535,693,705,672,693,705,672,508,488,705,508,488,705,705,709,508,705,709,508,637,622,393,637,622,393,446,487,447,446,487,447,499,687,692,499,687,692,499,683,687,499,683,687,529,662,560,529,662,560,529,99,476,529,99,476,529,100,99,529,100,99,249,70,72,249,70,72,507,710,505,507,710,505,247,344,346,247,344,346,18,263,265,18,263,265,568,628,645,568,628,645,568,561,628,568,561,628,447,543,445,447,543,445,447,383,543,447,383,543,676,70,249,676,70,249,698,599,70,698,599,70,698,70,676,698,70,676,711,535,241,711,535,241,711,712,713,711,712,713,713,535,711,713,535,711,243,711,241,243,711,241,714,507,506,714,507,506,587,714,506,587,714,506,587,243,242,587,243,242,587,174,243,587,174,243,468,24,469,468,24,469,138,25,24,138,25,24,421,328,694,421,328,694,421,326,328,421,326,328,553,694,327,553,694,327,640,581,678,640,581,678,640,583,581,640,583,581,681,677,393,681,677,393,533,172,582,533,172,582,175,243,174,175,243,174,712,711,243,712,711,243,678,679,640,678,679,640,715,679,678,715,679,678,716,678,596,716,678,596,715,678,716,715,678,716,492,491,701,492,491,701,493,701,349,493,701,349,517,702,717,517,702,717,517,691,702,517,691,702,679,681,393,679,681,393,679,715,681,679,715,681,367,366,97,367,366,97,233,671,608,233,671,608,556,638,604,556,638,604,614,613,612,614,613,612,616,531,718,616,531,718,531,48,530,531,48,530,377,530,429,377,530,429,272,616,139,272,616,139,272,699,616,272,699,616,616,718,570,616,718,570,623,203,407,623,203,407,718,623,570,718,623,570,109,668,666,109,668,666,668,151,625,668,151,625,668,109,151,668,109,151,625,574,657,625,574,657,719,373,379,719,373,379,473,175,512,473,175,512,720,243,175,720,243,175,535,721,172,535,721,172,582,721,595,582,721,595,582,172,721,582,172,721,720,712,243,720,712,243,678,580,596,678,580,596,596,722,723,596,722,723,696,724,646,696,724,646,647,464,467,647,464,467,647,465,464,647,465,464,467,696,647,467,696,647,724,467,469,724,467,469,696,467,724,696,467,724,135,724,630,135,724,630,135,646,724,135,646,724,148,496,495,148,496,495,380,658,725,380,658,725,380,649,658,380,649,658,726,237,651,726,237,651,127,126,237,127,126,237,19,576,577,19,576,577,595,712,722,595,712,722,595,721,712,595,721,712,601,653,594,601,653,594,727,728,729,727,728,729,727,626,728,727,626,728,454,515,626,454,515,626,729,403,145,729,403,145,729,145,30,729,145,30,728,403,729,728,403,729,727,729,30,727,729,30,287,727,30,287,727,30,65,706,66,65,706,66,708,705,693,708,705,693,702,681,715,702,681,715,702,680,681,702,680,681,644,40,39,644,40,39,667,120,614,667,120,614,642,618,278,642,618,278,673,642,617,673,642,617,617,600,673,617,600,673,730,705,708,730,705,708,709,730,731,709,730,731,709,705,730,709,705,730,709,241,535,709,241,535,709,731,241,709,731,241,703,588,700,703,588,700,505,710,600,505,710,600,587,242,714,587,242,714,710,700,600,710,700,600,242,241,731,242,241,731,703,707,65,703,707,65,730,708,706,730,708,706,730,732,731,730,732,731,706,732,730,706,732,730,733,707,700,733,707,700,703,700,707,703,700,707,732,706,707,732,706,707,733,732,707,733,732,707,507,714,710,507,714,710,732,242,731,732,242,731,732,733,242,732,733,242,733,710,714,733,710,714,242,733,714,242,733,714,177,206,563,177,206,563,453,648,177,453,648,177,602,667,603,602,667,603,695,630,225,695,630,225,562,724,469,562,724,469,225,630,699,225,630,699,472,699,630,472,699,630,630,724,562,630,724,562,647,645,465,647,645,465,646,134,645,646,134,645,710,733,700,710,733,700,167,524,578,167,524,578,644,400,615,644,400,615,676,644,615,676,644,615,676,40,644,676,40,644,698,676,615,698,676,615,721,713,712,721,713,712,721,535,713,721,535,713,596,595,722,596,595,722,720,175,473,720,175,473,722,712,720,722,712,720,473,722,720,473,722,720,734,723,722,734,723,722,734,722,473,734,722,473,717,702,715,717,702,715,395,735,475,395,735,475,395,492,735,395,492,735,735,473,475,735,473,475,735,734,473,735,734,473,517,493,494,517,493,494,517,717,493,517,717,493,736,493,717,736,493,717,717,715,716,717,715,716,723,734,736,723,734,736,723,736,717,723,736,717,493,492,701,493,492,701,736,735,492,736,735,492,736,734,735,736,734,735,736,492,493,736,492,493,716,723,717,716,723,717,716,596,723,716,596,723,610,527,674,610,527,674,291,610,413,291,610,413,291,527,610,291,527,610,522,675,565,522,675,565,456,610,213,456,610,213,598,593,537,598,593,537,598,670,593,598,670,593,592,737,670,592,737,670,592,624,737,592,624,737,594,669,670,594,669,670,594,598,601,594,598,601,594,670,598,594,670,598,60,590,58,60,590,58,591,737,624,591,737,624,670,636,593,670,636,593,60,636,737,60,636,737,210,296,211,210,296,211,210,61,296,210,61,296,591,60,737,591,60,737,591,590,60,591,590,60,522,210,211,522,210,211,522,62,210,522,62,210,737,636,670,737,636,670,610,590,589,610,590,589,522,434,62,522,434,62,211,675,522,211,675,522,211,213,675,211,213,675,674,213,610,674,213,610,674,675,213,674,675,213,531,616,699,531,616,699,283,411,623,283,411,623,531,530,718,531,530,718,718,377,623,718,377,623,718,530,377,718,530,377,644,357,356,644,357,356,109,666,107,109,666,107,584,666,483,584,666,483,584,107,666,584,107,666,728,627,403,728,627,403,728,626,627,728,626,627,727,454,626,727,454,626,727,287,454,727,287,454,544,694,553,544,694,553,544,421,694,544,421,694,738,684,688,738,684,688,348,685,739,348,685,739,740,738,577,740,738,577,704,689,686,704,689,686,739,684,738,739,684,738,739,654,684,739,654,684,739,738,740,739,738,740,739,740,741,739,740,741,577,742,740,577,742,740,738,19,577,738,19,577,323,635,321,323,635,321,692,687,680,692,687,680,689,743,690,689,743,690,742,577,344,742,577,344,692,680,690,692,680,690,690,682,692,690,682,692,690,246,682,690,246,682,690,344,247,690,344,247,742,344,690,742,344,690,743,689,704,743,689,704,741,743,704,741,743,704,362,321,635,362,321,635,362,688,343,362,688,343,362,20,19,362,20,19,688,19,738,688,19,738,348,741,704,348,741,704,348,739,741,348,739,741,654,739,685,654,739,685,740,742,741,740,742,741,741,690,743,741,690,743,742,690,741,742,690,741,342,361,363,342,361,363,342,125,361,342,125,361,719,279,373,719,279,373,651,650,744,651,650,744,663,744,650,663,744,650,663,745,744,663,745,744,611,380,725,611,380,725,745,279,746,745,279,746,745,663,279,745,663,279,747,745,746,747,745,746,608,671,607,608,671,607,746,279,719,746,279,719,747,748,749,747,748,749,750,744,745,750,744,745,750,651,744,750,651,744,608,607,236,608,607,236,234,609,236,234,609,236,233,457,671,233,457,671,671,458,607,671,458,607,606,651,237,606,651,237,726,651,750,726,651,750,746,748,747,746,748,747,747,750,745,747,750,745,747,726,750,747,726,750,751,749,725,751,749,725,747,749,726,747,749,726,379,748,719,379,748,719,379,611,748,379,611,748,746,719,748,746,719,748,611,749,748,611,749,748,611,725,749,611,725,749,725,658,751,725,658,751,127,420,361,127,420,361,656,751,658,656,751,658,127,237,726,127,237,726,127,751,656,127,751,656,726,751,127,726,751,127,726,749,751,726,749,751]}},39:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.default=class{constructor(){this.seed=6}getFloat(){return this.seed=(9301*this.seed+49297)%233280,this.seed/233280}setSeed(t){this.seed=t}}},4:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});class r{constructor(t,e,i,r=1){this.x=t,this.y=e,this.z=i,this.w=r}sub(t){return new r(this.x-t.x,this.y-t.y,this.z-t.z,this.w-t.w)}add(t){return new r(this.x+t.x,this.y+t.y,this.z+t.z,this.w+t.w)}cross(t){return new r(this.y*t.z-this.z*t.y,this.z*t.x-this.x*t.z,this.x*t.y-this.y*t.x,0)}normalize(){const t=1/this.length();return this.mul(t)}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}mul(t){return new r(this.x*t,this.y*t,this.z*t,this.w)}componentWiseMul(t){return new r(this.x*t.x,this.y*t.y,this.z*t.z,this.w*t.w)}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}}e.Vector4f=r},40:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});const r=i(39),o=i(7);e.TextureUtils=class{static generateProceduralNoise(){return new Promise(t=>{const e=new o.Texture;e.texture=new Uint32Array(65536);const i=new r.default;i.setSeed(100);for(let t=0;t<65536;t++){const r=i.getFloat();e.texture[t]=200*r|255*r<<8|205*r<<16|255<<24}e.width=256,e.height=256,t(e)})}static generateProceduralParticleTexture(){return new Promise(t=>{const e=new o.Texture;e.texture=new Uint32Array(65536),(new r.default).setSeed(100);for(let t=0;t<256;t++)for(let i=0;i<256;i++){const r=127-i,o=127-t,n=Math.sqrt(r*r+o*o)/127;let s=1-n;s*=s*s,n>1&&(s=0),s=Math.min(1,2.9*s),e.texture[i+256*t]=15466475|255*s<<24}e.width=256,e.height=256,t(e)})}static generateProceduralParticleTexture2(){return new Promise(t=>{const e=new o.Texture;e.texture=new Uint32Array(65536),(new r.default).setSeed(100);for(let t=0;t<256;t++)for(let i=0;i<256;i++){let r=127-i,o=127-t,n=Math.sqrt(r*r+o*o)/127,s=1-n;s*=s,n>1&&(s=0),s=Math.min(1,40*s),e.texture[i+256*t]=16764415|255*s<<24}e.width=256,e.height=256,t(e)})}static load(t,e){return new Promise(i=>{const r=new Image;r.onload=(()=>{const t=new o.Texture;t.texture=this.getImageData(r,e),t.width=r.width,t.height=r.height,i(t)}),r.onerror=(()=>i()),r.src=t})}static getImageData(t,e=!1){const i=document.createElement("canvas");i.width=t.width,i.height=t.height;const r=i.getContext("2d");r.drawImage(t,0,0);const o=r.getImageData(0,0,t.width,t.height).data,n=new Uint32Array(o.length/4);let s=0;for(let t=0;t<o.length;t+=4)n[s]=e?o[t+3]<<24|o[t+2]<<16|o[t+1]<<8|o[t+0]:255<<24|o[t+2]<<16|o[t+1]<<8|o[t+0],s++;return n}}},41:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=i(7);e.Texture=r.Texture;var o=i(40);e.TextureUtils=o.TextureUtils},5:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.Vertex=class{}},6:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.AbstractClipEdge=class{}},67:function(t,e,i){t.exports=i.p+"f4f2b50d7d886d02949a38f94c217a86.png"},7:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});e.Texture=class{constructor(t,e,i){this.texture=t,this.width=e,this.height=i}getPixel(t,e,i){return t.texture[(255&e)+256*(255&i)]}getBilinearFilteredPixel(t,e){let i=((0|t)%256+256)%256,r=((t+1|0)%256+256)%256,o=((0|e)%256+256)%256,n=((e+1|0)%256+256)%256,s=255&this.getPixel(this,i,o),x=255&this.getPixel(this,r,o),y=255&this.getPixel(this,i,n),a=255&this.getPixel(this,r,n),h=s*(1-(t-Math.floor(t)))+x*(t-Math.floor(t)),z=y*(1-(t-Math.floor(t)))+a*(t-Math.floor(t));return h*(1-(e-Math.floor(e)))+z*(e-Math.floor(e))}getBilinearFilteredPixel2(t,e){let i=Math.min(0|t,this.width-1),r=Math.min(1+(0|t),this.width-1),o=Math.min(0|e,this.height-1),n=Math.min(1+(0|e),this.height-1),s=this.getPixel2(this,i,o),x=this.getPixel2(this,r,o),y=this.getPixel2(this,i,n),a=this.getPixel2(this,r,n);return this.interpolateComp(t,e,255&s,255&x,255&y,255&a)|this.interpolateComp(t,e,s>>8&255,x>>8&255,y>>8&255,a>>8&255)<<8|this.interpolateComp(t,e,s>>16&255,x>>16&255,y>>16&255,a>>16&255)<<16}getPixel2(t,e,i){return this.texture[e+i*this.width]}getPixel3(t,e,i){return this.texture[(e%this.width+this.width)%this.width+(i%this.height+this.height)%this.height*this.width]}interpolateComp(t,e,i,r,o,n){let s=i*(1-(t-Math.floor(t)))+r*(t-Math.floor(t)),x=o*(1-(t-Math.floor(t)))+n*(t-Math.floor(t));return s*(1-(e-Math.floor(e)))+x*(e-Math.floor(e))}}},8:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){t[t.FRONT=0]="FRONT",t[t.BACK=1]="BACK"}(e.CullFace||(e.CullFace={}))},9:function(t,e,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0});class r{constructor(t=0,e=0,i=0,r=255){this.r=t,this.g=e,this.b=i,this.a=r}toPackedFormat(){return this.r|this.g<<8|this.b<<16|this.a<<24}sub(t){return new r(this.r-t.r,this.g-t.g,this.b-t.b,255)}add(t){return new r(this.r+t.r,this.g+t.g,this.b+t.b,255)}div(t){return new r(this.r/t,this.g/t,this.b/t,255)}mul(t){return new r(this.r*t,this.g*t,this.b*t,255)}}r.BLACK=new r(0,0,0,255),r.WHITE=new r(255,255,255,255),r.RED=new r(255,0,0,255),r.GREEN=new r(0,255,0,255),r.LIME=new r(0,255,0,255),r.BLUE=new r(0,0,255,255),r.DARK_BLUE=new r(0,0,64,255),r.YELLOW=new r(255,255,0,255),r.CYAN=new r(0,255,255,255),r.MAGENTA=new r(255,0,255,255),r.SLATE_GRAY=new r(112,128,144,255),r.DARK_GRAY=new r(19,19,20,255),e.Color=r},95:function(t,e,i){t.exports=i.p+"14bd8cd5c9c3b1bcb59e2ec9f4c8ed16.png"}});